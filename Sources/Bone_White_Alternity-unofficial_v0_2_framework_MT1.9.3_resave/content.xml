<net.rptools.maptool.util.PersistenceUtil_-PersistedCampaign>
  <campaign>
    <id>
      <baGUID>wKgBUCxjODpeTwAAACgBAA==</baGUID>
    </id>
    <zones>
      <entry>
        <net.rptools.maptool.model.GUID>
          <baGUID>wKgBUDdjODpfTwAAACgBEA==</baGUID>
        </net.rptools.maptool.model.GUID>
        <net.rptools.maptool.model.Zone>
          <creationTime>1345301537591</creationTime>
          <id reference="../../net.rptools.maptool.model.GUID"/>
          <grid class="net.rptools.maptool.model.SquareGrid">
            <offsetX>0</offsetX>
            <offsetY>0</offsetY>
            <size>50</size>
            <zone reference="../.."/>
            <cellShape>
              <curves>
                <sun.awt.geom.Order0>
                  <direction>1</direction>
                  <x>0.0</x>
                  <y>0.0</y>
                </sun.awt.geom.Order0>
                <sun.awt.geom.Order1>
                  <direction>1</direction>
                  <x0>0.0</x0>
                  <y0>0.0</y0>
                  <x1>0.0</x1>
                  <y1>50.0</y1>
                  <xmin>0.0</xmin>
                  <xmax>0.0</xmax>
                </sun.awt.geom.Order1>
                <sun.awt.geom.Order1>
                  <direction>-1</direction>
                  <x0>50.0</x0>
                  <y0>0.0</y0>
                  <x1>50.0</x1>
                  <y1>50.0</y1>
                  <xmin>50.0</xmin>
                  <xmax>50.0</xmax>
                </sun.awt.geom.Order1>
              </curves>
              <cachedBounds class="java.awt.geom.Rectangle2D$Double">
                <x>0.0</x>
                <y>0.0</y>
                <width>50.0</width>
                <height>50.0</height>
              </cachedBounds>
            </cellShape>
          </grid>
          <gridColor>-16777216</gridColor>
          <imageScaleX>1.0</imageScaleX>
          <imageScaleY>1.0</imageScaleY>
          <tokenVisionDistance>1000</tokenVisionDistance>
          <unitsPerCell>1.0</unitsPerCell>
          <topologyMode>COMBINED</topologyMode>
          <drawables class="linked-list"/>
          <gmDrawables class="linked-list"/>
          <objectDrawables class="linked-list"/>
          <backgroundDrawables class="linked-list"/>
          <labels class="linked-hash-map"/>
          <tokenMap>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBUDdjODpiTwAAACgBEA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.Token>
                <id>
                  <baGUID>wKgBUDdjODpiTwAAACgBEA==</baGUID>
                </id>
                <beingImpersonated>false</beingImpersonated>
                <exposedAreaGUID>
                  <baGUID>wKgBUEy9CTplRQAAAAgBQA==</baGUID>
                </exposedAreaGUID>
                <imageAssetMap>
                  <entry>
                    <null/>
                    <net.rptools.lib.MD5Key>
                      <id>8bd5d42f6f7dca7057a86f790ceecb3c</id>
                    </net.rptools.lib.MD5Key>
                  </entry>
                </imageAssetMap>
                <x>650</x>
                <y>250</y>
                <z>8</z>
                <anchorX>0</anchorX>
                <anchorY>0</anchorY>
                <sizeScale>1.0</sizeScale>
                <lastX>650</lastX>
                <lastY>250</lastY>
                <lastPath>
                  <cellList class="linked-list">
                    <net.rptools.maptool.model.CellPoint>
                      <x>13</x>
                      <y>5</y>
                      <distanceTraveled>0.0</distanceTraveled>
                      <distanceTraveledWithoutTerrain>0.0</distanceTraveledWithoutTerrain>
                      <isAStarCanceled>false</isAStarCanceled>
                    </net.rptools.maptool.model.CellPoint>
                  </cellList>
                  <waypointList class="linked-list">
                    <net.rptools.maptool.model.CellPoint>
                      <x>13</x>
                      <y>5</y>
                      <distanceTraveled>0.0</distanceTraveled>
                      <distanceTraveledWithoutTerrain>0.0</distanceTraveledWithoutTerrain>
                      <isAStarCanceled>false</isAStarCanceled>
                    </net.rptools.maptool.model.CellPoint>
                  </waypointList>
                </lastPath>
                <snapToScale>true</snapToScale>
                <width>200</width>
                <height>200</height>
                <isoWidth>0</isoWidth>
                <isoHeight>0</isoHeight>
                <scaleX>1.0</scaleX>
                <scaleY>1.0</scaleY>
                <sizeMap>
                  <entry>
                    <java-class>net.rptools.maptool.model.SquareGrid</java-class>
                    <net.rptools.maptool.model.GUID>
                      <baGUID>fwABAc9lFSoFAAAAKgABAQ==</baGUID>
                    </net.rptools.maptool.model.GUID>
                  </entry>
                </sizeMap>
                <snapToGrid>true</snapToGrid>
                <isVisible>true</isVisible>
                <visibleOnlyToOwner>false</visibleOnlyToOwner>
                <vblColorSensitivity>0</vblColorSensitivity>
                <alwaysVisibleTolerance>0</alwaysVisibleTolerance>
                <isAlwaysVisible>false</isAlwaysVisible>
                <name>Niall</name>
                <ownerList>
                  <string>Bone White2</string>
                </ownerList>
                <ownerType>0</ownerType>
                <tokenShape>CIRCLE</tokenShape>
                <tokenType>NPC</tokenType>
                <layer>TOKEN</layer>
                <propertyType>Basic</propertyType>
                <facing>90</facing>
                <tokenOpacity>1.0</tokenOpacity>
                <terrainModifier>0.0</terrainModifier>
                <isFlippedX>false</isFlippedX>
                <isFlippedY>false</isFlippedY>
                <sightType>Normal</sightType>
                <hasSight>false</hasSight>
                <state>
                  <entry>
                    <string>Unconcious (Wound)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Dead</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Unconcious (Stun)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Prone</string>
                    <boolean>false</boolean>
                  </entry>
                </state>
                <propertyMapCI>
                  <store>
                    <entry>
                      <string>charsheetintelligencetable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetIntelligenceTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Business%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Business&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Corporate%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Corporate&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Illicit+Business%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Illicit Business&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Small+Business%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Small Business&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Computer+Science%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Computer Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Hacking&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Hardware%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Hardware&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Programming%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Programming&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Demolitions%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Demolitions&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Disarm%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Disarm&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Scratch Built&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Set+Explosives%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Set Explosives&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Knowledge%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Knowledge&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;10/5/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Computer Operation&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Deduce%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Deduce&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:blue&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?First+Aid%2CC0A80150A8AF093A5F45000000080100&quot;&gt;First Aid&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						11/5/2
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Law%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Law&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Court+Procedures%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Court Procedures&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Law+Enforcement%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Law Enforcement&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Life+Science%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Life Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Biology%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Biology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Botany%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Botany&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Genetics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Genetics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Xenology&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Zoology%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Zoology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Medical+Science%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Medical Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Forensics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Forensics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Medical+Knowledge%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Medical Knowledge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Psychology%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Psychology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Surgery&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Treatment&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Navigation%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Navigation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Astrogation Drivespace&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Astrogation+System%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Astrogation System&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Navigation+Surface%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Navigation Surface&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Physical+Science%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Physical Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Astronomy%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Astronomy&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Chemistry%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Chemistry&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Physics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Physics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Planetology%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Planetology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Security%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Security&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Protection+Protocols%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Protection Protocols&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Security+Devices%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Security Devices&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?System+Operation%2CC0A80150A8AF093A5F45000000080100&quot;&gt;System Operation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Communications%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Communications&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Defenses%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Defenses&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Engineering%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Engineering&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Sensors%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Sensors&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Weapons%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Weapons&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Tactics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Tactics&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Infantry+Tactics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Infantry Tactics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Space+Tactics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Space Tactics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Vehicle+Tactics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Vehicle Tactics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Technical+Science%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Technical Science&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Invention%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Invention&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Juryrig%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Juryrig&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Repair%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Repair&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Technical+Knowledge%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Technical Knowledge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rounds since stunned check</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Rounds Since Stunned Check</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>strength</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Strength</key>
                        <value class="string">11</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skill points</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Skill Points</key>
                        <value class="string">2</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>willpower</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Willpower</key>
                        <value class="string">12</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>sprint</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Sprint</key>
                        <value class="string">24</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>run</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Run</key>
                        <value class="string">16</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>actions </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Actions </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun</key>
                        <value class="string">9</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>wound </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Wound </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Broad Skills</key>
                        <value class="string">Athletics, Vehicle Operation, Stamina, Knowledge, Awareness, Interaction</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Skills</key>
                        <value class="string">{&quot;Armor Operation&quot;:{&quot;Name&quot;:&quot;Armor Operation&quot;,&quot;Rank&quot;:0},&quot;Combat Armor&quot;:{&quot;Name&quot;:&quot;Combat Armor&quot;,&quot;Rank&quot;:0},&quot;Powered Armor&quot;:{&quot;Name&quot;:&quot;Powered Armor&quot;,&quot;Rank&quot;:0},&quot;Athletics&quot;:{&quot;Name&quot;:&quot;Athletics&quot;,&quot;Rank&quot;:1},&quot;Climb&quot;:{&quot;Name&quot;:&quot;Climb&quot;,&quot;Rank&quot;:0},&quot;Jump&quot;:{&quot;Name&quot;:&quot;Jump&quot;,&quot;Rank&quot;:0},&quot;Throw&quot;:{&quot;Name&quot;:&quot;Throw&quot;,&quot;Rank&quot;:0},&quot;Heavy Weapons&quot;:{&quot;Name&quot;:&quot;Heavy Weapons&quot;,&quot;Rank&quot;:0},&quot;Direct Fire&quot;:{&quot;Name&quot;:&quot;Direct Fire&quot;,&quot;Rank&quot;:0},&quot;Indirect Fire&quot;:{&quot;Name&quot;:&quot;Indirect Fire&quot;,&quot;Rank&quot;:0},&quot;Melee Weapons&quot;:{&quot;Name&quot;:&quot;Melee Weapons&quot;,&quot;Rank&quot;:0},&quot;Blade&quot;:{&quot;Name&quot;:&quot;Blade&quot;,&quot;Rank&quot;:0},&quot;Bludgeon&quot;:{&quot;Name&quot;:&quot;Bludgeon&quot;,&quot;Rank&quot;:0},&quot;Powered Weapon&quot;:{&quot;Name&quot;:&quot;Powered Weapon&quot;,&quot;Rank&quot;:0},&quot;Unarmed Attack&quot;:{&quot;Name&quot;:&quot;Unarmed Attack&quot;,&quot;Rank&quot;:1},&quot;Brawl&quot;:{&quot;Name&quot;:&quot;Brawl&quot;,&quot;Rank&quot;:3},&quot;Power Martial Arts&quot;:{&quot;Name&quot;:&quot;Power Martial Arts&quot;,&quot;Rank&quot;:0},&quot;Acrobatics&quot;:{&quot;Name&quot;:&quot;Acrobatics&quot;,&quot;Rank&quot;:1},&quot;Daredevil&quot;:{&quot;Name&quot;:&quot;Daredevil&quot;,&quot;Rank&quot;:0},&quot;Defensive Martial Arts&quot;:{&quot;Name&quot;:&quot;Defensive Martial Arts&quot;,&quot;Rank&quot;:0},&quot;Dodge&quot;:{&quot;Name&quot;:&quot;Dodge&quot;,&quot;Rank&quot;:0},&quot;Fall&quot;:{&quot;Name&quot;:&quot;Fall&quot;,&quot;Rank&quot;:0},&quot;Flight&quot;:{&quot;Name&quot;:&quot;Flight&quot;,&quot;Rank&quot;:0},&quot;ZeroG Training&quot;:{&quot;Name&quot;:&quot;ZeroG Training&quot;,&quot;Rank&quot;:0},&quot;Maniuplation&quot;:{&quot;Name&quot;:&quot;Maniuplation&quot;,&quot;Rank&quot;:0},&quot;Lockpick&quot;:{&quot;Name&quot;:&quot;Lockpick&quot;,&quot;Rank&quot;:0},&quot;Pickpocket&quot;:{&quot;Name&quot;:&quot;Pickpocket&quot;,&quot;Rank&quot;:0},&quot;Prestidigitation&quot;:{&quot;Name&quot;:&quot;Prestidigitation&quot;,&quot;Rank&quot;:0},&quot;Ranged Weapons Modern&quot;:{&quot;Name&quot;:&quot;Ranged Weapons Modern&quot;,&quot;Rank&quot;:1},&quot;Pistol&quot;:{&quot;Name&quot;:&quot;Pistol&quot;,&quot;Rank&quot;:3},&quot;Rifle&quot;:{&quot;Name&quot;:&quot;Rifle&quot;,&quot;Rank&quot;:0},&quot;SMG&quot;:{&quot;Name&quot;:&quot;SMG&quot;,&quot;Rank&quot;:0},&quot;Ranged Weapons Primitive&quot;:{&quot;Name&quot;:&quot;Ranged Weapons Primitive&quot;,&quot;Rank&quot;:0},&quot;Bow&quot;:{&quot;Name&quot;:&quot;Bow&quot;,&quot;Rank&quot;:0},&quot;Crossbow&quot;:{&quot;Name&quot;:&quot;Crossbow&quot;,&quot;Rank&quot;:0},&quot;Flintlock&quot;:{&quot;Name&quot;:&quot;Flintlock&quot;,&quot;Rank&quot;:0},&quot;Sling&quot;:{&quot;Name&quot;:&quot;Sling&quot;,&quot;Rank&quot;:0},&quot;Stealth&quot;:{&quot;Name&quot;:&quot;Stealth&quot;,&quot;Rank&quot;:0},&quot;Hide&quot;:{&quot;Name&quot;:&quot;Hide&quot;,&quot;Rank&quot;:0},&quot;Shadow&quot;:{&quot;Name&quot;:&quot;Shadow&quot;,&quot;Rank&quot;:0},&quot;Sneak&quot;:{&quot;Name&quot;:&quot;Sneak&quot;,&quot;Rank&quot;:0},&quot;Vehicle Operation&quot;:{&quot;Name&quot;:&quot;Vehicle Operation&quot;,&quot;Rank&quot;:1},&quot;Air Vehicle&quot;:{&quot;Name&quot;:&quot;Air Vehicle&quot;,&quot;Rank&quot;:0},&quot;Land Vehicle&quot;:{&quot;Name&quot;:&quot;Land Vehicle&quot;,&quot;Rank&quot;:0},&quot;Space Vehicle&quot;:{&quot;Name&quot;:&quot;Space Vehicle&quot;,&quot;Rank&quot;:0},&quot;Water Vehicle&quot;:{&quot;Name&quot;:&quot;Water Vehicle&quot;,&quot;Rank&quot;:0},&quot;Movement&quot;:{&quot;Name&quot;:&quot;Movement&quot;,&quot;Rank&quot;:1},&quot;Race&quot;:{&quot;Name&quot;:&quot;Race&quot;,&quot;Rank&quot;:0},&quot;Swim&quot;:{&quot;Name&quot;:&quot;Swim&quot;,&quot;Rank&quot;:0},&quot;Trailblazing&quot;:{&quot;Name&quot;:&quot;Trailblazing&quot;,&quot;Rank&quot;:0},&quot;Stamina&quot;:{&quot;Name&quot;:&quot;Stamina&quot;,&quot;Rank&quot;:1},&quot;Endurance&quot;:{&quot;Name&quot;:&quot;Endurance&quot;,&quot;Rank&quot;:2},&quot;Resist Pain&quot;:{&quot;Name&quot;:&quot;Resist Pain&quot;,&quot;Rank&quot;:1},&quot;Survival&quot;:{&quot;Name&quot;:&quot;Survival&quot;,&quot;Rank&quot;:0},&quot;Survival Training&quot;:{&quot;Name&quot;:&quot;Survival Training&quot;,&quot;Rank&quot;:0},&quot;Business&quot;:{&quot;Name&quot;:&quot;Business&quot;,&quot;Rank&quot;:0},&quot;Corporate&quot;:{&quot;Name&quot;:&quot;Corporate&quot;,&quot;Rank&quot;:0},&quot;Illicit Business&quot;:{&quot;Name&quot;:&quot;Illicit Business&quot;,&quot;Rank&quot;:0},&quot;Small Business&quot;:{&quot;Name&quot;:&quot;Small Business&quot;,&quot;Rank&quot;:0},&quot;Computer Science&quot;:{&quot;Name&quot;:&quot;Computer Science&quot;,&quot;Rank&quot;:0},&quot;Hacking&quot;:{&quot;Name&quot;:&quot;Hacking&quot;,&quot;Rank&quot;:0},&quot;Hardware&quot;:{&quot;Name&quot;:&quot;Hardware&quot;,&quot;Rank&quot;:0},&quot;Programming&quot;:{&quot;Name&quot;:&quot;Programming&quot;,&quot;Rank&quot;:0},&quot;Demolitions&quot;:{&quot;Name&quot;:&quot;Demolitions&quot;,&quot;Rank&quot;:0},&quot;Disarm&quot;:{&quot;Name&quot;:&quot;Disarm&quot;,&quot;Rank&quot;:0},&quot;Scratch Built&quot;:{&quot;Name&quot;:&quot;Scratch Built&quot;,&quot;Rank&quot;:0},&quot;Set Explosives&quot;:{&quot;Name&quot;:&quot;Set Explosives&quot;,&quot;Rank&quot;:0},&quot;Knowledge&quot;:{&quot;Name&quot;:&quot;Knowledge&quot;,&quot;Rank&quot;:1},&quot;Computer Operation&quot;:{&quot;Name&quot;:&quot;Computer Operation&quot;,&quot;Rank&quot;:0},&quot;Deduce&quot;:{&quot;Name&quot;:&quot;Deduce&quot;,&quot;Rank&quot;:0},&quot;First Aid&quot;:{&quot;Name&quot;:&quot;First Aid&quot;,&quot;Rank&quot;:1},&quot;Law&quot;:{&quot;Name&quot;:&quot;Law&quot;,&quot;Rank&quot;:0},&quot;Court Procedures&quot;:{&quot;Name&quot;:&quot;Court Procedures&quot;,&quot;Rank&quot;:0},&quot;Law Enforcement&quot;:{&quot;Name&quot;:&quot;Law Enforcement&quot;,&quot;Rank&quot;:0},&quot;Life Science&quot;:{&quot;Name&quot;:&quot;Life Science&quot;,&quot;Rank&quot;:0},&quot;Biology&quot;:{&quot;Name&quot;:&quot;Biology&quot;,&quot;Rank&quot;:0},&quot;Botany&quot;:{&quot;Name&quot;:&quot;Botany&quot;,&quot;Rank&quot;:0},&quot;Genetics&quot;:{&quot;Name&quot;:&quot;Genetics&quot;,&quot;Rank&quot;:0},&quot;Xenology&quot;:{&quot;Name&quot;:&quot;Xenology&quot;,&quot;Rank&quot;:0},&quot;Zoology&quot;:{&quot;Name&quot;:&quot;Zoology&quot;,&quot;Rank&quot;:0},&quot;Medical Science&quot;:{&quot;Name&quot;:&quot;Medical Science&quot;,&quot;Rank&quot;:0},&quot;Forensics&quot;:{&quot;Name&quot;:&quot;Forensics&quot;,&quot;Rank&quot;:0},&quot;Medical Knowledge&quot;:{&quot;Name&quot;:&quot;Medical Knowledge&quot;,&quot;Rank&quot;:0},&quot;Psychology&quot;:{&quot;Name&quot;:&quot;Psychology&quot;,&quot;Rank&quot;:0},&quot;Surgery&quot;:{&quot;Name&quot;:&quot;Surgery&quot;,&quot;Rank&quot;:0},&quot;Treatment&quot;:{&quot;Name&quot;:&quot;Treatment&quot;,&quot;Rank&quot;:0},&quot;Navigation&quot;:{&quot;Name&quot;:&quot;Navigation&quot;,&quot;Rank&quot;:0},&quot;Astrogation Drivespace&quot;:{&quot;Name&quot;:&quot;Astrogation Drivespace&quot;,&quot;Rank&quot;:0},&quot;Astrogation System&quot;:{&quot;Name&quot;:&quot;Astrogation System&quot;,&quot;Rank&quot;:0},&quot;Navigation Surface&quot;:{&quot;Name&quot;:&quot;Navigation Surface&quot;,&quot;Rank&quot;:0},&quot;Physical Science&quot;:{&quot;Name&quot;:&quot;Physical Science&quot;,&quot;Rank&quot;:0},&quot;Astronomy&quot;:{&quot;Name&quot;:&quot;Astronomy&quot;,&quot;Rank&quot;:0},&quot;Chemistry&quot;:{&quot;Name&quot;:&quot;Chemistry&quot;,&quot;Rank&quot;:0},&quot;Physics&quot;:{&quot;Name&quot;:&quot;Physics&quot;,&quot;Rank&quot;:0},&quot;Planetology&quot;:{&quot;Name&quot;:&quot;Planetology&quot;,&quot;Rank&quot;:0},&quot;Security&quot;:{&quot;Name&quot;:&quot;Security&quot;,&quot;Rank&quot;:0},&quot;Protection Protocols&quot;:{&quot;Name&quot;:&quot;Protection Protocols&quot;,&quot;Rank&quot;:0},&quot;Security Devices&quot;:{&quot;Name&quot;:&quot;Security Devices&quot;,&quot;Rank&quot;:0},&quot;System Operation&quot;:{&quot;Name&quot;:&quot;System Operation&quot;,&quot;Rank&quot;:0},&quot;Communications&quot;:{&quot;Name&quot;:&quot;Communications&quot;,&quot;Rank&quot;:0},&quot;Defenses&quot;:{&quot;Name&quot;:&quot;Defenses&quot;,&quot;Rank&quot;:0},&quot;Engineering&quot;:{&quot;Name&quot;:&quot;Engineering&quot;,&quot;Rank&quot;:0},&quot;Sensors&quot;:{&quot;Name&quot;:&quot;Sensors&quot;,&quot;Rank&quot;:0},&quot;Weapons&quot;:{&quot;Name&quot;:&quot;Weapons&quot;,&quot;Rank&quot;:0},&quot;Tactics&quot;:{&quot;Name&quot;:&quot;Tactics&quot;,&quot;Rank&quot;:0},&quot;Infantry Tactics&quot;:{&quot;Name&quot;:&quot;Infantry Tactics&quot;,&quot;Rank&quot;:0},&quot;Space Tactics&quot;:{&quot;Name&quot;:&quot;Space Tactics&quot;,&quot;Rank&quot;:0},&quot;Vehicle Tactics&quot;:{&quot;Name&quot;:&quot;Vehicle Tactics&quot;,&quot;Rank&quot;:0},&quot;Technical Science&quot;:{&quot;Name&quot;:&quot;Technical Science&quot;,&quot;Rank&quot;:0},&quot;Invention&quot;:{&quot;Name&quot;:&quot;Invention&quot;,&quot;Rank&quot;:0},&quot;Juryrig&quot;:{&quot;Name&quot;:&quot;Juryrig&quot;,&quot;Rank&quot;:0},&quot;Repair&quot;:{&quot;Name&quot;:&quot;Repair&quot;,&quot;Rank&quot;:0},&quot;Technical Knowledge&quot;:{&quot;Name&quot;:&quot;Technical Knowledge&quot;,&quot;Rank&quot;:0},&quot;Administration&quot;:{&quot;Name&quot;:&quot;Administration&quot;,&quot;Rank&quot;:0},&quot;Bureaucracy&quot;:{&quot;Name&quot;:&quot;Bureaucracy&quot;,&quot;Rank&quot;:0},&quot;Management&quot;:{&quot;Name&quot;:&quot;Management&quot;,&quot;Rank&quot;:0},&quot;Animal Handling&quot;:{&quot;Name&quot;:&quot;Animal Handling&quot;,&quot;Rank&quot;:0},&quot;Animal Riding&quot;:{&quot;Name&quot;:&quot;Animal Riding&quot;,&quot;Rank&quot;:0},&quot;Animal Training&quot;:{&quot;Name&quot;:&quot;Animal Training&quot;,&quot;Rank&quot;:0},&quot;Awareness&quot;:{&quot;Name&quot;:&quot;Awareness&quot;,&quot;Rank&quot;:1},&quot;Intuition&quot;:{&quot;Name&quot;:&quot;Intuition&quot;,&quot;Rank&quot;:0},&quot;Perception&quot;:{&quot;Name&quot;:&quot;Perception&quot;,&quot;Rank&quot;:0},&quot;Creativity&quot;:{&quot;Name&quot;:&quot;Creativity&quot;,&quot;Rank&quot;:0},&quot;Investigate&quot;:{&quot;Name&quot;:&quot;Investigate&quot;,&quot;Rank&quot;:0},&quot;Interrogate&quot;:{&quot;Name&quot;:&quot;Interrogate&quot;,&quot;Rank&quot;:0},&quot;Search&quot;:{&quot;Name&quot;:&quot;Search&quot;,&quot;Rank&quot;:0},&quot;Track&quot;:{&quot;Name&quot;:&quot;Track&quot;,&quot;Rank&quot;:0},&quot;Resolve&quot;:{&quot;Name&quot;:&quot;Resolve&quot;,&quot;Rank&quot;:1},&quot;Mental Resolve&quot;:{&quot;Name&quot;:&quot;Mental Resolve&quot;,&quot;Rank&quot;:1},&quot;Physical Resolve&quot;:{&quot;Name&quot;:&quot;Physical Resolve&quot;,&quot;Rank&quot;:3},&quot;Street Smart&quot;:{&quot;Name&quot;:&quot;Street Smart&quot;,&quot;Rank&quot;:0},&quot;Criminal Elements&quot;:{&quot;Name&quot;:&quot;Criminal Elements&quot;,&quot;Rank&quot;:0},&quot;Street Knowledge&quot;:{&quot;Name&quot;:&quot;Street Knowledge&quot;,&quot;Rank&quot;:0},&quot;Teach&quot;:{&quot;Name&quot;:&quot;Teach&quot;,&quot;Rank&quot;:0},&quot;Culture&quot;:{&quot;Name&quot;:&quot;Culture&quot;,&quot;Rank&quot;:0},&quot;Diplomacy&quot;:{&quot;Name&quot;:&quot;Diplomacy&quot;,&quot;Rank&quot;:0},&quot;Etiquette&quot;:{&quot;Name&quot;:&quot;Etiquette&quot;,&quot;Rank&quot;:0},&quot;First Encounter&quot;:{&quot;Name&quot;:&quot;First Encounter&quot;,&quot;Rank&quot;:0},&quot;Deception&quot;:{&quot;Name&quot;:&quot;Deception&quot;,&quot;Rank&quot;:0},&quot;Bluff&quot;:{&quot;Name&quot;:&quot;Bluff&quot;,&quot;Rank&quot;:0},&quot;Bribe&quot;:{&quot;Name&quot;:&quot;Bribe&quot;,&quot;Rank&quot;:0},&quot;Gamble&quot;:{&quot;Name&quot;:&quot;Gamble&quot;,&quot;Rank&quot;:0},&quot;Entertainment&quot;:{&quot;Name&quot;:&quot;Entertainment&quot;,&quot;Rank&quot;:0},&quot;Act&quot;:{&quot;Name&quot;:&quot;Act&quot;,&quot;Rank&quot;:0},&quot;Dance&quot;:{&quot;Name&quot;:&quot;Dance&quot;,&quot;Rank&quot;:0},&quot;Musical Instrument&quot;:{&quot;Name&quot;:&quot;Musical Instrument&quot;,&quot;Rank&quot;:0},&quot;Sing&quot;:{&quot;Name&quot;:&quot;Sing&quot;,&quot;Rank&quot;:0},&quot;Interaction&quot;:{&quot;Name&quot;:&quot;Interaction&quot;,&quot;Rank&quot;:1},&quot;Bargain&quot;:{&quot;Name&quot;:&quot;Bargain&quot;,&quot;Rank&quot;:0},&quot;Charm&quot;:{&quot;Name&quot;:&quot;Charm&quot;,&quot;Rank&quot;:0},&quot;Interview&quot;:{&quot;Name&quot;:&quot;Interview&quot;,&quot;Rank&quot;:0},&quot;Intimidate&quot;:{&quot;Name&quot;:&quot;Intimidate&quot;,&quot;Rank&quot;:0},&quot;Seduce&quot;:{&quot;Name&quot;:&quot;Seduce&quot;,&quot;Rank&quot;:0},&quot;Taunt&quot;:{&quot;Name&quot;:&quot;Taunt&quot;,&quot;Rank&quot;:0},&quot;Leadership&quot;:{&quot;Name&quot;:&quot;Leadership&quot;,&quot;Rank&quot;:0},&quot;Command&quot;:{&quot;Name&quot;:&quot;Command&quot;,&quot;Rank&quot;:0},&quot;Inspire&quot;:{&quot;Name&quot;:&quot;Inspire&quot;,&quot;Rank&quot;:0},&quot;&quot;:{&quot;Name&quot;:&quot;&quot;,&quot;Rank&quot;:0}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>dual action</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Dual Action</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>fatigue</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Fatigue</key>
                        <value class="string">5</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>last resort info</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Last Resort Info</key>
                        <value class="string">{&quot;Max&quot;:0,&quot;Cost&quot;:1000}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>free broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Free Broad Skills</key>
                        <value class="string">Athletics, Vehicle Operation, Stamina, Knowledge, Awareness, Interaction</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>mortal </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Mortal </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>unarmed statistics</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Unarmed Statistics</key>
                        <value class="string">{&quot;ordinaryQuantity&quot;:1,&quot;ordinarySides&quot;:4,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;ordinaryModifier&quot;:1,&quot;ordinaryType&quot;:&quot;Stun&quot;,&quot;ordinaryString&quot;:&quot;1d4+1&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:4,&quot;goodSign&quot;:&quot;+&quot;,&quot;goodModifier&quot;:2,&quot;goodType&quot;:&quot;Stun&quot;,&quot;goodString&quot;:&quot;1d4+2&quot;,&quot;amazingQuantity&quot;:1,&quot;amazingSides&quot;:4,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingModifier&quot;:3,&quot;amazingType&quot;:&quot;Stun&quot;,&quot;amazingString&quot;:&quot;1d4+3&quot;,&quot;baseDie&quot;:&quot;+d4&quot;,&quot;ordinarySeverity&quot;:&quot;s&quot;,&quot;goodSeverity&quot;:&quot;s&quot;,&quot;amazingSeverity&quot;:&quot;s&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>last resorts</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Last Resorts</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rounds since stunned</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Rounds Since Stunned</key>
                        <value class="string">-1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>profession</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>profession</key>
                        <value class="string">Combat Spec</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>situation bonus</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Situation Bonus</key>
                        <value class="string">Pistol</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>level</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Level</key>
                        <value class="string">1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>equipment</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Equipment</key>
                        <value class="string">{&quot;Head&quot;:&quot;Riot Helmet&quot;,&quot;Head Type&quot;:&quot;Armor&quot;,&quot;Body&quot;:&quot;&quot;,&quot;Body Type&quot;:&quot;&quot;,&quot;Main Hand&quot;:&quot;Pistol 9mm&quot;,&quot;Main Hand Type&quot;:&quot;Weapon&quot;,&quot;Off Hand&quot;:&quot;Pistol .44 magnum&quot;,&quot;Off Hand Type&quot;:&quot;Weapon&quot;,&quot;Accessory&quot;:&quot;&quot;,&quot;Accessory Type&quot;:&quot;&quot;,&quot;Chest&quot;:&quot;Assault Gear&quot;,&quot;Chest Type&quot;:&quot;Armor&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetdexteritytable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetDexterityTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Acrobatics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Acrobatics&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;14/7/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Daredevil%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Daredevil&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Defensive Martial Arts&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Dodge%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Dodge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Fall%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Fall&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Flight%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Flight&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;ZeroG Training&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Manipulation%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Manipulation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;14/7/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Lockpick%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Lockpick&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Pickpocket%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Pickpocket&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Prestidigitation%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Prestidigitation&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Ranged+Weapons+Modern%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Ranged Weapons Modern&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;14/7/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Pistol%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Pistol&lt;/a&gt;&lt;b&gt;&amp;nbsp&amp;nbsp;&amp;#91;-d4&amp;#93;&lt;/b&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						3
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						17/8/4
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Rifle%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Rifle&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?SMG%2CC0A80150A8AF093A5F45000000080100&quot;&gt;SMG&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Ranged+Weapons+Primitive%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Ranged Weapons Primitive&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;7/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Bow%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Bow&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Crossbow%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Crossbow&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Flintlock%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Flintlock&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Sling%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Sling&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Stealth%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Stealth&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;7/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Hide%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Hide&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Shadow%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Shadow&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Sneak%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Sneak&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Vehicle+Operation%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Vehicle Operation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;14/7/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Air Vehicle&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Land+Vehicle%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Land Vehicle&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Space Vehicle&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Water+Vehicle%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Water Vehicle&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						7/3/1
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>intelligence</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Intelligence</key>
                        <value class="string">10</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>modern ranged weapons</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Modern Ranged Weapons</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>additional broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Additional Broad Skills</key>
                        <value class="string">1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetstrengthtable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetStrengthTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Armor+Operation%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Armor Operation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Combat+Armor%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Combat Armor&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Powered Armor&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Athletics%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Athletics&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;11/5/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Climb%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Climb&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Jump%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Jump&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Throw%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Throw&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Heavy+Weapons%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Heavy Weapons&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Direct+Fire%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Direct Fire&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Indirect+Fire%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Indirect Fire&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Melee+Weapons%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Melee Weapons&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Blade%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Blade&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Bludgeon%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Bludgeon&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Powered+Weapon%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Powered Weapon&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Unarmed+Attack%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Unarmed Attack&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;11/5/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Brawl%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Brawl&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						3
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						14/7/3
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Power Martial Arts&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetwillpowertable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetWillpowerTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Administration%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Administration&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Bureaucracy%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Bureaucracy&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Management%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Management&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Animal+Handling%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Animal Handling&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Animal+Riding%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Animal Riding&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Animal+Training%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Animal Training&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Awareness%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Awareness&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;12/6/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Intuition%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Intuition&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Perception%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Perception&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Creativity%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Creativity&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Investigate%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Investigate&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Interrogate%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Interrogate&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Search%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Search&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Track%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Track&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Resolve%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Resolve&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;12/6/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Mental+Resolve%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Mental Resolve&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						13/6/3
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Physical+Resolve%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Physical Resolve&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						3
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						15/7/3
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Street+Smart%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Street Smart&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Criminal+Elements%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Criminal Elements&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Street+Knowledge%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Street Knowledge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Teach%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Teach&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Actions</key>
                        <value class="string">2</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun recovering</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun Recovering</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>natural statistics</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Natural Statistics</key>
                        <value class="string">{&quot;Stun&quot;:9,&quot;Wound&quot;:9,&quot;Mortal&quot;:5,&quot;Fatigue&quot;:5,&quot;Actions Per Round&quot;:2,&quot;Walk&quot;:6,&quot;Run&quot;:16,&quot;Sprint&quot;:24,&quot;Easy Swim&quot;:3,&quot;Swim&quot;:6,&quot;Glide&quot;:0,&quot;Fly&quot;:0}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>constitution</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Constitution</key>
                        <value class="string">9</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>achievement points</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Achievement Points</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>action spent</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Action Spent</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>inventory</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Inventory</key>
                        <value class="string">{&quot;Pistol 9mm&quot;:{&quot;Name&quot;:&quot;Pistol 9mm&quot;,&quot;Quantity&quot;:1,&quot;Type&quot;:&quot;Weapon&quot;},&quot;Pistol .44 magnum&quot;:{&quot;Name&quot;:&quot;Pistol .44 magnum&quot;,&quot;Quantity&quot;:1,&quot;Type&quot;:&quot;Weapon&quot;},&quot;Assault Gear&quot;:{&quot;Name&quot;:&quot;Assault Gear&quot;,&quot;Quantity&quot;:1,&quot;Type&quot;:&quot;Armor&quot;},&quot;Riot Helmet&quot;:{&quot;Name&quot;:&quot;Riot Helmet&quot;,&quot;Quantity&quot;:1,&quot;Type&quot;:&quot;Armor&quot;}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>wound</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Wound</key>
                        <value class="string">9</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>personality</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Personality</key>
                        <value class="string">4</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>mortal</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Mortal</key>
                        <value class="string">5</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>move</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Move</key>
                        <value class="string">Walk: 6</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>race</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Race</key>
                        <value class="string">Human</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>fatigue </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Fatigue </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>pistol</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Pistol</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>specialist skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Specialist Skills</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>dexterity</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Dexterity</key>
                        <value class="string">14</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>disable action</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Disable Action</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetconstitutiontable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetConstitutionTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Movement%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Movement&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;9/4/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Race&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Swim&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Trailblazing%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Trailblazing&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Stamina%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Stamina&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;9/4/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Endurance%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Endurance&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						11/5/2
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Resist+Pain%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Resist Pain&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						10/5/2
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Survival%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Survival&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Survival+Training%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Survival Training&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>money</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Money</key>
                        <value class="string">-2260</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>action check</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Action Check</key>
                        <value class="string">{&quot;Marginal&quot;:16,&quot;Ordinary&quot;:15,&quot;Good&quot;:7,&quot;Amazing&quot;:3}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetpersonalitytable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetPersonalityTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Culture%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Culture&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;2/1/0&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Diplomacy%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Diplomacy&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Etiquette&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;First Encounter&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Deception%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Deception&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;2/1/0&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Bluff%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Bluff&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Bribe%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Bribe&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Gamble%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Gamble&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Entertainment%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Entertainment&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;2/1/0&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Act%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Act&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Dance%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Dance&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Musical Instrument&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Sing%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Sing&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Interaction%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Interaction&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Bargain%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Bargain&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Charm%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Charm&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Interview%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Interview&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Intimidate%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Intimidate&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Seduce%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Seduce&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Taunt%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Taunt&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Leadership%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Leadership&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;2/1/0&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A80150A8AF093A5F45000000080100?Command%2CC0A80150A8AF093A5F45000000080100&quot;&gt;Command&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						2/1/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Inspire&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>refresh character sheet</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Refresh Character Sheet</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>movement</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Movement</key>
                        <value class="string">declared=Walk;walk=6;run=16;sprint=24</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>walk</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Walk</key>
                        <value class="string">6</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                  </store>
                </propertyMapCI>
                <macroPropertiesMap/>
                <speechMap/>
              </net.rptools.maptool.model.Token>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBUDdjODphTwAAACgBEA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.Token>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <beingImpersonated>false</beingImpersonated>
                <exposedAreaGUID>
                  <baGUID>wKgBUMuZBjrhQgAAAAABQA==</baGUID>
                </exposedAreaGUID>
                <imageAssetMap>
                  <entry>
                    <null/>
                    <net.rptools.lib.MD5Key>
                      <id>c4a499da1e97010b2ff20dcdb4e2054f</id>
                    </net.rptools.lib.MD5Key>
                  </entry>
                </imageAssetMap>
                <x>650</x>
                <y>150</y>
                <z>7</z>
                <anchorX>0</anchorX>
                <anchorY>0</anchorY>
                <sizeScale>1.0</sizeScale>
                <lastX>650</lastX>
                <lastY>150</lastY>
                <lastPath>
                  <cellList class="linked-list">
                    <net.rptools.maptool.model.CellPoint>
                      <x>13</x>
                      <y>3</y>
                      <distanceTraveled>0.0</distanceTraveled>
                      <distanceTraveledWithoutTerrain>0.0</distanceTraveledWithoutTerrain>
                      <isAStarCanceled>false</isAStarCanceled>
                    </net.rptools.maptool.model.CellPoint>
                  </cellList>
                  <waypointList class="linked-list">
                    <net.rptools.maptool.model.CellPoint>
                      <x>13</x>
                      <y>3</y>
                      <distanceTraveled>0.0</distanceTraveled>
                      <distanceTraveledWithoutTerrain>0.0</distanceTraveledWithoutTerrain>
                      <isAStarCanceled>false</isAStarCanceled>
                    </net.rptools.maptool.model.CellPoint>
                  </waypointList>
                </lastPath>
                <snapToScale>true</snapToScale>
                <width>200</width>
                <height>200</height>
                <isoWidth>0</isoWidth>
                <isoHeight>0</isoHeight>
                <scaleX>1.0</scaleX>
                <scaleY>1.0</scaleY>
                <sizeMap>
                  <entry>
                    <java-class>net.rptools.maptool.model.SquareGrid</java-class>
                    <net.rptools.maptool.model.GUID>
                      <baGUID>fwABAc9lFSoFAAAAKgABAQ==</baGUID>
                    </net.rptools.maptool.model.GUID>
                  </entry>
                </sizeMap>
                <snapToGrid>true</snapToGrid>
                <isVisible>true</isVisible>
                <visibleOnlyToOwner>false</visibleOnlyToOwner>
                <vblColorSensitivity>0</vblColorSensitivity>
                <alwaysVisibleTolerance>0</alwaysVisibleTolerance>
                <isAlwaysVisible>false</isAlwaysVisible>
                <name>Imogen</name>
                <ownerList>
                  <string>Bone White</string>
                </ownerList>
                <ownerType>0</ownerType>
                <tokenShape>CIRCLE</tokenShape>
                <tokenType>NPC</tokenType>
                <layer>TOKEN</layer>
                <propertyType>Basic</propertyType>
                <facing>-90</facing>
                <tokenOpacity>1.0</tokenOpacity>
                <terrainModifier>0.0</terrainModifier>
                <isFlippedX>false</isFlippedX>
                <isFlippedY>false</isFlippedY>
                <sightType>Normal</sightType>
                <hasSight>false</hasSight>
                <state>
                  <entry>
                    <string>Unconcious (Wound)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Dead</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Unconcious (Stun)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Prone</string>
                    <boolean>false</boolean>
                  </entry>
                </state>
                <propertyMapCI>
                  <store>
                    <entry>
                      <string>charsheetintelligencetable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetIntelligenceTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Business%2CC0A801508889063ADB42000000000100&quot;&gt;Business&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Corporate%2CC0A801508889063ADB42000000000100&quot;&gt;Corporate&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Illicit+Business%2CC0A801508889063ADB42000000000100&quot;&gt;Illicit Business&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Small+Business%2CC0A801508889063ADB42000000000100&quot;&gt;Small Business&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Computer+Science%2CC0A801508889063ADB42000000000100&quot;&gt;Computer Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Hacking&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Hardware%2CC0A801508889063ADB42000000000100&quot;&gt;Hardware&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Programming%2CC0A801508889063ADB42000000000100&quot;&gt;Programming&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Demolitions%2CC0A801508889063ADB42000000000100&quot;&gt;Demolitions&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Disarm%2CC0A801508889063ADB42000000000100&quot;&gt;Disarm&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Scratch Built&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Set+Explosives%2CC0A801508889063ADB42000000000100&quot;&gt;Set Explosives&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Knowledge%2CC0A801508889063ADB42000000000100&quot;&gt;Knowledge&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;8/4/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Computer Operation&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Deduce%2CC0A801508889063ADB42000000000100&quot;&gt;Deduce&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:blue&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?First+Aid%2CC0A801508889063ADB42000000000100&quot;&gt;First Aid&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						9/4/2
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Law%2CC0A801508889063ADB42000000000100&quot;&gt;Law&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Court+Procedures%2CC0A801508889063ADB42000000000100&quot;&gt;Court Procedures&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Law+Enforcement%2CC0A801508889063ADB42000000000100&quot;&gt;Law Enforcement&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Life+Science%2CC0A801508889063ADB42000000000100&quot;&gt;Life Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Biology%2CC0A801508889063ADB42000000000100&quot;&gt;Biology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Botany%2CC0A801508889063ADB42000000000100&quot;&gt;Botany&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Genetics%2CC0A801508889063ADB42000000000100&quot;&gt;Genetics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Xenology&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Zoology%2CC0A801508889063ADB42000000000100&quot;&gt;Zoology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Medical+Science%2CC0A801508889063ADB42000000000100&quot;&gt;Medical Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Forensics%2CC0A801508889063ADB42000000000100&quot;&gt;Forensics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Medical+Knowledge%2CC0A801508889063ADB42000000000100&quot;&gt;Medical Knowledge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Psychology%2CC0A801508889063ADB42000000000100&quot;&gt;Psychology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Surgery&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Treatment&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Navigation%2CC0A801508889063ADB42000000000100&quot;&gt;Navigation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Astrogation Drivespace&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Astrogation+System%2CC0A801508889063ADB42000000000100&quot;&gt;Astrogation System&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Navigation+Surface%2CC0A801508889063ADB42000000000100&quot;&gt;Navigation Surface&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Physical+Science%2CC0A801508889063ADB42000000000100&quot;&gt;Physical Science&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Astronomy%2CC0A801508889063ADB42000000000100&quot;&gt;Astronomy&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Chemistry%2CC0A801508889063ADB42000000000100&quot;&gt;Chemistry&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Physics%2CC0A801508889063ADB42000000000100&quot;&gt;Physics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Planetology%2CC0A801508889063ADB42000000000100&quot;&gt;Planetology&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Security%2CC0A801508889063ADB42000000000100&quot;&gt;Security&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Protection+Protocols%2CC0A801508889063ADB42000000000100&quot;&gt;Protection Protocols&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Security+Devices%2CC0A801508889063ADB42000000000100&quot;&gt;Security Devices&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?System+Operation%2CC0A801508889063ADB42000000000100&quot;&gt;System Operation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Communications%2CC0A801508889063ADB42000000000100&quot;&gt;Communications&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Defenses%2CC0A801508889063ADB42000000000100&quot;&gt;Defenses&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Engineering%2CC0A801508889063ADB42000000000100&quot;&gt;Engineering&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Sensors%2CC0A801508889063ADB42000000000100&quot;&gt;Sensors&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Weapons%2CC0A801508889063ADB42000000000100&quot;&gt;Weapons&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Tactics%2CC0A801508889063ADB42000000000100&quot;&gt;Tactics&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Infantry+Tactics%2CC0A801508889063ADB42000000000100&quot;&gt;Infantry Tactics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Space+Tactics%2CC0A801508889063ADB42000000000100&quot;&gt;Space Tactics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Vehicle+Tactics%2CC0A801508889063ADB42000000000100&quot;&gt;Vehicle Tactics&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Technical+Science%2CC0A801508889063ADB42000000000100&quot;&gt;Technical Science&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Invention%2CC0A801508889063ADB42000000000100&quot;&gt;Invention&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Juryrig%2CC0A801508889063ADB42000000000100&quot;&gt;Juryrig&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Repair%2CC0A801508889063ADB42000000000100&quot;&gt;Repair&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Technical+Knowledge%2CC0A801508889063ADB42000000000100&quot;&gt;Technical Knowledge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rounds since stunned check</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Rounds Since Stunned Check</key>
                        <value class="string">1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>strength</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Strength</key>
                        <value class="string">8</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skill points</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Skill Points</key>
                        <value class="string">12</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>willpower</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Willpower</key>
                        <value class="string">12</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>sprint</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Sprint</key>
                        <value class="string">20</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>run</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Run</key>
                        <value class="string">13</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>actions </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Actions </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun</key>
                        <value class="string">10</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>wound </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Wound </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Broad Skills</key>
                        <value class="string">Athletics, Vehicle Operation, Stamina, Knowledge, Awareness, Interaction</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Skills</key>
                        <value class="string">{&quot;Armor Operation&quot;:{&quot;Name&quot;:&quot;Armor Operation&quot;,&quot;Rank&quot;:0},&quot;Combat Armor&quot;:{&quot;Name&quot;:&quot;Combat Armor&quot;,&quot;Rank&quot;:0},&quot;Powered Armor&quot;:{&quot;Name&quot;:&quot;Powered Armor&quot;,&quot;Rank&quot;:0},&quot;Athletics&quot;:{&quot;Name&quot;:&quot;Athletics&quot;,&quot;Rank&quot;:1},&quot;Climb&quot;:{&quot;Name&quot;:&quot;Climb&quot;,&quot;Rank&quot;:0},&quot;Jump&quot;:{&quot;Name&quot;:&quot;Jump&quot;,&quot;Rank&quot;:0},&quot;Throw&quot;:{&quot;Name&quot;:&quot;Throw&quot;,&quot;Rank&quot;:0},&quot;Heavy Weapons&quot;:{&quot;Name&quot;:&quot;Heavy Weapons&quot;,&quot;Rank&quot;:0},&quot;Direct Fire&quot;:{&quot;Name&quot;:&quot;Direct Fire&quot;,&quot;Rank&quot;:0},&quot;Indirect Fire&quot;:{&quot;Name&quot;:&quot;Indirect Fire&quot;,&quot;Rank&quot;:0},&quot;Melee Weapons&quot;:{&quot;Name&quot;:&quot;Melee Weapons&quot;,&quot;Rank&quot;:0},&quot;Blade&quot;:{&quot;Name&quot;:&quot;Blade&quot;,&quot;Rank&quot;:0},&quot;Bludgeon&quot;:{&quot;Name&quot;:&quot;Bludgeon&quot;,&quot;Rank&quot;:0},&quot;Powered Weapon&quot;:{&quot;Name&quot;:&quot;Powered Weapon&quot;,&quot;Rank&quot;:0},&quot;Unarmed Attack&quot;:{&quot;Name&quot;:&quot;Unarmed Attack&quot;,&quot;Rank&quot;:1},&quot;Brawl&quot;:{&quot;Name&quot;:&quot;Brawl&quot;,&quot;Rank&quot;:1},&quot;Power Martial Arts&quot;:{&quot;Name&quot;:&quot;Power Martial Arts&quot;,&quot;Rank&quot;:0},&quot;Acrobatics&quot;:{&quot;Name&quot;:&quot;Acrobatics&quot;,&quot;Rank&quot;:0},&quot;Daredevil&quot;:{&quot;Name&quot;:&quot;Daredevil&quot;,&quot;Rank&quot;:0},&quot;Defensive Martial Arts&quot;:{&quot;Name&quot;:&quot;Defensive Martial Arts&quot;,&quot;Rank&quot;:0},&quot;Dodge&quot;:{&quot;Name&quot;:&quot;Dodge&quot;,&quot;Rank&quot;:0},&quot;Fall&quot;:{&quot;Name&quot;:&quot;Fall&quot;,&quot;Rank&quot;:0},&quot;Flight&quot;:{&quot;Name&quot;:&quot;Flight&quot;,&quot;Rank&quot;:0},&quot;ZeroG Training&quot;:{&quot;Name&quot;:&quot;ZeroG Training&quot;,&quot;Rank&quot;:0},&quot;Maniuplation&quot;:{&quot;Name&quot;:&quot;Maniuplation&quot;,&quot;Rank&quot;:0},&quot;Lockpick&quot;:{&quot;Name&quot;:&quot;Lockpick&quot;,&quot;Rank&quot;:0},&quot;Pickpocket&quot;:{&quot;Name&quot;:&quot;Pickpocket&quot;,&quot;Rank&quot;:0},&quot;Prestidigitation&quot;:{&quot;Name&quot;:&quot;Prestidigitation&quot;,&quot;Rank&quot;:0},&quot;Ranged Weapons Modern&quot;:{&quot;Name&quot;:&quot;Ranged Weapons Modern&quot;,&quot;Rank&quot;:1},&quot;Pistol&quot;:{&quot;Name&quot;:&quot;Pistol&quot;,&quot;Rank&quot;:1},&quot;Rifle&quot;:{&quot;Name&quot;:&quot;Rifle&quot;,&quot;Rank&quot;:3},&quot;SMG&quot;:{&quot;Name&quot;:&quot;SMG&quot;,&quot;Rank&quot;:0},&quot;Ranged Weapons Primitive&quot;:{&quot;Name&quot;:&quot;Ranged Weapons Primitive&quot;,&quot;Rank&quot;:0},&quot;Bow&quot;:{&quot;Name&quot;:&quot;Bow&quot;,&quot;Rank&quot;:0},&quot;Crossbow&quot;:{&quot;Name&quot;:&quot;Crossbow&quot;,&quot;Rank&quot;:0},&quot;Flintlock&quot;:{&quot;Name&quot;:&quot;Flintlock&quot;,&quot;Rank&quot;:0},&quot;Sling&quot;:{&quot;Name&quot;:&quot;Sling&quot;,&quot;Rank&quot;:0},&quot;Stealth&quot;:{&quot;Name&quot;:&quot;Stealth&quot;,&quot;Rank&quot;:0},&quot;Hide&quot;:{&quot;Name&quot;:&quot;Hide&quot;,&quot;Rank&quot;:0},&quot;Shadow&quot;:{&quot;Name&quot;:&quot;Shadow&quot;,&quot;Rank&quot;:0},&quot;Sneak&quot;:{&quot;Name&quot;:&quot;Sneak&quot;,&quot;Rank&quot;:0},&quot;Vehicle Operation&quot;:{&quot;Name&quot;:&quot;Vehicle Operation&quot;,&quot;Rank&quot;:1},&quot;Air Vehicle&quot;:{&quot;Name&quot;:&quot;Air Vehicle&quot;,&quot;Rank&quot;:0},&quot;Land Vehicle&quot;:{&quot;Name&quot;:&quot;Land Vehicle&quot;,&quot;Rank&quot;:0},&quot;Space Vehicle&quot;:{&quot;Name&quot;:&quot;Space Vehicle&quot;,&quot;Rank&quot;:0},&quot;Water Vehicle&quot;:{&quot;Name&quot;:&quot;Water Vehicle&quot;,&quot;Rank&quot;:0},&quot;Movement&quot;:{&quot;Name&quot;:&quot;Movement&quot;,&quot;Rank&quot;:0},&quot;Race&quot;:{&quot;Name&quot;:&quot;Race&quot;,&quot;Rank&quot;:0},&quot;Swim&quot;:{&quot;Name&quot;:&quot;Swim&quot;,&quot;Rank&quot;:0},&quot;Trailblazing&quot;:{&quot;Name&quot;:&quot;Trailblazing&quot;,&quot;Rank&quot;:0},&quot;Stamina&quot;:{&quot;Name&quot;:&quot;Stamina&quot;,&quot;Rank&quot;:1},&quot;Endurance&quot;:{&quot;Name&quot;:&quot;Endurance&quot;,&quot;Rank&quot;:1},&quot;Resist Pain&quot;:{&quot;Name&quot;:&quot;Resist Pain&quot;,&quot;Rank&quot;:0},&quot;Survival&quot;:{&quot;Name&quot;:&quot;Survival&quot;,&quot;Rank&quot;:0},&quot;Survival Training&quot;:{&quot;Name&quot;:&quot;Survival Training&quot;,&quot;Rank&quot;:0},&quot;Business&quot;:{&quot;Name&quot;:&quot;Business&quot;,&quot;Rank&quot;:0},&quot;Corporate&quot;:{&quot;Name&quot;:&quot;Corporate&quot;,&quot;Rank&quot;:0},&quot;Illicit Business&quot;:{&quot;Name&quot;:&quot;Illicit Business&quot;,&quot;Rank&quot;:0},&quot;Small Business&quot;:{&quot;Name&quot;:&quot;Small Business&quot;,&quot;Rank&quot;:0},&quot;Computer Science&quot;:{&quot;Name&quot;:&quot;Computer Science&quot;,&quot;Rank&quot;:0},&quot;Hacking&quot;:{&quot;Name&quot;:&quot;Hacking&quot;,&quot;Rank&quot;:0},&quot;Hardware&quot;:{&quot;Name&quot;:&quot;Hardware&quot;,&quot;Rank&quot;:0},&quot;Programming&quot;:{&quot;Name&quot;:&quot;Programming&quot;,&quot;Rank&quot;:0},&quot;Demolitions&quot;:{&quot;Name&quot;:&quot;Demolitions&quot;,&quot;Rank&quot;:0},&quot;Disarm&quot;:{&quot;Name&quot;:&quot;Disarm&quot;,&quot;Rank&quot;:0},&quot;Scratch Built&quot;:{&quot;Name&quot;:&quot;Scratch Built&quot;,&quot;Rank&quot;:0},&quot;Set Explosives&quot;:{&quot;Name&quot;:&quot;Set Explosives&quot;,&quot;Rank&quot;:0},&quot;Knowledge&quot;:{&quot;Name&quot;:&quot;Knowledge&quot;,&quot;Rank&quot;:1},&quot;Computer Operation&quot;:{&quot;Name&quot;:&quot;Computer Operation&quot;,&quot;Rank&quot;:0},&quot;Deduce&quot;:{&quot;Name&quot;:&quot;Deduce&quot;,&quot;Rank&quot;:0},&quot;First Aid&quot;:{&quot;Name&quot;:&quot;First Aid&quot;,&quot;Rank&quot;:1},&quot;Law&quot;:{&quot;Name&quot;:&quot;Law&quot;,&quot;Rank&quot;:0},&quot;Court Procedures&quot;:{&quot;Name&quot;:&quot;Court Procedures&quot;,&quot;Rank&quot;:0},&quot;Law Enforcement&quot;:{&quot;Name&quot;:&quot;Law Enforcement&quot;,&quot;Rank&quot;:0},&quot;Life Science&quot;:{&quot;Name&quot;:&quot;Life Science&quot;,&quot;Rank&quot;:0},&quot;Biology&quot;:{&quot;Name&quot;:&quot;Biology&quot;,&quot;Rank&quot;:0},&quot;Botany&quot;:{&quot;Name&quot;:&quot;Botany&quot;,&quot;Rank&quot;:0},&quot;Genetics&quot;:{&quot;Name&quot;:&quot;Genetics&quot;,&quot;Rank&quot;:0},&quot;Xenology&quot;:{&quot;Name&quot;:&quot;Xenology&quot;,&quot;Rank&quot;:0},&quot;Zoology&quot;:{&quot;Name&quot;:&quot;Zoology&quot;,&quot;Rank&quot;:0},&quot;Medical Science&quot;:{&quot;Name&quot;:&quot;Medical Science&quot;,&quot;Rank&quot;:0},&quot;Forensics&quot;:{&quot;Name&quot;:&quot;Forensics&quot;,&quot;Rank&quot;:0},&quot;Medical Knowledge&quot;:{&quot;Name&quot;:&quot;Medical Knowledge&quot;,&quot;Rank&quot;:0},&quot;Psychology&quot;:{&quot;Name&quot;:&quot;Psychology&quot;,&quot;Rank&quot;:0},&quot;Surgery&quot;:{&quot;Name&quot;:&quot;Surgery&quot;,&quot;Rank&quot;:0},&quot;Treatment&quot;:{&quot;Name&quot;:&quot;Treatment&quot;,&quot;Rank&quot;:0},&quot;Navigation&quot;:{&quot;Name&quot;:&quot;Navigation&quot;,&quot;Rank&quot;:0},&quot;Astrogation Drivespace&quot;:{&quot;Name&quot;:&quot;Astrogation Drivespace&quot;,&quot;Rank&quot;:0},&quot;Astrogation System&quot;:{&quot;Name&quot;:&quot;Astrogation System&quot;,&quot;Rank&quot;:0},&quot;Navigation Surface&quot;:{&quot;Name&quot;:&quot;Navigation Surface&quot;,&quot;Rank&quot;:0},&quot;Physical Science&quot;:{&quot;Name&quot;:&quot;Physical Science&quot;,&quot;Rank&quot;:0},&quot;Astronomy&quot;:{&quot;Name&quot;:&quot;Astronomy&quot;,&quot;Rank&quot;:0},&quot;Chemistry&quot;:{&quot;Name&quot;:&quot;Chemistry&quot;,&quot;Rank&quot;:0},&quot;Physics&quot;:{&quot;Name&quot;:&quot;Physics&quot;,&quot;Rank&quot;:0},&quot;Planetology&quot;:{&quot;Name&quot;:&quot;Planetology&quot;,&quot;Rank&quot;:0},&quot;Security&quot;:{&quot;Name&quot;:&quot;Security&quot;,&quot;Rank&quot;:0},&quot;Protection Protocols&quot;:{&quot;Name&quot;:&quot;Protection Protocols&quot;,&quot;Rank&quot;:0},&quot;Security Devices&quot;:{&quot;Name&quot;:&quot;Security Devices&quot;,&quot;Rank&quot;:0},&quot;System Operation&quot;:{&quot;Name&quot;:&quot;System Operation&quot;,&quot;Rank&quot;:0},&quot;Communications&quot;:{&quot;Name&quot;:&quot;Communications&quot;,&quot;Rank&quot;:0},&quot;Defenses&quot;:{&quot;Name&quot;:&quot;Defenses&quot;,&quot;Rank&quot;:0},&quot;Engineering&quot;:{&quot;Name&quot;:&quot;Engineering&quot;,&quot;Rank&quot;:0},&quot;Sensors&quot;:{&quot;Name&quot;:&quot;Sensors&quot;,&quot;Rank&quot;:0},&quot;Weapons&quot;:{&quot;Name&quot;:&quot;Weapons&quot;,&quot;Rank&quot;:0},&quot;Tactics&quot;:{&quot;Name&quot;:&quot;Tactics&quot;,&quot;Rank&quot;:0},&quot;Infantry Tactics&quot;:{&quot;Name&quot;:&quot;Infantry Tactics&quot;,&quot;Rank&quot;:0},&quot;Space Tactics&quot;:{&quot;Name&quot;:&quot;Space Tactics&quot;,&quot;Rank&quot;:0},&quot;Vehicle Tactics&quot;:{&quot;Name&quot;:&quot;Vehicle Tactics&quot;,&quot;Rank&quot;:0},&quot;Technical Science&quot;:{&quot;Name&quot;:&quot;Technical Science&quot;,&quot;Rank&quot;:0},&quot;Invention&quot;:{&quot;Name&quot;:&quot;Invention&quot;,&quot;Rank&quot;:0},&quot;Juryrig&quot;:{&quot;Name&quot;:&quot;Juryrig&quot;,&quot;Rank&quot;:0},&quot;Repair&quot;:{&quot;Name&quot;:&quot;Repair&quot;,&quot;Rank&quot;:0},&quot;Technical Knowledge&quot;:{&quot;Name&quot;:&quot;Technical Knowledge&quot;,&quot;Rank&quot;:0},&quot;Administration&quot;:{&quot;Name&quot;:&quot;Administration&quot;,&quot;Rank&quot;:0},&quot;Bureaucracy&quot;:{&quot;Name&quot;:&quot;Bureaucracy&quot;,&quot;Rank&quot;:0},&quot;Management&quot;:{&quot;Name&quot;:&quot;Management&quot;,&quot;Rank&quot;:0},&quot;Animal Handling&quot;:{&quot;Name&quot;:&quot;Animal Handling&quot;,&quot;Rank&quot;:0},&quot;Animal Riding&quot;:{&quot;Name&quot;:&quot;Animal Riding&quot;,&quot;Rank&quot;:0},&quot;Animal Training&quot;:{&quot;Name&quot;:&quot;Animal Training&quot;,&quot;Rank&quot;:0},&quot;Awareness&quot;:{&quot;Name&quot;:&quot;Awareness&quot;,&quot;Rank&quot;:1},&quot;Intuition&quot;:{&quot;Name&quot;:&quot;Intuition&quot;,&quot;Rank&quot;:0},&quot;Perception&quot;:{&quot;Name&quot;:&quot;Perception&quot;,&quot;Rank&quot;:0},&quot;Creativity&quot;:{&quot;Name&quot;:&quot;Creativity&quot;,&quot;Rank&quot;:0},&quot;Investigate&quot;:{&quot;Name&quot;:&quot;Investigate&quot;,&quot;Rank&quot;:0},&quot;Interrogate&quot;:{&quot;Name&quot;:&quot;Interrogate&quot;,&quot;Rank&quot;:0},&quot;Search&quot;:{&quot;Name&quot;:&quot;Search&quot;,&quot;Rank&quot;:0},&quot;Track&quot;:{&quot;Name&quot;:&quot;Track&quot;,&quot;Rank&quot;:0},&quot;Resolve&quot;:{&quot;Name&quot;:&quot;Resolve&quot;,&quot;Rank&quot;:1},&quot;Mental Resolve&quot;:{&quot;Name&quot;:&quot;Mental Resolve&quot;,&quot;Rank&quot;:1},&quot;Physical Resolve&quot;:{&quot;Name&quot;:&quot;Physical Resolve&quot;,&quot;Rank&quot;:1},&quot;Street Smart&quot;:{&quot;Name&quot;:&quot;Street Smart&quot;,&quot;Rank&quot;:0},&quot;Criminal Elements&quot;:{&quot;Name&quot;:&quot;Criminal Elements&quot;,&quot;Rank&quot;:0},&quot;Street Knowledge&quot;:{&quot;Name&quot;:&quot;Street Knowledge&quot;,&quot;Rank&quot;:0},&quot;Teach&quot;:{&quot;Name&quot;:&quot;Teach&quot;,&quot;Rank&quot;:0},&quot;Culture&quot;:{&quot;Name&quot;:&quot;Culture&quot;,&quot;Rank&quot;:0},&quot;Diplomacy&quot;:{&quot;Name&quot;:&quot;Diplomacy&quot;,&quot;Rank&quot;:0},&quot;Etiquette&quot;:{&quot;Name&quot;:&quot;Etiquette&quot;,&quot;Rank&quot;:0},&quot;First Encounter&quot;:{&quot;Name&quot;:&quot;First Encounter&quot;,&quot;Rank&quot;:0},&quot;Deception&quot;:{&quot;Name&quot;:&quot;Deception&quot;,&quot;Rank&quot;:0},&quot;Bluff&quot;:{&quot;Name&quot;:&quot;Bluff&quot;,&quot;Rank&quot;:0},&quot;Bribe&quot;:{&quot;Name&quot;:&quot;Bribe&quot;,&quot;Rank&quot;:0},&quot;Gamble&quot;:{&quot;Name&quot;:&quot;Gamble&quot;,&quot;Rank&quot;:0},&quot;Entertainment&quot;:{&quot;Name&quot;:&quot;Entertainment&quot;,&quot;Rank&quot;:0},&quot;Act&quot;:{&quot;Name&quot;:&quot;Act&quot;,&quot;Rank&quot;:0},&quot;Dance&quot;:{&quot;Name&quot;:&quot;Dance&quot;,&quot;Rank&quot;:0},&quot;Musical Instrument&quot;:{&quot;Name&quot;:&quot;Musical Instrument&quot;,&quot;Rank&quot;:0},&quot;Sing&quot;:{&quot;Name&quot;:&quot;Sing&quot;,&quot;Rank&quot;:0},&quot;Interaction&quot;:{&quot;Name&quot;:&quot;Interaction&quot;,&quot;Rank&quot;:1},&quot;Bargain&quot;:{&quot;Name&quot;:&quot;Bargain&quot;,&quot;Rank&quot;:0},&quot;Charm&quot;:{&quot;Name&quot;:&quot;Charm&quot;,&quot;Rank&quot;:0},&quot;Interview&quot;:{&quot;Name&quot;:&quot;Interview&quot;,&quot;Rank&quot;:0},&quot;Intimidate&quot;:{&quot;Name&quot;:&quot;Intimidate&quot;,&quot;Rank&quot;:0},&quot;Seduce&quot;:{&quot;Name&quot;:&quot;Seduce&quot;,&quot;Rank&quot;:0},&quot;Taunt&quot;:{&quot;Name&quot;:&quot;Taunt&quot;,&quot;Rank&quot;:0},&quot;Leadership&quot;:{&quot;Name&quot;:&quot;Leadership&quot;,&quot;Rank&quot;:0},&quot;Command&quot;:{&quot;Name&quot;:&quot;Command&quot;,&quot;Rank&quot;:0},&quot;Inspire&quot;:{&quot;Name&quot;:&quot;Inspire&quot;,&quot;Rank&quot;:0},&quot;&quot;:{&quot;Name&quot;:&quot;&quot;,&quot;Rank&quot;:0}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>dual action</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Dual Action</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>fatigue</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Fatigue</key>
                        <value class="string">5</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>last resort info</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Last Resort Info</key>
                        <value class="string">{&quot;Max&quot;:1,&quot;Cost&quot;:3}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>free broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Free Broad Skills</key>
                        <value class="string">Athletics, Vehicle Operation, Stamina, Knowledge, Awareness, Interaction</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>mortal </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Mortal </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>unarmed statistics</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Unarmed Statistics</key>
                        <value class="string">{&quot;ordinaryQuantity&quot;:1,&quot;ordinarySides&quot;:4,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;ordinaryModifier&quot;:0,&quot;ordinaryType&quot;:&quot;Stun&quot;,&quot;ordinaryString&quot;:&quot;1d4+0&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:4,&quot;goodSign&quot;:&quot;+&quot;,&quot;goodModifier&quot;:1,&quot;goodType&quot;:&quot;Stun&quot;,&quot;goodString&quot;:&quot;1d4+1&quot;,&quot;amazingQuantity&quot;:1,&quot;amazingSides&quot;:4,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingModifier&quot;:2,&quot;amazingType&quot;:&quot;Stun&quot;,&quot;amazingString&quot;:&quot;1d4+2&quot;,&quot;baseDie&quot;:&quot;+d4&quot;,&quot;ordinarySeverity&quot;:&quot;s&quot;,&quot;goodSeverity&quot;:&quot;s&quot;,&quot;amazingSeverity&quot;:&quot;s&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>last resorts</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Last Resorts</key>
                        <value class="string">1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rounds since stunned</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Rounds Since Stunned</key>
                        <value class="string">-1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>profession</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>profession</key>
                        <value class="string">Free Agent</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>situation bonus</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Situation Bonus</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>level</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Level</key>
                        <value class="string">1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>equipment</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Equipment</key>
                        <value class="string">{&quot;Head&quot;:&quot;&quot;,&quot;Head Type&quot;:&quot;&quot;,&quot;Body&quot;:&quot;&quot;,&quot;Body Type&quot;:&quot;&quot;,&quot;Main Hand&quot;:&quot;Assault Rifle&quot;,&quot;Main Hand Type&quot;:&quot;Weapon&quot;,&quot;Off Hand&quot;:&quot;Assault Rifle&quot;,&quot;Off Hand Type&quot;:&quot;Weapon&quot;,&quot;Accessory&quot;:&quot;&quot;,&quot;Accessory Type&quot;:&quot;&quot;,&quot;Chest&quot;:&quot;Battle Vest&quot;,&quot;Chest Type&quot;:&quot;Armor&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetdexteritytable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetDexterityTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Acrobatics%2CC0A801508889063ADB42000000000100&quot;&gt;Acrobatics&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Daredevil%2CC0A801508889063ADB42000000000100&quot;&gt;Daredevil&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Defensive Martial Arts&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Dodge%2CC0A801508889063ADB42000000000100&quot;&gt;Dodge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Fall%2CC0A801508889063ADB42000000000100&quot;&gt;Fall&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Flight%2CC0A801508889063ADB42000000000100&quot;&gt;Flight&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;ZeroG Training&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Manipulation%2CC0A801508889063ADB42000000000100&quot;&gt;Manipulation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;12/6/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Lockpick%2CC0A801508889063ADB42000000000100&quot;&gt;Lockpick&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Pickpocket%2CC0A801508889063ADB42000000000100&quot;&gt;Pickpocket&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Prestidigitation%2CC0A801508889063ADB42000000000100&quot;&gt;Prestidigitation&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Ranged+Weapons+Modern%2CC0A801508889063ADB42000000000100&quot;&gt;Ranged Weapons Modern&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;12/6/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Pistol%2CC0A801508889063ADB42000000000100&quot;&gt;Pistol&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						13/6/3
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Rifle%2CC0A801508889063ADB42000000000100&quot;&gt;Rifle&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						3
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						15/7/3
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?SMG%2CC0A801508889063ADB42000000000100&quot;&gt;SMG&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Ranged+Weapons+Primitive%2CC0A801508889063ADB42000000000100&quot;&gt;Ranged Weapons Primitive&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Bow%2CC0A801508889063ADB42000000000100&quot;&gt;Bow&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Crossbow%2CC0A801508889063ADB42000000000100&quot;&gt;Crossbow&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Flintlock%2CC0A801508889063ADB42000000000100&quot;&gt;Flintlock&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Sling%2CC0A801508889063ADB42000000000100&quot;&gt;Sling&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Stealth%2CC0A801508889063ADB42000000000100&quot;&gt;Stealth&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Hide%2CC0A801508889063ADB42000000000100&quot;&gt;Hide&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Shadow%2CC0A801508889063ADB42000000000100&quot;&gt;Shadow&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Sneak%2CC0A801508889063ADB42000000000100&quot;&gt;Sneak&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Vehicle+Operation%2CC0A801508889063ADB42000000000100&quot;&gt;Vehicle Operation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;12/6/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Air Vehicle&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Land+Vehicle%2CC0A801508889063ADB42000000000100&quot;&gt;Land Vehicle&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Space Vehicle&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Water+Vehicle%2CC0A801508889063ADB42000000000100&quot;&gt;Water Vehicle&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>intelligence</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Intelligence</key>
                        <value class="string">8</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>modern ranged weapons</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Modern Ranged Weapons</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>additional broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Additional Broad Skills</key>
                        <value class="string">3</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetstrengthtable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetStrengthTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Armor+Operation%2CC0A801508889063ADB42000000000100&quot;&gt;Armor Operation&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Combat+Armor%2CC0A801508889063ADB42000000000100&quot;&gt;Combat Armor&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Powered Armor&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Athletics%2CC0A801508889063ADB42000000000100&quot;&gt;Athletics&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;8/4/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Climb%2CC0A801508889063ADB42000000000100&quot;&gt;Climb&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Jump%2CC0A801508889063ADB42000000000100&quot;&gt;Jump&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Throw%2CC0A801508889063ADB42000000000100&quot;&gt;Throw&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Heavy+Weapons%2CC0A801508889063ADB42000000000100&quot;&gt;Heavy Weapons&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Direct+Fire%2CC0A801508889063ADB42000000000100&quot;&gt;Direct Fire&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Indirect+Fire%2CC0A801508889063ADB42000000000100&quot;&gt;Indirect Fire&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Melee+Weapons%2CC0A801508889063ADB42000000000100&quot;&gt;Melee Weapons&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;4/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Blade%2CC0A801508889063ADB42000000000100&quot;&gt;Blade&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Bludgeon%2CC0A801508889063ADB42000000000100&quot;&gt;Bludgeon&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Powered+Weapon%2CC0A801508889063ADB42000000000100&quot;&gt;Powered Weapon&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						4/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Unarmed+Attack%2CC0A801508889063ADB42000000000100&quot;&gt;Unarmed Attack&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;8/4/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Brawl%2CC0A801508889063ADB42000000000100&quot;&gt;Brawl&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						9/4/2
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Power Martial Arts&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetwillpowertable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetWillpowerTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Administration%2CC0A801508889063ADB42000000000100&quot;&gt;Administration&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Bureaucracy%2CC0A801508889063ADB42000000000100&quot;&gt;Bureaucracy&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Management%2CC0A801508889063ADB42000000000100&quot;&gt;Management&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Animal+Handling%2CC0A801508889063ADB42000000000100&quot;&gt;Animal Handling&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Animal+Riding%2CC0A801508889063ADB42000000000100&quot;&gt;Animal Riding&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Animal+Training%2CC0A801508889063ADB42000000000100&quot;&gt;Animal Training&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Awareness%2CC0A801508889063ADB42000000000100&quot;&gt;Awareness&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;12/6/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Intuition%2CC0A801508889063ADB42000000000100&quot;&gt;Intuition&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Perception%2CC0A801508889063ADB42000000000100&quot;&gt;Perception&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Creativity%2CC0A801508889063ADB42000000000100&quot;&gt;Creativity&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Investigate%2CC0A801508889063ADB42000000000100&quot;&gt;Investigate&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Interrogate%2CC0A801508889063ADB42000000000100&quot;&gt;Interrogate&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Search%2CC0A801508889063ADB42000000000100&quot;&gt;Search&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Track%2CC0A801508889063ADB42000000000100&quot;&gt;Track&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Resolve%2CC0A801508889063ADB42000000000100&quot;&gt;Resolve&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;12/6/3&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Mental+Resolve%2CC0A801508889063ADB42000000000100&quot;&gt;Mental Resolve&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						13/6/3
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Physical+Resolve%2CC0A801508889063ADB42000000000100&quot;&gt;Physical Resolve&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						13/6/3
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Street+Smart%2CC0A801508889063ADB42000000000100&quot;&gt;Street Smart&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Criminal+Elements%2CC0A801508889063ADB42000000000100&quot;&gt;Criminal Elements&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Street+Knowledge%2CC0A801508889063ADB42000000000100&quot;&gt;Street Knowledge&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						6/3/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Teach%2CC0A801508889063ADB42000000000100&quot;&gt;Teach&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;6/3/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Actions</key>
                        <value class="string">2</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun recovering</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun Recovering</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>natural statistics</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Natural Statistics</key>
                        <value class="string">{&quot;Stun&quot;:10,&quot;Wound&quot;:10,&quot;Mortal&quot;:5,&quot;Fatigue&quot;:5,&quot;Actions Per Round&quot;:2,&quot;Walk&quot;:5,&quot;Run&quot;:13,&quot;Sprint&quot;:20,&quot;Easy Swim&quot;:2,&quot;Swim&quot;:4,&quot;Glide&quot;:0,&quot;Fly&quot;:0}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>constitution</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Constitution</key>
                        <value class="string">10</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>achievement points</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Achievement Points</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>action spent</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Action Spent</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>inventory</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Inventory</key>
                        <value class="string">{&quot;Assault Rifle&quot;:{&quot;Name&quot;:&quot;Assault Rifle&quot;,&quot;Quantity&quot;:3,&quot;Type&quot;:&quot;Weapon&quot;},&quot;Battle Vest&quot;:{&quot;Name&quot;:&quot;Battle Vest&quot;,&quot;Quantity&quot;:1,&quot;Type&quot;:&quot;Armor&quot;}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>wound</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Wound</key>
                        <value class="string">10</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>personality</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Personality</key>
                        <value class="string">10</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>mortal</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Mortal</key>
                        <value class="string">5</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>move</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Move</key>
                        <value class="string">Walk: 5</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>race</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Race</key>
                        <value class="string">Human</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>fatigue </string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Fatigue </key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>pistol</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Pistol</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>specialist skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Specialist Skills</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>dexterity</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Dexterity</key>
                        <value class="string">12</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>disable action</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Disable Action</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetconstitutiontable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetConstitutionTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Movement%2CC0A801508889063ADB42000000000100&quot;&gt;Movement&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Race&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Swim&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Trailblazing%2CC0A801508889063ADB42000000000100&quot;&gt;Trailblazing&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Stamina%2CC0A801508889063ADB42000000000100&quot;&gt;Stamina&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;10/5/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Endurance%2CC0A801508889063ADB42000000000100&quot;&gt;Endurance&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						1
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						11/5/2
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Resist+Pain%2CC0A801508889063ADB42000000000100&quot;&gt;Resist Pain&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Survival%2CC0A801508889063ADB42000000000100&quot;&gt;Survival&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Survival+Training%2CC0A801508889063ADB42000000000100&quot;&gt;Survival Training&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>money</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Money</key>
                        <value class="string">-3340</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>action check</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Action Check</key>
                        <value class="string">{&quot;Marginal&quot;:13,&quot;Ordinary&quot;:12,&quot;Good&quot;:6,&quot;Amazing&quot;:3}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charsheetpersonalitytable</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>charSheetPersonalityTable</key>
                        <value class="string">
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Culture%2CC0A801508889063ADB42000000000100&quot;&gt;Culture&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Diplomacy%2CC0A801508889063ADB42000000000100&quot;&gt;Diplomacy&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Etiquette&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;First Encounter&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Deception%2CC0A801508889063ADB42000000000100&quot;&gt;Deception&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Bluff%2CC0A801508889063ADB42000000000100&quot;&gt;Bluff&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Bribe%2CC0A801508889063ADB42000000000100&quot;&gt;Bribe&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Gamble%2CC0A801508889063ADB42000000000100&quot;&gt;Gamble&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Entertainment%2CC0A801508889063ADB42000000000100&quot;&gt;Entertainment&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Act%2CC0A801508889063ADB42000000000100&quot;&gt;Act&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Dance%2CC0A801508889063ADB42000000000100&quot;&gt;Dance&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Musical Instrument&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Sing%2CC0A801508889063ADB42000000000100&quot;&gt;Sing&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Interaction%2CC0A801508889063ADB42000000000100&quot;&gt;Interaction&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;1&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;10/5/2&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Bargain%2CC0A801508889063ADB42000000000100&quot;&gt;Bargain&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Charm%2CC0A801508889063ADB42000000000100&quot;&gt;Charm&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Interview%2CC0A801508889063ADB42000000000100&quot;&gt;Interview&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Intimidate%2CC0A801508889063ADB42000000000100&quot;&gt;Intimidate&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Seduce%2CC0A801508889063ADB42000000000100&quot;&gt;Seduce&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Taunt%2CC0A801508889063ADB42000000000100&quot;&gt;Taunt&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Leadership%2CC0A801508889063ADB42000000000100&quot;&gt;Leadership&lt;/a&gt;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;0&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;5/2/1&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;a style=&quot;color:black&quot; href=&quot;macro://skillCheckSpecific@Lib:bw/none/C0A801508889063ADB42000000000100?Command%2CC0A801508889063ADB42000000000100&quot;&gt;Command&lt;/a&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						5/2/1
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&lt;font color=blue&gt;Inspire&lt;/font&gt;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						0/0/0
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>refresh character sheet</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Refresh Character Sheet</key>
                        <value class="string">0</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>movement</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Movement</key>
                        <value class="string">declared=Walk;walk=5;run=13;sprint=20</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>walk</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Walk</key>
                        <value class="string">5</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                  </store>
                </propertyMapCI>
                <macroPropertiesMap/>
                <speechMap/>
              </net.rptools.maptool.model.Token>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBUDhjODpjTwAAACgBEA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.Token>
                <id>
                  <baGUID>wKgBUDhjODpjTwAAACgBEA==</baGUID>
                </id>
                <beingImpersonated>false</beingImpersonated>
                <exposedAreaGUID>
                  <baGUID>wKgBT3ONpv4sAgAAwKABQw==</baGUID>
                </exposedAreaGUID>
                <imageAssetMap>
                  <entry>
                    <null/>
                    <net.rptools.lib.MD5Key>
                      <id>fd221c6d0735588c472f8d0a0324e911</id>
                    </net.rptools.lib.MD5Key>
                  </entry>
                </imageAssetMap>
                <x>300</x>
                <y>100</y>
                <z>2</z>
                <anchorX>0</anchorX>
                <anchorY>0</anchorY>
                <sizeScale>1.0</sizeScale>
                <lastX>300</lastX>
                <lastY>100</lastY>
                <lastPath>
                  <cellList class="linked-list">
                    <net.rptools.maptool.model.CellPoint>
                      <x>6</x>
                      <y>2</y>
                      <distanceTraveled>0.0</distanceTraveled>
                      <distanceTraveledWithoutTerrain>0.0</distanceTraveledWithoutTerrain>
                      <isAStarCanceled>false</isAStarCanceled>
                    </net.rptools.maptool.model.CellPoint>
                  </cellList>
                  <waypointList class="linked-list">
                    <net.rptools.maptool.model.CellPoint>
                      <x>6</x>
                      <y>2</y>
                      <distanceTraveled>0.0</distanceTraveled>
                      <distanceTraveledWithoutTerrain>0.0</distanceTraveledWithoutTerrain>
                      <isAStarCanceled>false</isAStarCanceled>
                    </net.rptools.maptool.model.CellPoint>
                  </waypointList>
                </lastPath>
                <snapToScale>true</snapToScale>
                <width>256</width>
                <height>256</height>
                <isoWidth>0</isoWidth>
                <isoHeight>0</isoHeight>
                <scaleX>1.0</scaleX>
                <scaleY>1.0</scaleY>
                <sizeMap>
                  <entry>
                    <java-class>net.rptools.maptool.model.SquareGrid</java-class>
                    <net.rptools.maptool.model.GUID>
                      <baGUID>fwABAdBlFSoGAAAAKgABAA==</baGUID>
                    </net.rptools.maptool.model.GUID>
                  </entry>
                </sizeMap>
                <snapToGrid>true</snapToGrid>
                <isVisible>true</isVisible>
                <visibleOnlyToOwner>false</visibleOnlyToOwner>
                <vblColorSensitivity>0</vblColorSensitivity>
                <alwaysVisibleTolerance>0</alwaysVisibleTolerance>
                <isAlwaysVisible>false</isAlwaysVisible>
                <name>Lib:bw</name>
                <ownerType>0</ownerType>
                <tokenShape>TOP_DOWN</tokenShape>
                <tokenType>NPC</tokenType>
                <layer>TOKEN</layer>
                <propertyType>BW</propertyType>
                <tokenOpacity>1.0</tokenOpacity>
                <terrainModifier>0.0</terrainModifier>
                <isFlippedX>false</isFlippedX>
                <isFlippedY>false</isFlippedY>
                <sightType>Normal</sightType>
                <hasSight>false</hasSight>
                <gmName>Framework Controlling Macros</gmName>
                <state>
                  <entry>
                    <string>Other2</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Unconcious (Wound)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Other3</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Incapacitated</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Dead</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Unconcious (Stun)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Other4</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Prone</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Hidden</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Disabled</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Other</string>
                    <boolean>false</boolean>
                  </entry>
                </state>
                <propertyMapCI>
                  <store>
                    <entry>
                      <string>strength</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Strength</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skill points</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Skill Points</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>willpower</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Willpower</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>hp</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>HP</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Broad Skills</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>charisma</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Charisma</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Skills</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>fatigue</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Fatigue</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>free broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Free Broad Skills</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>last resorts</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Last Resorts</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>profession</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Profession</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>settings</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Settings</key>
                        <value class="string">optionalRule1A=0 ; optionalRule1B=0 ; optionalRule2A=1 ; optionalRule2B=1 ; optionalRule2C=0 ; </value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>ac</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>AC</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>level</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Level</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>equipment</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Equipment</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>intelligence</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Intelligence</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>modern ranged weapons</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Modern Ranged Weapons</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>additional broad skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Additional Broad Skills</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>hit points</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Hit Points</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>armor</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Armor</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Actions</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>gm options</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>GM Options</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>natural statistics</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Natural Statistics</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>constitution</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Constitution</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rpe.macrogroups</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>rpe.macroGroups</key>
                        <value class="string">{&quot; &quot;:&quot;2, 13, 3, 9, 15, 8, 14, 19, 16, 67, 68, 17, 74, 76&quot;,&quot;Forms&quot;:&quot;63, 80, 64, 51, 62, 52, 49&quot;,&quot;User Defined Functions&quot;:&quot;65, 84, 88, 70, 82, 79, 59, 58, 81, 57, 87, 47, 73, 46, 77, 42, 93, 43, 90, 91, 44, 69, 45, 55, 41, 66, 92, 85, 86, 40&quot;,&quot;zSettings&quot;:&quot;35, 53, 61&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>gm settings</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>GM Settings</key>
                        <value class="string">[{&quot;name&quot;:&quot;freeActions&quot;,&quot;type&quot;:&quot;check&quot;,&quot;value&quot;:0,&quot;list&quot;:&quot;&quot;,&quot;description&quot;:&quot;Free Actions&quot;},{&quot;name&quot;:&quot;stunOnAmazingDamage&quot;,&quot;type&quot;:&quot;check&quot;,&quot;value&quot;:1,&quot;list&quot;:&quot;&quot;,&quot;description&quot;:&quot;Stun on Amazing Damage&quot;},{&quot;name&quot;:&quot;freePurchase&quot;,&quot;type&quot;:&quot;check&quot;,&quot;value&quot;:1,&quot;list&quot;:&quot;&quot;,&quot;description&quot;:&quot;Free purchases for PCs&quot;},{&quot;name&quot;:&quot;penaltyOnHalfMaxStun&quot;,&quot;type&quot;:&quot;check&quot;,&quot;value&quot;:1,&quot;list&quot;:&quot;&quot;,&quot;description&quot;:&quot;+1 step if less than half stun remains&quot;},{&quot;name&quot;:&quot;penaltyOnEvery2Wound&quot;,&quot;type&quot;:&quot;check&quot;,&quot;value&quot;:1,&quot;list&quot;:&quot;&quot;,&quot;description&quot;:&quot;+1 step for every 2 wound suffered&quot;},{&quot;name&quot;:&quot;penaltyOnEveryMortal&quot;,&quot;type&quot;:&quot;check&quot;,&quot;value&quot;:1,&quot;list&quot;:&quot;&quot;,&quot;description&quot;:&quot;+1 step for every mortal suffered&quot;},{&quot;name&quot;:&quot;penaltyOnEveryFatigue&quot;,&quot;type&quot;:&quot;check&quot;,&quot;value&quot;:1,&quot;list&quot;:&quot;&quot;,&quot;description&quot;:&quot;+1 step for every fatigue suffered&quot;}]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>achievement points</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Achievement Points</key>
                        <value class="string">1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>description</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Description</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>action spent</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Action Spent</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>inventory</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Inventory</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>wisdom</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Wisdom</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>phase actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Phase Actions</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>wound</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Wound</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>personality</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Personality</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>defense</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Defense</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>complex skill checks</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Complex Skill Checks</key>
                        <value class="string">[]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>mortal</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Mortal</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>elevation</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Elevation</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rpe.options</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>rpe.options</key>
                        <value class="string">{&quot;editMode&quot;:0,&quot;reSort&quot;:0,&quot;cleanComment&quot;:0,&quot;saveLast&quot;:0,&quot;loadLastOnStart&quot;:0,&quot;formWidth&quot;:130,&quot;formHeight&quot;:18,&quot;openDialog&quot;:0,&quot;reLoad&quot;:0,&quot;saveTA&quot;:0,&quot;notepadFormat&quot;:0,&quot;macroSelect&quot;:0,&quot;stdButtons&quot;:0}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>race</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Race</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>pistol</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Pistol</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rpe.allindexes</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>rpe.allIndexes</key>
                        <value class="string">2, 13, 3, 9, 15, 8, 14, 19, 16, 67, 68, 17, 74, 76, 63, 80, 64, 51, 62, 52, 49, 65, 84, 88, 70, 82, 79, 59, 58, 81, 57, 87, 47, 73, 46, 77, 42, 93, 43, 90, 91, 44, 69, 45, 55, 41, 66, 92, 85, 86, 40, 35, 53, 61</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>specialist skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Specialist Skills</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>dexterity</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Dexterity</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>money</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Money</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>action check</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Action Check</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string> gm options</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key> GM Options</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string> phase actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key> Phase Actions</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>refresh character sheet</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Refresh Character Sheet</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>movement</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Movement</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                  </store>
                </propertyMapCI>
                <macroPropertiesMap>
                  <entry>
                    <int>2</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>2</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input=macro.args]

&lt;!-- Rolls control die, situation die, and outputs both. Also includes the step value and &quot;+dx&quot; string--&gt;

[h: output=0]

&lt;!-- Roll control die (d20) --&gt;

[h: controlDieRoll = roll(1,20)]

&lt;!-- Record input as diestep --&gt;

[h: situationDieStep = input]

&lt;!-- Transform input, to avoid abort on 0 value --&gt;

[h: input=input * 10 + 1]

[h, switch(input), code:

case &quot;-49&quot;:
	{[h: situationDieRoll = roll(1,20)]
	[h: situationDieText = &quot;&amp;#91;d20&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-39&quot;:
	{[h: situationDieRoll = roll(1,12)]
	[h: situationDieText = &quot;&amp;#91;d12&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-29&quot;:
	{[h: situationDieRoll = roll(1,8)]
	[h: situationDieText = &quot;&amp;#91;d8&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-19&quot;:
	{[h: situationDieRoll = roll(1,6)]
	[h: situationDieText = &quot;&amp;#91;d6&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-9&quot;:
	{[h: situationDieRoll = roll(1,4)]
	[h: situationDieText = &quot;&amp;#91;d4&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;1&quot;:
	{[h: situationDieRoll = &quot;0&quot;]
	[h: situationDieText = &quot;&amp;#91;d0&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll]
	};
case &quot;11&quot;:
	{[h: situationDieRoll = roll(1,4)]
	[h: situationDieText = &quot;&amp;#91;d4&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;21&quot;:
	{[h: situationDieRoll = roll(1,6)]
	[h: situationDieText = &quot;&amp;#91;d6&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;31&quot;:
	{[h: situationDieRoll = roll(1,8)]
	[h: situationDieText = &quot;&amp;#91;d8&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;41&quot;:
	{[h: situationDieRoll = roll(1,12)]
	[h: situationDieText = &quot;&amp;#91;d12&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;51&quot;:
	{[h: situationDieRoll = roll(1,20)]
	[h: situationDieText = &quot;&amp;#91;d20&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;61&quot;:
	{[h: situationDieRoll = roll(2,20)]
	[h: situationDieText = &quot;&amp;#91;2d20&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;71&quot;:
	{[h: situationDieRoll = roll(3,20)]
	[h: situationDieText = &quot;&amp;#91;3d20&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;81&quot;:
	{[h: situationDieRoll = roll(4,20)]
	[h: situationDieText = &quot;&amp;#91;4d20&amp;#93;&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
default:
	{[h: assert(1, &quot;AlternityRoll input not valid&quot;)]
	}]

[h, if(situationDieStep &gt; 0), code: {[h:stepSymbol = &quot;+&quot;]};{}]
[h, if(situationDieStep == 0), code: {[h:stepSymbol = &quot;+&quot;]};{}]
[h, if(situationDieStep &lt; 0), code: {[h:stepSymbol = &quot;-&quot;]};{}]

&lt;!-- output all fields as an array --&gt;
	
[h: output = json.set(&quot;&quot;,&quot;controlDieRoll&quot;,controlDieRoll,&quot;situationDieText&quot;,situationDieText,&quot;situationDieStep&quot;,situationDieStep,&quot;situationDieRoll&quot;,situationDieRoll,&quot;stepSymbol&quot;,stepSymbol,&quot;combinedRoll&quot;,combinedRoll)]
[h: macro.return = output]</command>
                      <label>AlternityRoll2</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>true</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>true</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>3</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>3</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: stunDamage = json.get(macro.args, &quot;stunDamage&quot;)]
[h: stunDamage2 = stunDamage]
[h: woundDamage = json.get(macro.args, &quot;woundDamage&quot;)]
[h: woundDamage2 = woundDamage]
[h: mortalDamage = json.get(macro.args, &quot;mortalDamage&quot;)]
[h: mortalDamage2 = mortalDamage]
[h: stunHp = json.get(macro.args, &quot;stunHp&quot;)]
[h: woundHp = json.get(macro.args, &quot;woundHp&quot;)]
[h: mortalHp = json.get(macro.args, &quot;mortalHp&quot;)]
[h: stunReduced = 0]
[h: woundReduced = 0]
[h: mortalReduced = 0]

[h, while(stunHp &gt; 0 &amp;&amp; stunDamage &gt; 0), code: {
   [h: stunDamage = stunDamage -1]
   [h: stunHp = stunHp -1]
   [h: stunReduced = stunReduced + 1]
   }]
[h, if (stunDamage &gt; 0): woundDamage = woundDamage + stunDamage]
[h, while(woundHp &gt; 0 &amp;&amp; woundDamage &gt; 0), code: {
   [h: woundDamage = woundDamage -1]
   [h: woundHp = woundHp -1]
   [h: woundReduced = woundReduced + 1]
   }]
[h, if (woundDamage &gt; 0): mortalDamage = mortalDamage + woundDamage]
[h, while(mortalHp &gt; 0 &amp;&amp; mortalDamage &gt; 0), code: {
   [h: mortalDamage = mortalDamage -1]
   [h: mortalHp = mortalHp -1]
   [h: mortalReduced = mortalReduced + 1]
   }]

[h, if (stunHp &lt;0), code: {[h: stunHp = 0]}]   
[h, if (woundHp &lt;0), code: {[h: woundHp = 0]}]
[h, if (mortalHp &lt;0), code: {[h: mortalHp = 0]}]


[h: stunDamage = stunDamage2]
[h: woundDamage = woundDamage2]
[h: mortalDamage = mortalDamage2]

[r: macro.return = json.set(&quot;&quot;,&quot;stunDamage&quot;,stunDamage,&quot;woundDamage&quot;,woundDamage,&quot;mortalDamage&quot;,mortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp,&quot;stunReduced&quot;,stunReduced,&quot;woundReduced&quot;,woundReduced,&quot;mortalReduced&quot;,mortalReduced)]</command>
                      <label>DamageCalc</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>8</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>8</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: initiative = getInitiativeToken()]
[h: strength = getProperty(&quot;Strength&quot;,initiative)]
[h: dexterity = getProperty(&quot;Dexterity&quot;,initiative)]

[h: strDex = Strength + Dexterity]
[h, if (strDex &lt; 7), code: {[h: strDex = 7]}]
[h, if (strDex &gt; 32), code: {[h: strDex = 32]}]
[h: sprint = floor(strDex/2) * 2]
[h: run = floor(sprint * 2 / 3))]
[h: walk = ceiling(sprint / 4)]	

[h: movement = getProperty(&quot;Movement&quot;,initiative)]
[h: movement = setStrProp(movement, &quot;walk&quot;, walk)]
[h: movement = setStrProp(movement, &quot;run&quot;, run)]
[h: movement = setStrProp(movement, &quot;sprint&quot;, sprint)]
[h: movement = setStrProp(movement, &quot;declared&quot;, &quot;Walk&quot;)]
[h: setProperty(&quot;Movement&quot;,movement,initiative)]</command>
                      <label>PreformMovement</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>9</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>9</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: initiative = getInitiativeToken()]

[r: movement = getProperty(&quot;Movement&quot;, initiative)]
[h: varsFromStrProp(movement)]

[h, if (walk == 0 &amp;&amp; run == 0), code:
	{
	[h: doAbort = input(&quot;moveDeclare|Sprint|Change Declared Movement|LIST|SELECT=0 VALUE=STRING&quot;)]		
	};{}]

[h, if (walk == 0 &amp;&amp; run &gt; 0 &amp;&amp; sprint &gt; 0), code:
	{
	[h: doAbort = input(&quot;moveDeclare|Run, Sprint|Declare Movement|LIST|SELECT=0 VALUE=STRING&quot;)]		
	};{}]

[h, if (walk &gt; 0 &amp;&amp; run &gt; 0 &amp;&amp; sprint &gt; 0), code:
	{
	[h: doAbort = input(&quot;moveDeclare|Walk, Run, Sprint|Declare Movement|LIST|SELECT=1 VALUE=STRING&quot;)]	
	};{}]
	
[h, if(doAbort==0), code:{
	[h: moveDeclare = declared]
	[h: tokens.denyMove=1]
	};{}]
	
[h: movement = getProperty(&quot;Movement&quot;,initiative)]
[h: movement = setStrProp (movement, &quot;declared&quot;, moveDeclare)]
[h: setProperty (&quot;Movement&quot;,movement,initiative)]
[h: macro.return = declared]</command>
                      <label>DeclareMovement</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>13</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>13</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>	[h: input=macro.args]
	
	[h: length = length(input)]
	
	[h: inputString = json.set(&quot;&quot;,0,&quot;&quot;)]
	
	[h, for (i,0,length,1), code:
		{
		[h: inputChar = substring(input,i,i+1))]
		[h: inputString = json.set(inputString,i,inputChar)]
		}
	]
	
	[h: inputString]
	
	[h: char1 = json.get(inputString,0)]
	[h: char2 = json.get(inputString,1)]
	[h: char3 = json.get(inputString,2)]
	[h: char4 = json.get(inputString,3)]
	[h: char5 = json.get(inputString,4)]
	[h: char6 = json.get(inputString,5)]

	

	[h, if ((char2 == &quot;d&quot;) || (char2 == &quot;D&quot;)), code:
		{
		[h, if (isNumber(char1) == 1), code:
			{[h: rollQuantity = char1]}
			;
			{[h:assert(0,&quot;Invalid Input, must be xdy&amp;plusmn;z&quot;,1)]};
		]	
		
		[h, if (isNumber(char3) == 1), code:
			{[h: rollSides = char3]}
			;
			{[h: assert(0,&quot;Invalid Input, must be xdy&amp;plusmn;z&quot;,1)]};
		]
	
		[h, if (isNumber(char4) == 1), code:
			{[h: rollSides = rollSides * 10 + char4]}
			;
			{};
		]
		
		[h, if ((char4 == &quot;+&quot;) || (char4 == &quot;-&quot;)), code:
			{
			[h: rollSign = char4]
			[h: rollModifier = substring(input,4,length)]
			}
			;
			{};
			
		]
		
		[h, if ((char5 == &quot;+&quot;) || (char5 == &quot;-&quot;)), code:
			{
			[h:rollSign = char5]
			[h: rollModifier = substring(input,5,length)]
			}
			;
			{};
		]

		}
		;
		{

		}
	]
	
	[h, if ((char3 == &quot;d&quot;) || (char3 == &quot;D&quot;)), code:
		{
		[h, if (isNumber(char1) == 1), code:
			{[h: rollQuantity = char1]}
			;
			{[h:assert(0,&quot;Invalid Input, must be xdy&amp;plusmn;z&quot;,1)]};
		]	
	
		[h, if (isNumber(char2) == 1), code:
			{[h: rollQuantity = rollQuantity * 10 + char2]}
			;
			{[h:assert(0,&quot;Invalid Input, must be xdy&amp;plusmn;z&quot;,1)]};
		]
		
		[h, if (isNumber(char4) == 1), code:
			{[h: rollSides = char4]}
			;
			{[h:assert(0,&quot;Invalid Input, must be xdy&amp;plusmn;z&quot;,1)]};
		]
		
		[h, if (isNumber(char5) == 1), code:
			{[h: rollSides = rollSides * 10 + char5]}
			;
			{};
		]
		
		[h, if ((char5 == &quot;+&quot;) || (char5 == &quot;-&quot;)), code:
			{
			[h: rollSign = char5]
			[h: rollModifier = substring(input,5,length)]
			}
			;
			{};
		]
		
		[h, if ((char6 == &quot;+&quot;) || (char5 == &quot;-&quot;)), code:
			{
			[h:rollSign = char6]
			[h: rollModifier = substring(input,6,length)]
			}
			;
			{};
		]
		};{}
	]
	
[h: output = strPropFromVars(&quot;rollQuantity,rollSides,rollSign,rollModifier&quot;,&quot;UNSUFFIXED&quot;)]

[h: macro.return = output]</command>
                      <label>CustomRoll</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>14</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>14</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h, if (isGM()), code :{};{[h: assert(0, &quot;This macro is for GMs only&quot;, 0)]}]

[h: selected = getSelected()]
[h: strength = getProperty(&quot;Strength&quot;,selected)]
[h: dexterity = getProperty(&quot;Dexterity&quot;,selected)]

[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;,selected)]

[h: strDex = Strength + Dexterity]
[h, if (strDex &lt; 7), code: {[h: strDex = 7]}]
[h, if (strDex &gt; 32), code: {[h: strDex = 32]}]
[h: sprint = floor(strDex/2) * 2]
[h: run = floor(sprint * 2 / 3))]
[h: walk = ceiling(sprint / 4)]
[h: easySwim = 1]
[h, if(strDex &gt;= 14): easySwim = 2]
[h, if(strDex &gt;= 24): easySwim = 3]
[h, if(strDex &gt;= 30): easySwim = 4]
[h: swim = easySwim * 2]
[h: glide = sprint]
[h: fly = glide * 2]

[h: race = getProperty(&quot;Race&quot;,selected)]
[h, if(race != &quot;T&apos;sa&quot;): glide = 0]
[h, if(race != &quot;T&apos;sa&quot;): fly = 0]

[h: naturalStatistics = json.set(naturalStatistics,&quot;Walk&quot;,walk,&quot;Run&quot;,run,&quot;Sprint&quot;,sprint,&quot;Easy Swim&quot;,easySwim,&quot;Swim&quot;,swim,&quot;Glide&quot;,glide,&quot;Fly&quot;,fly)]

[h: setProperty(&quot;Natural Statistics&quot;, naturalStatistics, selected)]

[h: setProperty(&quot;Sprint&quot;,sprint,selected)]
[h: setProperty(&quot;Run&quot;,run,selected)]
[h: setProperty(&quot;Walk&quot;,walk,selected)]
[h: movement = getProperty(&quot;Movement&quot;,selected)]
[h: movement = setStrProp(movement, &quot;declared&quot;, &quot;Walk&quot;)]
[h: movement = setStrProp(movement, &quot;walk&quot;, walk)]
[h: movement = setStrProp(movement, &quot;run&quot;, run)]
[h: movement = setStrProp(movement, &quot;sprint&quot;, sprint)]
[h: tokenX = getTokenX(1,selected)]
[h: movement = setStrProp(movement, &quot;tokenX&quot;, tokenX)]
[h: tokenY = getTokenY(1,selected)]
[h: movement = setStrProp(movement, &quot;tokenY&quot;, tokenY)]
[h: setProperty(&quot;Movement&quot;,movement,selected)]
[h: move = &quot;Walk: &quot; + walk]
[h: setProperty(&quot;Move&quot;,move,selected)]</command>
                      <label>PreformMovementSelected</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>15</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>15</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: target = json.get(macro.args,&quot;target&quot;)]
[h: origin = json.get(macro.args,&quot;origin&quot;)]

[h: targetX = getTokenX(1,target)]
[h: targetY = getTokenY(1,target)]
[h: originX = getTokenX(1,origin)]
[h: originY = getTokenY(1,origin)]

[h: &quot;&lt;!--oTTX = origin to target x--&gt;&quot;]

[h: oTTX = originX - targetX]
[h: oTTY = targetY - originY]
[h: aoTTX = abs(oTTX)]
[h: aoTTY = abs(oTTY)]

[h: &quot;&lt;!--For all facings, 0 is east, and runs counter-clocwise, for angles, 0 is directly infront, and runs clockwise--&gt;&quot;]

[h: &quot;&lt;!--NNE--&gt;&quot;]
[h, if ((oTTX &gt;= 0) &amp;&amp; (oTTY &gt; 0) &amp;&amp; (oTTX &lt;= oTTY)), code: {
	[h: angleOnTarget = 0]
	[h: originFace = -90]
	};{}]
	
[h: &quot;&lt;!--NNW--&gt;&quot;]
[h, if ((oTTX &lt; 0) &amp;&amp; (oTTY &gt; 0) &amp;&amp; (aoTTX &lt; oTTY)), code: {
	[h: angleOnTarget = 0]
	[h: originFace = -90]
	};{}]
	
[h: &quot;&lt;!--ENE--&gt;&quot;]
[h, if ((oTTX &gt; 0) &amp;&amp; (oTTY &gt;= 0) &amp;&amp; (oTTX &gt;= oTTY)), code: {
	[h: angleOnTarget = 90]
	[h: originFace = 180]
	};{}]
	
[h: &quot;&lt;!--ESE--&gt;&quot;]
[h, if ((oTTX &gt; 0) &amp;&amp; (oTTY &lt; 0) &amp;&amp; (oTTX &gt;= aoTTY)), code: {
	[h: angleOnTarget = 90]
	[h: originFace = 180]
	};{}]
	
[h: &quot;&lt;!--WNW--&gt;&quot;]
[h, if ((oTTX &lt; 0) &amp;&amp; (oTTY &gt;= 0) &amp;&amp; (aoTTX &gt;= oTTY)), code: {
	[h: angleOnTarget = 270]
	[h: originFace = 0]
	};{}]
	
[h: &quot;&lt;!--WSW--&gt;&quot;]
[h, if ((oTTX &lt; 0) &amp;&amp; (oTTY &lt; 0) &amp;&amp; (aoTTX &gt;= aoTTY)), code: {
	[h: angleOnTarget = 270]
	[h: originFace = 0]
	};{}]
	
[h: &quot;&lt;!--SSE--&gt;&quot;]
[h, if ((oTTX &gt;= 0) &amp;&amp; (oTTY &lt; 0) &amp;&amp; (oTTX &lt; aoTTY)), code: {
	[h: angleOnTarget = 180]
	[h: originFace = 90]
	};{}]
	
[h: &quot;&lt;!--SSW--&gt;&quot;]
[h, if ((oTTX &lt; 0) &amp;&amp; (oTTY &lt; 0) &amp;&amp; (aoTTX &lt; aoTTY)), code: {
	[h: angleOnTarget = 180]
	[h: originFace = 90]
	};{}]

[angleOnTarget]
	
[h: targetFacing = getTokenFacing(target)]

[h, if (targetFacing == 0), code: {[h:angleOnTarget = angleOnTarget + 270]}]
[h, if (targetFacing == 180), code: {[h:angleOnTarget = angleOnTarget + 90]}]
[h, if (targetFacing == -90), code: {[h:angleOnTarget = angleOnTarget + 180]}]
[h, if (targetFacing == 90), code: {[h:angleOnTarget = angleOnTarget + 0]}]

[h, if (angleOnTarget &gt;= 360), code: {[h:angleOnTarget = angleOnTarget - 360]}]

[angleOnTarget]

[h, switch(angleOnTarget), code:
case 0: {[h: angleOnTargetText=&quot;Front&quot;]};
case 90: {[h: angleOnTargetText=&quot;Right Side&quot;]};
case 180: {[h: angleOnTargetText=&quot;Rear&quot;]};
case 270: {[h: angleOnTargetText=&quot;Left Side&quot;]};
default: {}]

[output = json.set(&quot;&quot;,&quot;angleOnTarget&quot;,angleOnTarget,&quot;angleOnTargetText&quot;,angleOnTargetText,&quot;originFace&quot;,originFace)]

[macro.return = output]</command>
                      <label>GetFlank</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>16</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>16</index>
                      <colorKey>yellow</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: varsFromStrProp(json.toStrProp(macro.args))]
[h: initiative = phase]
[h: j=1]
[h, for(i,0,3), code :{
	[h: roll = roll(1,20)]
	[h: j = j*10]
	[h, if (roll &gt;= marginal), code :{[h: outcome = 1]};{}]
	[h, if ((roll &lt;= ordinary)&amp;&amp;(roll &gt; good)), code :{[h: outcome = 2]};{}]
	[h, if ((roll &lt;= good)&amp;&amp;(roll &gt; amazing)), code :{[h: outcome = 3]};{}]
	[h, if (roll &lt;= amazing), code :{[h: outcome = 4]};{}]
	[h, if (outcome &gt; 0): outcome = outcome * (1/j)]
	[h: initiative = initiative + outcome]
	}]
[macro.return = initiative]
</command>
                      <label>initiativeRoll</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>17</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>17</index>
                      <colorKey>yellow</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: round = max(getInitiativeRound(), 0)]
[h: combatIDs = getInitiativeList()]
[h: ids = &quot;&quot;]
[h, for(i,0,initiativeSize()), code: {
	[h: ids = json.append(ids, json.get(json.get(json.get(combatIDs,&quot;tokens&quot;),i),&quot;tokenId&quot;))]
}]
[h: ids = json.unique(ids)]
[h: combatIDList = json.toList(ids)]

[h: removeAllFromInitiative()]
[h, foreach(id, combatIDList), code: {

	[h: actionCheck = getProperty(&quot;Action Check&quot;,id)]
	[h: actionCheckStrProp = json.toStrProp(actionCheck)]
	[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;,id)]
	[h: actionsPerRound = json.get(naturalStatistics,&quot;Actions Per Round&quot;)]
	[h: varsFromStrProp(actionCheckStrProp)]
	[h: tokenName = getName(id)]

	[h: roll = roll(1,20)]
	[h, if (roll &gt;= marginal), code :{
		[h: firstOutcome = 1]
		};{}]
	[h, if ((roll &lt;= ordinary)&amp;&amp;(roll &gt; good)), code :{
		[h: firstOutcome = 2]
		};{}]
	[h, if ((roll &lt;= good)&amp;&amp;(roll &gt; amazing)), code :{
		[h: firstOutcome = 3]
		};{}]
	[h, if (roll &lt;= amazing), code :{
		[h: firstOutcome = 4]
		};{}]


	[h: phases = &quot;&quot;]
	
	[h, while((actionsPerRound &gt; 0)&amp;&amp;(firstoutcome &gt; 0)), code :{
		[h: phases = json.append(phases,firstOutcome)]
		[h: firstOutcome = firstOutcome - 1]
		[h: actionsPerRound = actionsPerRound - 1]
		}]


	[h, foreach(phase,phases), code: {
		
		[output = json.set(&quot;&quot;,&quot;id&quot;,id,&quot;phase&quot;,phase,&quot;marginal&quot;,marginal,&quot;ordinary&quot;,ordinary,&quot;good&quot;,good,&quot;amazing&quot;,amazing)]
		[macro(&quot;initiativeRoll@Lib:bw&quot;) : output]
		[h: initiative = macro.return]
		[h, token(tokenName): return = addToInitiative(1, initiative)]
		[h: assert(return,&quot;Failed to add token to initiative&quot;,1)]
		}]
		
	[h: resetActionsPerRound(id)]
		
	[h: declared = getStrProp(getProperty(&quot;Movement&quot;,id), &quot;Declared&quot;)]
	[h, if(declared == &quot;Walk&quot;): move = &quot;Walk: &quot; + getStrProp(getProperty(&quot;Movement&quot;,id), &quot;Walk&quot;)]
	[h, if(declared == &quot;Run&quot;): move = &quot;Run: &quot; + getStrProp(getProperty(&quot;Movement&quot;,id), &quot;Run&quot;)]
	[h, if(declared == &quot;Sprint&quot;): move = &quot;Sprint: &quot; + getStrProp(getProperty(&quot;Movement&quot;,id), &quot;Sprint&quot;)]
	[h: setProperty(&quot;Move&quot;,move,id)]
	
	[h: stunned = getState(&quot;Unconcious (Stun)&quot;,id)]
	[h, if(! stunned): setProperty(&quot;Rounds Since Stunned&quot;,-1,id)]
	[h: setProperty(&quot;Rounds Since Stunned Check&quot;,1,id)]
	[h: stunHp = getProperty(&quot;Stun&quot;,id)]
	[h, if(stunned &amp;&amp; stunHp &gt; 0): setState(&quot;Unconcious (Stun)&quot;,0,id)]
	
	[h: resetMovement(id)]
	}
]
	
[h: sortInitiative()]
[h: setInitiativeRound(round + 1)]</command>
                      <label>nextRound</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>19</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>19</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input = stringToList(macro.args,&quot;/&quot;)]
[h: Li = listGet(input,0)]
[h: LiString = Li]
[h: Li2 = stringToList(Li,&quot;d&quot;)]
[h: LiQuantity = listGet(Li2,0)]
[h: Li3 = listGet(Li2,1)]
[h: indexPlus = indexOf(Li3,&quot;+&quot;)]
[h: indexMinus = indexOf(Li3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: Li4 = stringToList(Li3,&quot;\\+&quot;)]
	[h: LiSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: Li4 = stringToList(Li3,&quot;\\-&quot;)]
		[h: LiSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: LiSides = listGet(Li4,0)]
[h: LiModifier = listGet(Li4,1)]


	
[h: Hi = listGet(input,1)]
[h: HiString = Hi]
[h: Hi2 = stringToList(Hi,&quot;d&quot;)]
[h: HiQuantity = listGet(Hi2,0)]
[h: Hi3 = listGet(Hi2,1)]
[h: indexPlus = indexOf(Hi3,&quot;+&quot;)]
[h: indexMinus = indexOf(Hi3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: Hi4 = stringToList(Hi3,&quot;\\+&quot;)]
	[h: HiSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: Hi4 = stringToList(Hi3,&quot;\\-&quot;)]
		[h: HiSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: HiSides = listGet(Hi4,0)]
[h: HiModifier = listGet(Hi4,1)]

	
	
[h: En = listGet(input,2)]
[h: EnString = En]
[h: En2 = stringToList(En,&quot;d&quot;)]
[h: EnQuantity = listGet(En2,0)]
[h: En3 = listGet(En2,1)]
[h: indexPlus = indexOf(En3,&quot;+&quot;)]
[h: indexMinus = indexOf(En3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: En4 = stringToList(En3,&quot;\\+&quot;)]
	[h: EnSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: En4 = stringToList(En3,&quot;\\-&quot;)]
		[h: EnSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: EnSides = listGet(En4,0)]
[h: EnModifier = listGet(En4,1)]
	
[h: output = json.set(&quot;&quot;,&quot;LiQuantity&quot;,LiQuantity,&quot;LiSides&quot;,LiSides,&quot;LiSign&quot;,LiSign,&quot;LiModifier&quot;,LiModifier,&quot;LiString&quot;,LiString,&quot;HiQuantity&quot;,HiQuantity,&quot;HiSides&quot;,HiSides,&quot;HiSign&quot;,HiSign,&quot;HiModifier&quot;,HiModifier,&quot;HiString&quot;,HiString,&quot;EnQuantity&quot;,EnQuantity,&quot;EnSides&quot;,EnSides,&quot;EnSign&quot;,EnSign,&quot;EnModifier&quot;,EnModifier,&quot;EnString&quot;,EnString)]
[macro.return = output]</command>
                      <label>armorParser</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>35</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>35</index>
                      <colorKey>red</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h, if(isPropertyEmpty(&quot;Settings&quot;,&quot;Lib:bw&quot;)), code :{
	[h: optionalRule1A = 0][h: optionalRule1B = 0][h: optionalRule2A = 0][h: optionalRule2B = 0][h: optionalRule2C = 0]
	[h: output = strPropFromVars(&quot;optionalRule1A,optionalRule1B,optionalRule2A,optionalRule2B,optionalRule2C&quot;,&quot;UNSUFFIXED&quot;)]
	[h: setLibProperty(&quot;Settings&quot;,output,&quot;Lib:bw&quot;)]
};{
}]

[h: input = getLibProperty(&quot;Settings&quot;,&quot;Lib:bw&quot;)]
[h: varsFromStrProp(input)]

[h: toolTip1A = &quot;&lt;html&gt;Optional Rule: Each point of mortal damage causes one wound and one stun point as secondary damage.&lt;br&gt;Standard Rule: Each point of mortal damage causes half a wound and half a stun point as secondary damage, rounded down.&lt;/html&gt;&quot;]
[h: toolTip1A = htmlTooltip(toolTip1A,&quot;Optional Rule 1A&quot;)]

[h: toolTip1B =&quot;
&lt;table cellpadding=0 cellspacing=1&gt;
	&lt;tr valign=top&gt;
		&lt;td align=right rowspan=2&gt;&lt;b&gt;Optional Rule:&lt;/b&gt;&lt;/td&gt;
		&lt;td align=left&gt;&amp;nbsp;&amp;nbsp;If a weapons Firepower rating exceeds the targets Toughness rating, the primary damage inflicted is upgraded one class before secondary damage and armor are applied.&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr valign=top&gt;
		&lt;td align=left&gt;&amp;nbsp;&amp;nbsp;Stun damage upgrades to wounds, wounds upgrade to mortal, and mortal damage upgrades to double the listed die quantity for that weapon.&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr valign=top&gt;
		&lt;td align=right&gt;&lt;b&gt;Standard Rule:&lt;/b&gt;&lt;/td&gt;
		&lt;td align=left&gt;&amp;nbsp;&amp;nbsp;If a weapons Firepower rating exceeds the target&apos;s Toughness rating, calculate damage as if they were equal.&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr valign=top&gt;&lt;td align=right&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/td&gt;
		&lt;td align=left&gt;&amp;nbsp;&amp;nbsp;Unarmored targets are considered to be of Ordinary toughness. You may want to change grenades to Ordinary damage instead of Good.&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&quot;]
[h: toolTip1B = htmlTooltip(toolTip1B,&quot;Optional Rule 1B&quot;)]

[h: toolTip2A = &quot;&lt;html&gt;Optional Rule: New characters have 3 x Int + 30 skill points.&lt;br&gt;Standard Rule: New characters have Int x 5 skill points.&lt;/html&gt;&quot;]
[h: toolTip2A = htmlTooltip(toolTip2A,&quot;Optional Rule 2A&quot;)]

[h: toolTip2B = &quot;&lt;html&gt;Optional Rule: Excluding free racial broad skills, a player may learn up to 6 + Int Resistance Modifier broad skills.&lt;br&gt;Standard Rule: Excluding free racial broad skills, a player may learn up to Int / 2 (rounded down) broad skills.&lt;/html&gt;&quot;]
[h: toolTip2B = htmlTooltip(toolTip2B,&quot;Optional Rule 2B&quot;)]

[h: toolTip2C = &quot;&lt;html&gt;Optional Rule: The number of ranks a character currently possesses in the specialty skill does not increase the cost of advancing that skill.&lt;br&gt;Standard Rule: The currently held rank (0 if untrained) is then added to the base cost of advancing that skill.&lt;/html&gt;&quot;]
[h: toolTip2C = htmlTooltip(toolTip2C,&quot;Optional Rule 2C&quot;)]


    [h: abort(input(

    &quot;Combat|&lt;html&gt;&lt;b&gt;Combat&lt;/b&gt;&lt;/html&gt;||LABEL|SPAN=TRUE|SETVARS=UNSUFFIXED&quot;,
    &quot;optionalRule1A|&quot;+optionalRule1A+&quot;|&lt;html&gt;&quot;+toolTip1A+&quot;&lt;/html&gt;|CHECK&quot;,
    &quot;optionalRule1B|&quot;+optionalRule1B+&quot;|&lt;html&gt;&quot;+toolTip1B+&quot;&lt;/html&gt;|CHECK&quot;,
    &quot;Character Generation|&lt;html&gt;&lt;b&gt;Character Generation&lt;/b&gt;&lt;/html&gt;||LABEL|SPAN=TRUE|SETVARS=UNSUFFIXED&quot;,
    &quot;optionalRule2A|&quot;+optionalRule2A+&quot;|&lt;html&gt;&quot;+toolTip2A+&quot;&lt;/html&gt;|CHECK&quot;,
    &quot;optionalRule2B|&quot;+optionalRule2B+&quot;|&lt;html&gt;&quot;+toolTip2B+&quot;&lt;/html&gt;|CHECK&quot;,
    &quot;optionalRule2C|&quot;+optionalRule2C+&quot;|&lt;html&gt;&quot;+toolTip2C+&quot;&lt;/html&gt;|CHECK&quot;
    
    ))]

[h: output = strPropFromVars(&quot;optionalRule1A,optionalRule1B,optionalRule2A,optionalRule2B,optionalRule2C&quot;,&quot;UNSUFFIXED&quot;)]
[h: setLibProperty(&quot;Settings&quot;,output,&quot;Lib:bw&quot;)]

</command>
                      <label>Settings</label>
                      <group>zSettings</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>40</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>40</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[H: localVarList = arg(0)]
[H, if(json.type(localVarList) == &quot;ARRAY&quot;): localVarList = json.toList(localVarList)]
[H, if(argCount() &gt;= 2): localHasSemi = arg(1); localHasSemi = 1]
[H: localObj = &quot;{}&quot;]
[H, if(localHasSemi), code: {
   [H, foreach(localKey,localVarList): localObj = json.set(localObj,localKey,eval(localKey))]
};{
   [H: localObj = json.fromStrProp(strPropFromVars(localVarList,&quot;UNSUFFIXED&quot;))]
}]
[H: macro.return = localObj]</command>
                      <label>varsToJson</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>41</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>41</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input=arg(0)]
[r: input = encode(input)]
[r: input = replace(input, &quot;%0A&quot;, &quot;+&quot;)]
[r: input = decode(input)]
[macro.args = input]</command>
                      <label>removeWhitespace</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>42</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>42</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input=arg(0)]

&lt;!-- Returns the Resistance Modifier for an ability. --&gt;
[h, if (input &lt; 4): input = 0]
[h, if (input &gt;= 19): input = 0]
[h, if (input != 0): input = ceil(input/2) * 2]

[h, if(input == 0), code :{[h: assert(0,&quot;Invalid arg (&quot; + arg(0) + &quot;) passed to getMod&quot;,1)] };{}]
[h, switch(input), code:
case 4: {[modifier = -2]};
case 6: {[modifier = -1]};
case 8: {[modifier = 0]};
case 10: {[modifier = 0]};
case 12: {[modifier = 1]};
case 14: {[modifier = 2]};
case 16: {[modifier = 3]};
case 18: {[modifier = 4]};
case 20: {[modifier = 5]};
default: {[h: assert(0, &quot;GetMod input not valid.&quot;)]}]

[h, if(modifier == &quot;&quot;), code :{ [h: assert(0,&quot;Output of getMod is blank&quot;,1)] };{}]


[h: macro.return = modifier]</command>
                      <label>getMod</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>true</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>43</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>43</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[H: tooltip = trim(arg(0))]
[H: text = arg(1)]

[h: tooltip = encode(tooltip)]
[h: tooltip = replace(tooltip, &quot;%09&quot;, &quot;&quot;)]
[h: tooltip = replace(tooltip, &quot;%0A&quot;, &quot;&quot;)]
[h: tooltip = replace(tooltip, &quot;%0B&quot;, &quot;&quot;)]
[h: tooltip = replace(tooltip, &quot;%0C&quot;, &quot;&quot;)]
[h: tooltip = replace(tooltip, &quot;%0D&quot;, &quot;&quot;)]
[h: tooltip = decode(tooltip)]

[H: firstPart = lower(substring(tooltip,0,5))]
[H, if(firstPart != &quot;&lt;html&quot;): tooltip = &quot;&lt;html&gt;&quot;+tooltip+&quot;&lt;/html&gt;&quot;]
[H: tooltip = replace(tooltip,&apos;&quot;&apos;,&quot;&amp;quot; &quot;)]
[H: macro.return = strformat(&apos;&lt;span title=&quot;%{tooltip}&quot;&gt;%{text}&lt;/span&gt;&apos;)]</command>
                      <label>htmlTooltip</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>44</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>44</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[H: localObj = arg(0)]
[H, if(argCount() &gt;= 2): localHasSemi = arg(1); localHasSemi = getFindCount(strfind(localObj,&quot;;&quot;))]
[H, if( ! localHasSemi ), code: {
   [H: varsFromStrProp(json.toStrProp(localObj))]
};{
   [H, foreach(localKey,localObj): set(localKey,json.get(localObj,localKey))]
}]
[H: macro.return = json.fields(localObj)]</command>
                      <label>jsonToVars</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>45</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>45</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[ toolkit.DebugVariableCount = argCount() ]
[ toolkit.DebugInputParameter = &quot;.|&lt;html&gt;&quot; +
    &quot;&lt;table cellspacing=&apos;2&apos; cellpadding=&apos;0&apos; style=&apos;background-color:#595751&apos;&gt;&quot; +
    &quot;&lt;tr&gt;&lt;td&gt;&quot; +
    &quot;&lt;table width=&apos;300px&apos; cellspacing=&apos;0&apos; cellpadding=&apos;2&apos; style=&apos;background-color:#FAF9F5;&apos;&gt;&quot; +
    &quot;%{toolkit.DebugVariableRows}&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/html&gt;&quot; +
    &quot;|Debugger|LABEL|SPAN=TRUE&quot;
]
[ toolkit.DebugVariableRow = &quot;&lt;tr %{toolkit.DebugVariableRowStyle}&gt;&lt;td&gt;&quot; +
    &quot;&lt;b&gt;%{toolkit.DebugVariableName}&lt;/b&gt;&lt;/td&gt;&lt;td&gt;%{toolkit.DebugVariableContent}&quot; +
    &quot;&lt;/td&gt;&lt;/tr&gt;&quot;
]
[ toolkit.DebugVariableRows = &quot;&lt;tr style=&apos;background-color:#E0DDD5; font-size:1.1em;&apos;&gt;&lt;td&gt;&lt;b&gt;Variable&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot; ]
[ count( toolkit.DebugVariableCount ), code:
{
    [ toolkit.DebugVariableRowStyle = &quot;&quot; ]
    [ toolkit.DebugVariableName = arg( roll.count ) ]
    [ toolkit.DebugVariableContent = eval( arg( roll.count ) ) ]
    [ if( floor( roll.count/2 ) == roll.count/2 ), code:
    {
        [ toolkit.DebugVariableRowStyle = &quot;style=&apos;background-color:#EDECE8;&apos;&quot; ]
    } ]
    [ toolkit.DebugVariableRows = toolkit.DebugVariableRows +
        strformat( toolkit.DebugVariableRow )
    ]
} ]
[ if( toolkit.DebugVariableCount == 0 ), code:
{
    [ toolkit.DebugVariableRows = &quot;&lt;tr&gt;&lt;td style=&apos;font-size: 1.4em&apos; align=&apos;center&apos;&gt;&lt;b&gt;Pause&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot; ]
} ]

[ toolkit.DebugBreak = input( strformat( toolkit.DebugInputParameter ) )]
[ abort( toolkit.DebugBreak ) ] </command>
                      <label>pause</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>46</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>46</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>&lt;!-- Translate --&gt;
[ toolkit.DebuggerTitle = &quot;Debugger&quot; ]
[ toolkit.DebuggerTitleCaps = upper( toolkit.DebuggerTitle ) ]
[ toolkit.DebugExpectationsTitle = &quot;Expectations&quot; ]
[ toolkit.DebugEnvironmentTitle = &quot;Environment&quot; ]
[ toolkit.DebugCurrentMacroTitle = &quot;Current Macro&quot; ]
[ toolkit.DebugMacroLocationTitle = &quot;Macro Location&quot; ]
[ toolkit.DebugCurrentTokenTitle = &quot;Current Token&quot; ]
[ toolkit.DebugImpersonatedTokenTitle = &quot;Impersonated Token&quot; ]
[ toolkit.DebugImpersonatedTokenNone = &quot;No impersonated tokens&quot; ]
[ toolkit.DebugSelectedTokensTitle = &quot;Selected Tokens&quot; ]
[ toolkit.DebugSelectedTokensNone = &quot;No selected tokens&quot; ]
[ toolkit.DebugVariableTraceTitle = &quot;Variable Trace&quot; ]

&lt;!-- Layout --&gt;
[ toolkit.DebugInputParameters = &quot;.|&lt;html&gt;&quot; +
    &quot;&lt;span style=&apos;font-size:2.00em;&apos;&gt;&lt;b&gt;&lt;i&gt;%{toolkit.DebuggerTitleCaps}&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&quot; +
    &quot;&lt;table cellspacing=&apos;2&apos; cellpadding=&apos;0&apos; style=&apos;background-color:#595751&apos;&gt;&quot; +
    &quot;&lt;tr&gt;&lt;td&gt;&quot; +
    &quot;&lt;table cellspacing=&apos;10&apos; cellpadding=&apos;0&apos; style=&apos;background-color:#faf9f5&apos;&gt;&quot; +
    &quot;&lt;tr&gt;&lt;td valign=&apos;top&apos; width=&apos;50%&apos;&gt;&lt;span style=&apos;font-size:1.7em&apos;&gt;&lt;b&gt;%{toolkit.DebugEnvironmentTitle}&lt;/b&gt;&lt;/span&gt;&quot; +
    &quot;&lt;table width=&apos;200px&apos; border=&apos;0&apos; cellspacing=&apos;2&apos; cellpadding=&apos;0&apos;&gt;%{toolkit.DebugEnvironmentRows}&lt;/table&gt;&lt;/td&gt;&quot; +
    &quot;&lt;td width=&apos;200px&apos; valign=&apos;top&apos;&gt;&lt;span style=&apos;font-size:1.7em&apos;&gt;&lt;b&gt;%{toolkit.DebugVariableTraceTitle}&lt;/b&gt;&lt;/span&gt;&quot; +
    &quot;&lt;table width=&apos;100%&apos; border=&apos;0&apos; cellspacing=&apos;2&apos; cellpadding=&apos;0&apos;&gt;%{toolkit.DebugVariableRows}&lt;/table&gt;&quot; +
    &quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&apos;2&apos;&gt;&quot; +
    &quot;&lt;table width=&apos;100%&apos; cellpadding=&apos;0&apos; cellspacing=&apos;2&apos;&gt;&quot; +
    &quot;&lt;tr&gt;&lt;td style=&apos;font-size:1.2em;&apos;&gt;&lt;b&gt;%{toolkit.DebugExpectationsTitle}&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot; +
    &quot;&lt;tr&gt;&lt;td style=&apos;background-color:#EDECE8;&apos;&gt;%{toolkit.DebugExpectations}&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&quot; +
    &quot;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/html&gt;&quot;+
    &quot;|%{toolkit.DebuggerTitle}|LABEL|SPAN=TRUE&quot;
]
[ toolkit.DebugTableRow = &quot;&lt;tr&gt;&lt;td style=&apos;background-color:#EDECE8;&apos;&gt;&quot; +
    &quot;&lt;b&gt;%{toolkit.DebugTableRowTitle}&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot; +
    &quot;&lt;tr&gt;&lt;td&gt;%{toolkit.DebugTableRowContent}&lt;/td&gt;&lt;/tr&gt;&quot;
]

&lt;!-- Get parameters from macro.args --&gt;
[ toolkit.DebugMacroName = json.get( arg( 0 ), 0 ) ]
[ toolkit.DebugMacroLocation = json.get( arg( 0 ), 1 ) ]
[ toolkit.DebugExpectations = json.get( arg( 0 ), 2 ) ]
[ toolkit.DebugVariables = json.remove( json.remove( json.remove( arg( 0 ), 0 ), 0 ), 0 ) ] 

&lt;!-- Build toolkit.DebugEnvironmentRows --&gt;
[ toolkit.DebugEnvironmentRows = &quot;&quot; ]

&lt;!-- Macro name --&gt;
[ toolkit.DebugTableRowTitle = toolkit.DebugCurrentMacroTitle ]
[ toolkit.DebugTableRowContent = toolkit.DebugMacroName ]
[ toolkit.DebugEnvironmentRows = toolkit.DebugEnvironmentRows + strformat( toolkit.DebugTableRow ) ]

&lt;!-- Macro location --&gt;
[ toolkit.DebugTableRowTitle = toolkit.DebugMacroLocationTitle ]
[ toolkit.DebugTableRowContent = toolkit.DebugMacroLocation ]
[ toolkit.DebugEnvironmentRows = toolkit.DebugEnvironmentRows + strformat( toolkit.DebugTableRow ) ]

&lt;!-- Current token --&gt;
[ toolkit.DebugTableRowTitle = toolkit.DebugCurrentTokenTitle ]
[ toolkit.DebugTableRowContent = getName( currentToken() ) + &quot;&lt;br&gt;&lt;i&gt;&quot; + currentToken() + &quot;&lt;/i&gt;&quot; ]
[ toolkit.DebugEnvironmentRows = toolkit.DebugEnvironmentRows + strformat( toolkit.DebugTableRow ) ]

&lt;!-- Impersonated token --&gt;
[ toolkit.DebugTableRowTitle = toolkit.DebugImpersonatedTokenTitle ]
[ if( hasImpersonated() ), code:
{
    [ toolkit.DebugTableRowContent = getImpersonatedName() + &quot;&lt;br&gt;&lt;i&gt;&quot; + getImpersonated() + &quot;&lt;/i&gt;&quot; ]
};{
    [ toolkit.DebugTableRowContent = toolkit.DebugImpersonatedTokenNone ]
} ]
[ toolkit.DebugEnvironmentRows = toolkit.DebugEnvironmentRows + strformat( toolkit.DebugTableRow ) ]

&lt;!-- Selected tokens --&gt;
[ toolkit.DebugTableRowTitle = toolkit.DebugSelectedTokensTitle ]
[ toolkit.SelectedTokens = getSelected(&quot;json&quot;) ]
[ toolkit.SelectedTokenCount = json.length( toolkit.SelectedTokens ) ]
[ if( toolkit.SelectedTokenCount &gt; 0 ), code:
{
    [ toolkit.DebugTableRowContent = &quot;&quot; ]
    [ foreach( SelectedToken, toolkit.SelectedTokens ), code:
    {
        [ toolkit.DebugTableRowContent = toolkit.DebugTableRowContent +
            if( roll.count != 0, &quot;&lt;/td&gt;&lt;/tr&gt;&quot;, &quot;&quot; ) +
            getName( SelectedToken ) +
            &quot;&lt;br&gt;&lt;i&gt;&quot; + SelectedToken + &quot;&lt;/i&gt;&quot;
        ]
    } ]
};{
    [ toolkit.DebugTableRowContent = toolkit.DebugSelectedTokensNone ]
} ]
[ toolkit.DebugEnvironmentRows = toolkit.DebugEnvironmentRows + strformat( toolkit.DebugTableRow ) ]

&lt;!-- Build toolkit.DebugVariableRows --&gt;
[ toolkit.DebugVariableRows = &quot;&quot; ]
[ foreach( DebugVariable, toolkit.DebugVariables ), code:
{
    [ toolkit.DebugTableRowTitle = DebugVariable ]
    [ toolkit.DebugTableRowContent = eval( DebugVariable ) ]
    [ toolkit.DebugVariableRows = toolkit.DebugVariableRows + strformat( toolkit.DebugTableRow ) ]
} ]

&lt;!-- Show debug --&gt;
[ toolkit.DebugBreak = input( strformat( toolkit.DebugInputParameters ) ) ]
[ abort( toolkit.DebugBreak ) ] </command>
                      <label>displayDebug</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>47</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>47</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[ DEBUG_MODE = 1 ]

[ if( DEBUG_MODE ): displayDebug( macro.args ) ] </command>
                      <label>debug</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>49</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>49</index>
                      <colorKey>fuchsia</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: tempVar = json.toStrProp(macro.args)]
[h: varsFromStrProp(tempVar)]
[h: tempVar = replace(tempVar,&quot;;&quot;,&quot;&lt;br&gt;&quot;)]

[h, if(json.isEmpty(macro.args)): macro.args = json.set (&quot;&quot;,&quot;currentAttribute&quot;,&quot;&quot;)]

[h, if(json.isEmpty(currentAttribute)): macro.args = json.set(macro.args,&quot;currentAttribute&quot;,&quot;Strength&quot;)]

[h, if(attributeButton == &quot;&quot;): attributeButton = currentAttribute; currentAttribute = attributeButton]

[h: skillPointsAvailable = getProperty(&quot;Skill Points&quot;,playerTokenID)]
[h, if(isPropertyEmpty(&quot;Skill Points Used&quot;,playerTokenID)):skillPointsUsed = 0;skillPointsUsed = getProperty(&quot;Skill Points Used&quot;,playerTokenID)]

[h, if(json.isEmpty(macro.args)): macro.args = json.set(&quot;&quot;,&quot;currentAttribute&quot;,&quot;Strength&quot;)]

[h: skillLibrary = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]	
[h: level = getProperty(&quot;level&quot;,playerTokenID)]
[h: profession = getProperty(&quot;Profession&quot;,playerTokenID)]
[h, switch(profession):
case &quot;Combat Spec&quot;: professionChar = &quot;C&quot;;
case &quot;Free Agent&quot;: professionChar = &quot;F&quot;;
case &quot;Diplomat/Combat Spec&quot;: professionChar = &quot;D,C&quot;;
case &quot;Diplomat/Free Agent&quot;: professionChar = &quot;D,F&quot;;
case &quot;Diplomat/Tech Op&quot;: professionChar = &quot;D,T&quot;;
case &quot;Tech Ops&quot;: professionChar = &quot;T&quot;;
default: professionChar = &quot;X&quot;;]

[h, if(attributeButton == &quot;Strength&quot;): attributeSkillList = getLibProperty(&quot;strengthList&quot;,&quot;Lib:Library&quot;)]
[h, if(attributeButton == &quot;Dexterity&quot;): attributeSkillList = getLibProperty(&quot;dexterityList&quot;,&quot;Lib:Library&quot;)]
[h, if(attributeButton == &quot;Constitution&quot;): attributeSkillList = getLibProperty(&quot;constitutionList&quot;,&quot;Lib:Library&quot;)]
[h, if(attributeButton == &quot;Intelligence&quot;): attributeSkillList = getLibProperty(&quot;intelligenceList&quot;,&quot;Lib:Library&quot;)]
[h, if(attributeButton == &quot;Willpower&quot;): attributeSkillList = getLibProperty(&quot;willpowerList&quot;,&quot;Lib:Library&quot;)]
[h, if(attributeButton == &quot;Personality&quot;): attributeSkillList = getLibProperty(&quot;personalityList&quot;,&quot;Lib:Library&quot;)]

[h: knownBroadSkills = getProperty(&quot;Broad Skills&quot;, playerTokenID)]
[h: knownSpecialistSkills = getProperty(&quot;Skills&quot;, playerTokenID)]
[h: attributeNames = json.append(&quot;&quot;,&quot;Strength&quot;,&quot;Dexterity&quot;,&quot;Constitution&quot;,&quot;Intelligence&quot;,&quot;Willpower&quot;,&quot;Personality&quot;)]
[h: tableString = &quot;&quot;]

[h: freeBroadSkills = getProperty(&quot;Free Broad Skills&quot;,playerTokenID)]

[h, foreach(skillName, attributeSkillList), code :{
	


	[h: skillInfo = json.get(skillLibrary,skillName)]

	
	[h: skillBroad = json.get(skillInfo,&quot;broad&quot;)]
	
	[h: skillBroadIsAttribute = json.contains(attributeNames,skillBroad)]
	[h: &apos;&lt;!-- If skill is broad skill --&gt;&apos;]
	[h, if(skillBroadIsAttribute), code :{
		[h: isBroadSkill = 1]
		};{
		[h: isBroadSkill = 0]
		}
	]
	[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
	[h: skillUntrained = json.get(skillInfo,&quot;untrained&quot;)]

	[h: &apos;&lt;!-- Rank --&gt;&apos;]

	[h: knownSpecialistSkill = json.get(knownSpecialistSkills,skillName)]
	[h: skillNotInSkillsJSON = (json.isEmpty(knownSpecialistSkill))]	

	[h, if(skillNotInSkillsJSON):
		knownSkillJSON = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,&quot;&quot;);
		knownSkillJSON = json.get(knownSpecialistSkills,skillName)]	
	[h: rank = json.get(knownSkillJSON,&quot;Rank&quot;)]
		
	[h: &apos;&lt;!-- If skill is broad and unknown --&gt;&apos;]	
	
	[h: skillIsFreeBroad = listContains(freeBroadSkills,skillName)]
	
	[h, if((isBroadSkill)&amp;&amp;(! skillIsFreeBroad)), code :{
		[h: radioButtonInBroad = strformat(&apos;&lt;input type=&quot;radio&quot; value=&quot;%{skillName}&quot; name=&quot;radio&quot;&gt;&apos;)]
		};{
		[h: radioButtonInBroad = &quot;&quot;]
	}]

	[h: &apos;&lt;!-- Save broad --&gt;&apos;]
	[h, if (isBroadSkill), code :{
		[h, if (rank == &quot;&quot;): tempRank = 0; tempRank = rank]
		[h: lastBroadSkillRank = tempRank] };{}]
		
	[h: &apos;&lt;!-- If specialist skills broad skill rank is 0 (unlearned) --&gt;&apos;]
	
	[h, if ((lastBroadSkillRank == 0)&amp;&amp;(isBroadSkill == 0)), code :{
		[h: radioButtonInSpecialist = &quot;&quot;]};{
		[h: radioButtonInSpecialist = strformat(&apos;&lt;input type=&quot;radio&quot; value=&quot;%{skillName}&quot; name=&quot;radio&quot;&gt;&apos;)]}]

	[h: &apos;&lt;!-- Cost --&gt;&apos;]
	[h: baseCost = json.get(skillInfo,&quot;cost&quot;)]
	[h: skillProfString = json.get(skillInfo,&quot;profession&quot;)]
	[h: reduceCost = 0]
	[h, foreach(char,professionChar), code:
		{
		[h: tempVar = indexOf(skillProfString, char)]
		[h, if(tempVar != -1): reduceCost = 1]
		}
	]
	
	[h: skillCost = baseCost - reduceCost]
	
	[h, if((isBroadSkill)&amp;&amp;(skillIsFreeBroad)): skillCost = strformat(&apos;&lt;u&gt;0&lt;/u&gt;&apos;)]
	
	[h: &apos;&lt;!-- If broad skill --&gt;&apos;]
	[h, if(isBroadSkill), code :{
		[h: baseDie = &quot;+d4&quot;] };{
		[h: baseDie = &quot;+d0&quot;] }]
		
	[h, if(rank == &quot;&quot;): rank = 0]
		
	[h: &apos;&lt;!-- Score --&gt;&apos;]
	[h: tokenAttribute = getProperty(attributeButton,playerTokenID)]
	[h, if(isBroadSkill): ordinaryScore = tokenAttribute; ordinaryScore = tokenAttribute + rank]
	[h, if (rank == 0), code :{
		[h: ordinaryScore = floor(ordinaryScore / 2)] };{}]
	[h: goodScore = floor(ordinaryScore / 2)]
	[h: amazingScore = floor(goodScore / 2)]
	[h: score = ordinaryScore + &quot;/&quot; + goodScore + &quot;/&quot; + amazingScore]
	
	[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
	[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)): score = &quot;0/0/0&quot;]
	
	[h, if(rank == &quot;&quot;): rank = 0]

	[h: &apos;&lt;!-- Start tableString format --&gt;&apos;]

	[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
	[h, if (skillUntrained == &quot;No&quot;), code :{ 	
		[h: tableString = tableString + strformat(&apos;&lt;font color=&quot;blue&quot;&gt;&lt;tr&gt;&lt;td align=center&gt;&apos;)] };{
		[h: tableString = tableString + strformat(&apos;&lt;tr&gt;&lt;td align=center&gt;&apos;)]}]
	
	[h: &apos;&lt;!-- Radio if Broad --&gt;&apos;]
	[h, if (isBroadSkill), code :{
		[h: tableString = tableString + strformat(&apos;%{radioButtonInBroad}&lt;/td&gt;&apos;)] };{
		[h: tableString = tableString + strformat(&apos;&lt;/td&gt;&apos;)] }]
	
	[h: openUnderline = &quot;&quot;][h: closeUnderline = &quot;&quot;]
	[h, if (listContains(freeBroadSkills,skillName)): isFreeBroadSkill = 1; isFreeBroadSkill = 0]
	[h, if ((isBroadSkill)&amp;&amp;(isFreeBroadSkill)): openUnderline = strformat(&apos;&lt;u&gt;&apos;)]
	[h, if ((isBroadSkill)&amp;&amp;(isFreeBroadSkill)): closeUnderline = strformat(&apos;&lt;/u&gt;&apos;)]
	
	[h: &apos;&lt;!-- Name, Radio if Specialist --&gt;&apos;]
	[h, if (isBroadSkill), code :{
		[h: tableString = tableString + strformat(&apos;&lt;td align=left&gt;&lt;b&gt;%{openUnderline}%{skillName}%{closeUnderline}&lt;/b&gt;&lt;/td&gt;&apos;)] };{
		[h: tableString = tableString + strformat(&apos;&lt;td align=left&gt;%{radioButtonInSpecialist}&lt;i&gt;%{skillName}&lt;/i&gt;&lt;/td&gt;&apos;)]}]
	
	[h: &apos;&lt;!-- Rank --&gt;&apos;]
	[h, if (isBroadSkill), code :{
		[h: tableString = tableString + strformat(&apos;&lt;td align=center&gt;&lt;b&gt;%{rank}&lt;b&gt;&lt;/td&gt;&apos;)] };{
		[h: tableString = tableString + strformat(&apos;&lt;td align=center&gt;%{rank}&lt;/td&gt;&apos;)]}]
		
	[h: &apos;&lt;!-- Score --&gt;&apos;]	
	[h, if (isBroadSkill), code :{
		[h: tableString = tableString + strformat(&apos;&lt;td align=center&gt;&lt;b&gt;%{score}&lt;/b&gt;&lt;/td&gt;&apos;)] };{
		[h: tableString = tableString + strformat(&apos;&lt;td align=center&gt;%{score}&lt;/td&gt;&apos;)] }]
		
	[h: &apos;&lt;!-- Die --&gt;&apos;]	
	[h, if (isBroadSkill), code :{
		[h: tableString = tableString + strformat(&apos;&lt;/b&gt;&lt;td align=center&gt;&lt;b&gt;%{baseDie}&lt;/b&gt;&lt;/td&gt;&apos;)] };{
		[h: tableString = tableString + strformat(&apos;&lt;td align=center&gt;%{baseDie}&lt;/td&gt;&apos;)] }]
		
	[h: &apos;&lt;!-- Cost --&gt;&apos;]	
	[h, if (isBroadSkill), code :{
		[h: tableString = tableString + strformat(&apos;&lt;td align=center&gt;&lt;b&gt;%{skillCost}&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&apos;)] };{
		[h: tableString = tableString + strformat(&apos;&lt;td align=center&gt;%{skillCost}&lt;/td&gt;&lt;/tr&gt;&apos;)] }]
		
	[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
	[h, if (skillUntrained == &quot;No&quot;), code :{	
		[h: tableString = tableString + strformat(&apos;&lt;/font&gt;&apos;)] };{ }]
		
	[h: &apos;&lt;!-- End tableString format --&gt;&apos;]	
	}
]


[h: processForm = macroLinkText(&quot;processSkillForm@Lib:bw&quot;, &quot;none&quot;)]


	&lt;body bgcolor=#FFFFFF&gt;
	&lt;form action=&quot;[r: processForm]&quot; method=&quot;json&quot;&gt;
	  &lt;input type=&quot;hidden&quot; name=&quot;lastBroadSkillRank&quot; value=&quot;[r: lastBroadSkillRank]&quot;&gt;
	  &lt;input type=&quot;hidden&quot; name=&quot;playerTokenName&quot; value=&quot;[r: playerTokenName]&quot;&gt;
	  &lt;input type=&quot;hidden&quot; name=&quot;playerTokenID&quot; value=&quot;[r: playerTokenID]&quot;&gt;
	  &lt;input type=&quot;hidden&quot; name=&quot;currentAttribute&quot; value=&quot;[r: attributeButton]&quot;&gt;
	  &lt;input type=&quot;hidden&quot; name=&quot;attributeButton&quot; value=&quot;&quot;&gt;
	  &lt;input type=&quot;hidden&quot; name=&quot;radio&quot; value=&quot;&quot;&gt;
	  &lt;input type=&quot;hidden&quot; name=&quot;buttonPress&quot; value=&quot;&quot;&gt;
	  &lt;table width=100%&gt;
		&lt;!-- head--&gt;


		&lt;tr&gt;
		  &lt;td&gt;
			&lt;!-- data --&gt;	

			&lt;table&gt;
			  &lt;tr&gt;
				&lt;td align=right&gt;Name:&lt;/td&gt;

				&lt;td&gt;[r: playerTokenName]&lt;/td&gt;
			  &lt;/tr&gt;
			  
			  &lt;tr&gt;
				&lt;td align=right&gt;Level:&lt;/td&gt;

				&lt;td&gt;[r: level]&lt;/td&gt;
			  &lt;/tr&gt;
						  
			  &lt;tr&gt;
				&lt;td align=right&gt;Profession:&lt;/td&gt;

				&lt;td&gt;[r: profession]&lt;/td&gt;
			  &lt;/tr&gt;

			  &lt;tr&gt;
				&lt;td align=right&gt;Skill Points Available:&lt;/td&gt;

				&lt;td&gt;[r: skillPointsAvailable]&lt;/td&gt;
			  &lt;/tr&gt;
			&lt;/table&gt;
		  &lt;/td&gt;

		&lt;/tr&gt;&lt;!-- center button block / tabs --&gt;

		&lt;tr align=&quot;center&quot;&gt;
		  &lt;td&gt;
			&lt;table align=center cellpadding=0 cellspacing=4&gt;&lt;tr&gt;
				&lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;attributeButton&quot; value=&quot;  Strength  &quot;&gt;&lt;/td&gt;
				&lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;attributeButton&quot; value=&quot;  Dexterity  &quot;&gt;&lt;/td&gt;
				&lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;attributeButton&quot; value=&quot; Constitution &quot;&gt;&lt;/td&gt;
				&lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;attributeButton&quot; value=&quot; Intelligence &quot;&gt;&lt;/td&gt;
				&lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;attributeButton&quot; value=&quot;  Willpower  &quot;&gt;&lt;/td&gt;
				&lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;attributeButton&quot; value=&quot; Personality &quot;&gt;&lt;/td&gt;
			&lt;/table&gt;
		  &lt;/td&gt;
		&lt;/tr&gt;&lt;!-- bottom data block --&gt;

		&lt;tr valign=top&gt;
		  &lt;td width=100% align=&quot;left&quot;&gt;

			&lt;table width=100% bgcolor=555555 cellpadding=2&gt;
				&lt;tr&gt;
					&lt;td&gt;
						&lt;table bgcolor=#ECE9D8 width=100% cellspacing=4 cellpadding=0&gt;
						  &lt;tr align=center&gt;
							&lt;td width=25&gt;&lt;/td&gt;
						 
							&lt;td width=100% align=left&gt;[r: currentAttribute] Skills&lt;/td&gt;

							&lt;td width=80&gt;Rank&lt;/td&gt;

							&lt;td width=80&gt;Score&lt;/td&gt;

							&lt;td width=80&gt;Die&lt;/td&gt;

							&lt;td width=80&gt;Cost&lt;/td&gt;
						  &lt;/tr&gt;
						  &lt;tr&gt;
							&lt;td colspan=6 style=&quot;background-color:#555555&quot;&gt;&lt;span style=&quot;font-size:1pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/td&gt;
						  &lt;/tr&gt;
						  [h: &apos;&lt;!-- formatted tableString input here --&gt;&apos;]	
						  [r: tableString]
						  [h: &apos;&lt;!-- formatted tableString input here --&gt;&apos;]	
						&lt;/table&gt;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/table&gt;
		  &lt;/td&gt;

		  &lt;td align=center&gt;&lt;!-- button block --&gt;
			&lt;table cellspacing=0 cellpadding=1&gt;
				&lt;tr&gt;
					&lt;td align=center&gt;&lt;input type=&quot;submit&quot; name=buttonPress value=&quot;    Add    &quot;&gt;&lt;/td&gt;
				&lt;/tr&gt;
				&lt;tr&gt;
					&lt;td align=center&gt;&lt;input type=&quot;submit&quot; name=buttonPress value=&quot; Remove &quot;&gt;&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/table&gt;

		&lt;/tr&gt;
	  &lt;/table&gt;
	&lt;/form&gt;

	&lt;/body&gt;</command>
                      <label>skillForm</label>
                      <group>Forms</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth>100</minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>51</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>51</index>
                      <colorKey>fuchsia</colorKey>
                      <hotKey>None</hotKey>
                      <command>    [frame(&quot;Skills&quot;): {

        [r, macro(&quot;skillForm@Lib:bw&quot;): macro.args]

    }]

</command>
                      <label>openSkillFrame</label>
                      <group>Forms</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>52</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>52</index>
                      <colorKey>fuchsia</colorKey>
                      <hotKey>None</hotKey>
                      <command>
[h: attributeButton = trim(json.get(macro.args,&quot;attributeButton&quot;))]

[h: macro.args = json.set(macro.args,&quot;attributeButton&quot;,attributeButton)]

[h: varsFromStrProp(json.toStrProp(macro.args))]

[h: output = macro.args]


[h, if ((buttonPress == &quot;Add&quot;)||(buttonPress == &quot;Remove&quot;)): modifyButtonPressed = 1; modifyButtonPressed = 0]

[h, if ((radio == &quot;&quot;)&amp;&amp;(attributeButton == 0)), code :{[h: abort(0)]};{}]	
	
[h, if (radio != &quot;&quot;): radioSelected = 1; radioSelected = 0]
	
[h: attributeNames = json.append(&quot;&quot;,&quot;Strength&quot;,&quot;Dexterity&quot;,&quot;Constitution&quot;,&quot;Intelligence&quot;,&quot;Willpower&quot;,&quot;Personality&quot;)]
[h, if(json.contains(attributeNames,attributeButton)): attributeButtonPressed = 1; attributeButtonPressed = 0]

[h, if ((attributeButtonPressed == 1)&amp;&amp;(attributeButton == currentAttribute)), code :{
	[h: abort(0)]
	};{}]
	

[h, if((modifyButtonPressed)&amp;&amp;(! radioSelected)), code :{
	[h: abort(0)]
	};{}]

	
	[h: &apos;&lt;!-- GET VARS --&gt;&apos;]
	

[h: skillPoints = getProperty(&quot;Skill Points&quot;,playerTokenID)]
[h: newSkillPoints = skillPoints]
[h: broadSkillPoints = getProperty(&quot;Additional Broad Skills&quot;,playertokenID)]
[h: newBroadSkillPoints = broadSkillPoints]
[h: skillLibrary = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]


[h: skillName = radio]

[h: skillSelected = ! (json.isEmpty(radio))]

[h, if(! skillSelected):
skillInfo = json.set(&quot;&quot;,&quot;name&quot;,&quot;&quot;,&quot;cost&quot;,&quot;0&quot;,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;&quot;);
skillInfo = json.get(skillLibrary,skillName)]

[h: skillBroad = json.get(skillInfo, &quot;broad&quot;)]

[h: knownSkills = getProperty(&quot;Skills&quot;,playerTokenID)] 
[h: knownSkillsFields = json.fields(knownSkills)]
[h: isInArrayAlready = listContains(knownSkillsFields,skillName)]

[h, if (isInArrayAlready == 0): thisSkill = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,0); thisSkill = json.get(knownSkills, skillName)]

[h: skillRank = json.get(thisSkill, &quot;Rank&quot;)]
[h, if(json.isEmpty(skillRank)): skillRank = 0]
[h: newSkillRank = skillRank]


[h: skillBroadIsAttribute = json.contains(attributeNames,skillBroad)]
		[h, if(skillBroadIsAttribute), code :{
			[h: isBroadSkill = 1]
			};{
			[h: isBroadSkill = 0]
			}
		]

[h: profession = getProperty(&quot;Profession&quot;,playerTokenID)]
[h, switch(profession):
	case &quot;Combat Spec&quot;: professionChar = &quot;C&quot;;
	case &quot;Free Agent&quot;: professionChar = &quot;F&quot;;
	case &quot;Diplomat&quot;: professionChar = &quot;D&quot;;
	case &quot;Tech Op&quot;: professionChar = &quot;T&quot;;
	default: professionChar = &quot;X&quot;]

[h: baseCost = json.get(skillInfo,&quot;cost&quot;)]
[h: skillProfString = json.get(skillInfo,&quot;profession&quot;)]
[h: searchIndex = indexOf(skillProfString, professionChar)]
[h, if(searchIndex != -1), code :{
	[h: skillCost = baseCost - 1] };{
	[h: skillCost = baseCost] }]

	[h: &apos;&lt;!-- ADD SKILL --&gt;&apos;]

	
[r, if ((buttonPress == &quot;Add&quot;)&amp;&amp;(skillCost &gt; skillPoints)&amp;&amp;(skillSelected)), code :{
	[r: broadcast(&quot;Your current skill points (&quot; + skillPoints + &quot;) is not enough to buy &quot; + skillName + &quot; at (&quot; + skillCost + &quot;) cost.&quot;, getPlayerName())]
	[r: abort(0)]
	};{}]

	
[r, if ((buttonPress == &quot;Add&quot;)&amp;&amp;(isBroadSkill == 1)&amp;&amp;(broadSkillPoints &lt; 1)&amp;&amp;(skillSelected)), code :{
	[r: broadcast(&quot;You need at least one spare broad skill point to purchase &quot; + skillName + &quot; (current: &quot;+ broadSkillPoints + &quot;)&quot;, getPlayerName())]
	[r: abort(0)]
	};{}]
	

	
[h, if ((buttonPress == &quot;Add&quot;)&amp;&amp;(isBroadSkill == 1)&amp;&amp;(broadSkillPoints &gt;= 1)&amp;&amp;(skillPoints &gt;= skillCost)&amp;&amp;(skillSelected)
	&amp;&amp;(skillRank==0)), code :{
	[h: newBroadSkillPoints = broadSkillPoints - 1]
	[h: newSkillPoints = skillPoints - skillCost]
	[h: newSkillRank = skillRank + 1]
	[h: thisSkill = json.set(thisSkill,&quot;Rank&quot;,newSkillRank)]
	};{}]
	


[r, if ((buttonPress == &quot;Add&quot;)&amp;&amp;(isBroadSkill == 0)&amp;&amp;(broadSkillPoints &gt;= 1)&amp;&amp;(skillPoints &gt;= skillCost)&amp;&amp;(skillSelected)), code :{
	[h: level = getProperty(&quot;Level&quot;,playerTokenID)]
	[h: levelPlusTwo = level + 2]
	[r, if ( skillRank &gt;= levelPlusTwo ), code :{
		[r: broadcast(&quot;You can learn a maximum of rank &quot;+ levelPlusTwo +&quot; in each skill at your current level (&quot;+level+&quot;).&quot;, getPlayerName())]
		[h: abort(0)]
		};{}
	]
	[h: newBroadSkillPoints = broadSkillPoints]
	[h: newSkillPoints = skillPoints - skillCost]
	[h: newSkillRank = skillRank + 1]
	[h: thisSkill = json.set(thisSkill,&quot;Rank&quot;,newSkillRank)]
	};{}]
	
[h, if ((buttonPress == &quot;Add&quot;)&amp;&amp;(isBroadSkill == 1)&amp;&amp;(broadSkillPoints &gt;= 1)&amp;&amp;(skillPoints &gt;= skillCost)&amp;&amp;(skillSelected)
	&amp;&amp;(skillRank == 1)), code :{
	[h: broadcast(&quot;You can only learn one rank in a broad skill&quot;, getPlayerName())]
	[h: abort(0)]
	};{}]

	
	[h: &apos;&lt;!-- END ADD SKILL --&gt;&apos;]
	
	[h: &apos;&lt;!-- REMOVE SKILL --&gt;&apos;]
	
	
[h, if ( getProperty(&quot;Locked&quot;, playerTokenID) == &quot;Yes&quot;), code :{
	[h: broadcast(&quot;You cannot unlearn skills because your skills locked&quot;, getPlayerName())]
	[h: locked = 1]
	};{
	[h: locked = 0]
	}
]


[r, if ((locked == 0)&amp;&amp;(buttonPress == &quot;Remove&quot;)&amp;&amp;(isBroadSkill == 1)&amp;&amp;(skillSelected)&amp;&amp;(skillRank &gt;= 1)), code :{

	[h: freeBroadSkills = getProperty(&quot;Free Broad Skills&quot;,playerTokenID)]
	
	[h, if (listContains(freeBroadSkills,skillName)), code :{
		[h: broadcast(&quot;You cannot unlearn a free racial broad skill.&quot;, getPlayerName())]
		[h: abort(0)]	
		};{
		}
	]


	[h: skillDatabase = getLibProperty(&quot;SkillDatabase&quot;,&quot;Lib:Library&quot;)]

	[h: skillInDatabase = json.get(skillDatabase,skillName)]

	[h: specialistSkillsUnderBroad = json.toList(skillInDatabase)]

	[h: allRanksUnderBroadAreRankZero = 1]
	[h, foreach(specialistSkillUnderBroad, specialistSkillsUnderBroad), code :{
		[h: specialistSkillInList = json.get(knownSkills,specialistSkillUnderBroad)]
		[h: specialistSkillUnderBroadRank = json.get(specialistSkillInList,&quot;Rank&quot;)]
		[h, if (specialistSkillUnderBroadRank &gt;= 1): allRanksUnderBroadAreRankZero = 0]
		}
	]
	
	[h, if (allRanksUnderBroadAreRankZero), code :{	
		[h: newBroadSkillPoints = broadSkillPoints + 1]
		[h: newSkillPoints = skillPoints + skillCost]
		[h: newSkillRank = skillRank - 1]
		[h: thisSkill = json.set(thisSkill,&quot;Rank&quot;,newSkillRank)]
		};{
		[h: broadcast(&quot;You must unlearn all specialist skills under a broad before unlearning the broad skill.&quot;, getPlayerName())]
		[h: abort(0)]
		}
	]
	};{
	}
]

	
[r, if ((locked == 0)&amp;&amp;(buttonPress == &quot;Remove&quot;)&amp;&amp;(isBroadSkill == 0)&amp;&amp;(skillSelected)&amp;&amp;(skillRank &gt;= 1)), code :{
	[h: newSkillPoints = skillPoints + skillCost]
	[h: newSkillRank = skillRank - 1]
	[h: thisSkill = json.set(thisSkill,&quot;Rank&quot;,newSkillRank)]
	};{}]	
	
	
[r, if ((locked == 0)&amp;&amp;(buttonPress == &quot;Remove&quot;)&amp;&amp;(skillSelected)&amp;&amp;(skillRank &lt;= 0)), code :{
	[h: broadcast(&quot;You cannot remove a skill which has no points invested.&quot;, getPlayerName())]
	[r: abort(0)]
	};{}]	
	



[h: knownSkills = json.set(knownSkills,skillName,thisSkill)]
[h: setProperty(&quot;Skills&quot;, knownSkills,playerTokenID)]
[h: setProperty(&quot;Skill Points&quot;, newSkillPoints, playerTokenID)]
[h: setProperty(&quot;Additional Broad Skills&quot;, newBroadSkillPoints, playerTokenID)]

	[h: &apos;&lt;!-- END REMOVE SKILL --&gt;&apos;]
	
[h: setProperty(&quot;Refresh Character Sheet&quot;,1,playerTokenId)]

[macro(&quot;openSkillFrame@Lib:bw&quot;): output]</command>
                      <label>processSkillForm</label>
                      <group>Forms</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth>100</minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>53</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>53</index>
                      <colorKey>red</colorKey>
                      <hotKey>None</hotKey>
                      <command>[ defineFunction(&quot;automaticFire&quot;, &quot;automaticFire@this&quot;, 0, 0) ]
[ defineFunction(&quot;defineSkillTable&quot;, &quot;defineSkillTable@this&quot;, 0, 0) ]
[ defineFunction(&quot;applyRangedAttack&quot;, &quot;applyRangedAttack@this&quot;, 0, 0) ]
[ defineFunction(&quot;applyAutomaticAttack&quot;, &quot;applyAutomaticAttack@this&quot;, 0, 0) ]
[ defineFunction(&quot;applyCustomAttack&quot;, &quot;applyCustomAttack@this&quot;, 0, 0) ]
[ defineFunction(&quot;selectSelected&quot;, &quot;selectSelected@this&quot;, 0, 0) ]
[ defineFunction(&quot;selectOwned&quot;, &quot;selectOwned@this&quot;, 0, 0) ]
[ defineFunction(&quot;damageParserSingle&quot;, &quot;damageParserSingle@this&quot;, 0, 0) ]
[ defineFunction(&quot;initiativeIDList&quot;, &quot;initiativeIDList@this&quot;, 0, 0) ]

[ defineFunction(&quot;debug&quot;, &quot;debug@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;displayDebug&quot;, &quot;displayDebug@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;pause&quot;, &quot;pause@this&quot;, 1, 0 ) ] 
[ defineFunction(&quot;getMod&quot;, &quot;getMod@this&quot; , 1, 0) ]
[ defineFunction(&quot;htmlTooltip&quot;, &quot;htmlTooltip@this&quot;, 1, 0) ]
[ defineFunction(&quot;removeWhitespace&quot;, &quot;removeWhitespace@this&quot;, 1, 0) ]
[ defineFunction(&quot;jsonToVars&quot;, &quot;jsonToVars@this&quot;, 1, 0) ]
[ defineFunction(&quot;varsToJson&quot;, &quot;varsToJson@this&quot;, 1, 0) ]
[ defineFunction(&quot;rangeParser&quot;, &quot;rangeParser@this&quot;, 1, 0) ]
[ defineFunction(&quot;damageParser&quot;, &quot;damageParser@this&quot;, 1, 0) ]
[ defineFunction(&quot;automaticRoll&quot;, &quot;automaticRoll@this&quot;, 1, 0) ]
[ defineFunction(&quot;alternityRoll&quot;, &quot;alternityRoll@this&quot;, 1, 0) ]
[ defineFunction(&quot;resetActionsPerRound&quot;, &quot;resetActionsPerRound@this&quot;, 1, 0) ]
[ defineFunction(&quot;lastInPhase&quot;, &quot;lastInPhase@this&quot;, 1, 0) ]
[ defineFunction(&quot;applyDamage&quot;,&quot;applyDamage@this&quot;, 1, 0)]
[ defineFunction(&quot;formatTooltip&quot;,&quot;formatTooltip@this&quot;, 1, 0)]
[ defineFunction(&quot;armorParse&quot;,&quot;armorParse@this&quot;, 1, 0)]
[ defineFunction(&quot;chatBox&quot;,&quot;chatBox@this&quot;, 1, 0)]
[ defineFunction(&quot;jsonObjectSort&quot;, &quot;jsonObjectSort@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;resetMovement&quot;, &quot;resetMovement@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;getPropVar&quot;, &quot;getPropVar@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;autoExecute&quot;, &quot;autoExecute@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;tooltipFromObject&quot;, &quot;tooltipFromObject@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;skillCheckBasic&quot;, &quot;skillCheckBasic@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;getGMSetting&quot;, &quot;getGMSetting@this&quot;, 1, 1 ) ]
[ defineFunction(&quot;getSkillRank&quot;, &quot;getSkillRank@this&quot;, 1, 0 ) ]
[ defineFunction(&quot;skillCheckSpecific&quot;, &quot;skillCheckSpecific@this&quot;, 1, 0 ) ]</command>
                      <label>onCampaignLoad</label>
                      <group>zSettings</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>55</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>55</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input = stringToList(arg(0),&quot;/&quot;)]
[h: shortRange = listGet(input,0)]
[h: mediumRange = listGet(input,1)]
[h: longRange = listGet(input,2)]
[h: output = strPropFromVars(&quot;shortRange,mediumRange,longRange&quot;,&quot;UNSUFFIXED&quot;)]
[h: macro.return = output]</command>
                      <label>rangeParser</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>57</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>57</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input = stringToList(arg(0),&quot;/&quot;)]
[h: ordinary = listGet(input,0)]
[h: ordinaryString = ordinary]
[h: ordinary2 = stringToList(ordinary,&quot;d&quot;)]
[h: ordinaryQuantity = listGet(ordinary2,0)]
[h: ordinary3 = listGet(ordinary2,1)]
[h: indexPlus = indexOf(ordinary3,&quot;+&quot;)]
[h: indexMinus = indexOf(ordinary3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: ordinary4 = stringToList(ordinary3,&quot;\\+&quot;)]
	[h: ordinarySign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: ordinary4 = stringToList(ordinary3,&quot;\\-&quot;)]
		[h: ordinarySign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: ordinarySides = listGet(ordinary4,0)]
[h: ordinary5 = listGet(ordinary4,1)]
[h: indexS = indexOf(ordinary5,&quot;s&quot;)]
[h: indexW = indexOf(ordinary5,&quot;w&quot;)]
[h: indexM = indexOf(ordinary5,&quot;m&quot;)]
[h, if (indexS &gt;= 1), code :{
	[h: ordinaryType = &quot;Stun&quot;]
	[h: ordinaryModifier  = replace(ordinary5,&quot;s&quot;,&quot;&quot;)]
	};{}]
[h, if (indexW &gt;= 1), code :{
	[h: ordinaryType = &quot;Wound&quot;]
	[h: ordinaryModifier = replace(ordinary5,&quot;w&quot;,&quot;&quot;)]
	};{}]
[h, if (indexM &gt;= 1), code :{
	[h: ordinaryType = &quot;Mortal&quot;]
	[h: ordinaryModifier = replace(ordinary5,&quot;m&quot;,&quot;&quot;)]
	};{}]
	
	
		
[h: good = listGet(input,1)]
[h: goodString = good]
[h: good2 = stringToList(good,&quot;d&quot;)]
[h: goodQuantity = listGet(good2,0)]
[h: good3 = listGet(good2,1)]
[h: indexPlus = indexOf(good3,&quot;+&quot;)]
[h: indexMinus = indexOf(good3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: good4 = stringToList(good3,&quot;\\+&quot;)]
	[h: goodSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: good4 = stringToList(good3,&quot;\\-&quot;)]
		[h: goodSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: goodSides = listGet(good4,0)]
[h: good5 = listGet(good4,1)]
[h: indexS = indexOf(good5,&quot;s&quot;)]
[h: indexW = indexOf(good5,&quot;w&quot;)]
[h: indexM = indexOf(good5,&quot;m&quot;)]
[h, if (indexS &gt;= 1), code :{
	[h: goodType = &quot;Stun&quot;]
	[h: goodModifier  = replace(good5,&quot;s&quot;,&quot;&quot;)]
	};{}]
[h, if (indexW &gt;= 1), code :{
	[h: goodType = &quot;Wound&quot;]
	[h: goodModifier = replace(good5,&quot;w&quot;,&quot;&quot;)]
	};{}]
[h, if (indexM &gt;= 1), code :{
	[h: goodType = &quot;Mortal&quot;]
	[h: goodModifier = replace(good5,&quot;m&quot;,&quot;&quot;)]
	};{}]

	
	
[h: amazing = listGet(input,2)]
[h: amazingString = amazing]
[h: amazing2 = stringToList(amazing,&quot;d&quot;)]
[h: amazingQuantity = listGet(amazing2,0)]
[h: amazing3 = listGet(amazing2,1)]
[h: indexPlus = indexOf(amazing3,&quot;+&quot;)]
[h: indexMinus = indexOf(amazing3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: amazing4 = stringToList(amazing3,&quot;\\+&quot;)]
	[h: amazingSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: amazing4 = stringToList(amazing3,&quot;\\-&quot;)]
		[h: amazingSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: amazingSides = listGet(amazing4,0)]
[h: amazing5 = listGet(amazing4,1)]
[h: indexS = indexOf(amazing5,&quot;s&quot;)]
[h: indexW = indexOf(amazing5,&quot;w&quot;)]
[h: indexM = indexOf(amazing5,&quot;m&quot;)]
[h, if (indexS &gt;= 1), code :{
	[h: amazingType = &quot;Stun&quot;]
	[h: amazingModifier  = replace(amazing5,&quot;s&quot;,&quot;&quot;)]
	};{}]
[h, if (indexW &gt;= 1), code :{
	[h: amazingType = &quot;Wound&quot;]
	[h: amazingModifier = replace(amazing5,&quot;w&quot;,&quot;&quot;)]
	};{}]
[h, if (indexM &gt;= 1), code :{
	[h: amazingType = &quot;Mortal&quot;]
	[h: amazingModifier = replace(amazing5,&quot;m&quot;,&quot;&quot;)]
	};{}]
	
[h: output = json.set(&quot;&quot;,
&quot;ordinaryQuantity&quot;,ordinaryQuantity,
&quot;ordinarySides&quot;,ordinarySides,
&quot;ordinarySign&quot;,ordinarySign,
&quot;ordinaryModifier&quot;,ordinaryModifier,
&quot;ordinaryType&quot;,ordinaryType,
&quot;ordinaryString&quot;,ordinaryString,
&quot;goodQuantity&quot;,goodQuantity,
&quot;goodSides&quot;,goodSides,
&quot;goodSign&quot;,goodSign,
&quot;goodModifier&quot;,goodModifier,
&quot;goodType&quot;,goodType,
&quot;goodString&quot;,goodString,
&quot;amazingQuantity&quot;,amazingQuantity,
&quot;amazingSides&quot;,amazingSides,
&quot;amazingSign&quot;,amazingSign,
&quot;amazingModifier&quot;,amazingModifier,
&quot;amazingType&quot;,amazingType,
&quot;amazingString&quot;,amazingString)]

[macro.return = output]</command>
                      <label>damageParser</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>58</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>58</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>
&lt;!-- Rolls control die, situation die, and outputs both. Also includes the step value and &quot;+dx&quot; string--&gt;

&lt;!-- Roll control die (d20) --&gt;

[h: controlDieRoll = roll(1,20)]

&lt;!-- Transform input, to avoid abort on 0 value --&gt;

[h: outputList = &quot;&quot;]

[h, for(i,0,3), code :{

	[h: situationDieStep = arg(0) + i]

	[h: input = situationDieStep * 10 + 1]

	[h, switch(input), code:

	case &quot;-49&quot;:
		{[h: situationDieRoll = roll(1,20)]
		[h: situationDieText = &quot;d20&quot;]
		};
	case &quot;-39&quot;:
		{[h: situationDieRoll = roll(1,12)]
		[h: situationDieText = &quot;d12&quot;]
		};
	case &quot;-29&quot;:
		{[h: situationDieRoll = roll(1,8)]
		[h: situationDieText = &quot;d8&quot;]
		};
	case &quot;-19&quot;:
		{[h: situationDieRoll = roll(1,6)]
		[h: situationDieText = &quot;d6&quot;]
		};
	case &quot;-9&quot;:
		{[h: situationDieRoll = roll(1,4)]
		[h: situationDieText = &quot;d4&quot;]
		};
	case &quot;1&quot;:
		{[h: situationDieRoll = &quot;0&quot;]
		[h: situationDieText = &quot;d0&quot;]
		};
	case &quot;11&quot;:
		{[h: situationDieRoll = roll(1,4)]
		[h: situationDieText = &quot;d4&quot;]
		};
	case &quot;21&quot;:
		{[h: situationDieRoll = roll(1,6)]
		[h: situationDieText = &quot;d6&quot;]
		};
	case &quot;31&quot;:
		{[h: situationDieRoll = roll(1,8)]
		[h: situationDieText = &quot;d8&quot;]
		};
	case &quot;41&quot;:
		{[h: situationDieRoll = roll(1,12)]
		[h: situationDieText = &quot;d12&quot;]
		};
	case &quot;51&quot;:
		{[h: situationDieRoll = roll(1,20)]
		[h: situationDieText = &quot;d20&quot;]
		};
	case &quot;61&quot;:
		{[h: situationDieRoll = roll(2,20)]
		[h: situationDieText = &quot;2d20&quot;]
		};
	case &quot;71&quot;:
		{[h: situationDieRoll = roll(3,20)]
		[h: situationDieText = &quot;3d20&quot;]
		};
	case &quot;81&quot;:
		{[h: situationDieRoll = roll(4,20)]
		[h: situationDieText = &quot;4d20&quot;]
		};
	default:
		{[h: assert(1, &quot;automaticRoll switch not valid&quot;)]
		}]

	[h, if(situationDieStep &gt;= 0), code: {[h:stepSymbol = &quot;+&quot;]};{}]
	[h, if(situationDieStep &lt; 0), code: {[h:stepSymbol = &quot;-&quot;]};{}]
	
	[h: outputList = listAppend(outputList,situationDieRoll)]
	[h: outputList = listAppend(outputList,stepSymbol)]
	[h: outputList = listAppend(outputList,situationDieText)]
	
	}
]

&lt;!-- output all fields as an array --&gt;
[h: var1 = listGet(outputList,0)][h: var2 = listGet(outputList,1)][h: var3 = listGet(outputList,2)][h: var4 = listGet(outputList,3)][h: var5 = listGet(outputList,4)][h: var6 = listGet(outputList,5)][h: var7 = listGet(outputList,6)][h: var8 = listGet(outputList,7)][h: var9 = listGet(outputList,8)]
[h: output = json.set(&quot;&quot;,&quot;controlDieRoll&quot;,controlDieRoll,&quot;firstShotRoll&quot;,var1,&quot;firstShotSymbol&quot;,var2,&quot;firstShotText&quot;,var3,&quot;secondShotRoll&quot;,var4,&quot;secondShotSymbol&quot;,var5,&quot;secondShotText&quot;,var6,&quot;thirdShotRoll&quot;,var7,&quot;thirdShotSymbol&quot;,var8,&quot;thirdShotText&quot;,var9)]

[h: macro.return = output]</command>
                      <label>automaticRoll</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>59</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>59</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>	
	[h: hit = &quot;true&quot;]
	[h: currentShot = eval(&quot;success&quot; + i)]
	[h, switch(currentShot), code:
	case &quot;Ordinary success&quot;: {
	   [h: damageDieSides = ordinarySides]
	   [h: damageDieQuantity = ordinaryQuantity]
	   [h: damageDieSign = ordinarySign]
	   [h: damageDieModifier = ordinaryModifier]
	   [h: damageType = ordinaryType]
	   };
	case &quot;Good success&quot;: {
	   [h: damageDieSides = goodSides]
	   [h: damageDieQuantity = goodQuantity]
	   [h: damageDieSign = goodSign]
	   [h: damageDieModifier = goodModifier]
	   [h: damageType = goodType]
	   };
	case &quot;Amazing success&quot;: {
	   [h: damageDieSides = amazingSides]
	   [h: damageDieQuantity = amazingQuantity]
	   [h: damageDieSign = amazingSign]
	   [h: damageDieModifier = amazingModifier]
	   [h: damageType = amazingType]
	   };
	case &quot;Automatic success&quot;: {
	   [h: damageDieSides = amazingSides]
	   [h: damageDieQuantity = amazingQuantity]
	   [h: damageDieSign = amazingSign]
	   [h: damageDieModifier = amazingModifier]
	   [h: damageType = amazingType]
	   };
	case &quot;Failure&quot;: {
	[h: damageDieSides = 0]
	   [h: damageDieQuantity = 0]
	   [h: damageDieSign = &quot;+&quot;]
	   [h: damageDieModifier = 0]
	   [h: damageType = &quot;Stun&quot;]
	   [h: hit = &quot;false&quot;]
	   };
	case &quot;Critical failure&quot;: {
	   [h: damageDieSides = 0]
	   [h: damageDieQuantity = 0]
	   [h: damageDieSign = &quot;+&quot;]
	   [h: damageDieModifier = 0]
	   [h: damageType = &quot;Stun&quot;]
	   [h: hit = &quot;false&quot;]
	   };
	default: {
	   [h: assert(0, &quot;switch(success&quot;+i+&quot;)) weaponLookup&quot;, 1)]
	   }
	]   

	[h, if(damageDieSign == &quot;+&quot;): damageRoll = roll(damageDieQuantity,damageDieSides) + damageDieModifier]
	[h, if(damageDieSign == &quot;-&quot;): damageRoll = roll(damageDieQuantity,damageDieSides) - damageDieModifier]


	[h: stunHp = getProperty(&quot;Stun&quot;,selected)]
	[h: woundHp = getProperty(&quot;Wound&quot;,selected)]
	[h: mortalHp = getProperty(&quot;Mortal&quot;,selected)]
	[h: stunDamage = 0]
	[h: woundDamage = 0]
	[h: mortalDamage = 0]

	[h, switch(damageType):
	case &quot;Stun&quot;: stunDamage = damageRoll;
	case &quot;Wound&quot;: woundDamage = damageRoll;
	case &quot;Mortal&quot;: mortalDamage = damageRoll;
	default: assert (0, &quot;switch(damageType) armor reduction&quot;, 1)]

	[h: secondaryStunDamage = 0]
	[h: secondaryWoundDamage = 0]
	[h, if(woundDamage &gt;= 2): secondaryStunDamage = floor(woundDamage/2)]
	[h, if(mortalDamage &gt;= 2): secondaryStunDamage = secondaryStunDamage + floor(mortalDamage/2)]
	[h, if(mortalDamage &gt;= 2): secondaryWoundDamage = floor(mortalDamage/2)]

	[h: varsFromStrProp(json.toStrProp(selectedChestJSON))]
	[h: armorName = name]
	
	[h, switch(type), code:
	case &quot;L&quot;:{
		[h: armorDieSides = LiSides]
		[h: armorDieQuantity = LiQuantity]
		[h: armorDieModifier = LiModifier]
		[h: armorModifierSign = LiSign]
		};
	case &quot;H&quot;:{
		[h: armorDieSides = HiSides]
		[h: armorDieQuantity = HiQuantity]
		[h: armorDieModifier = HiModifier]
		[h: armorModifierSign = HiSign]
		};
	case &quot;E&quot;:{
		[h: armorDieSides = EnSides]
		[h: armorDieQuantity = EnQuantity]
		[h: armorDieModifier = EnModifier]
		[h: armorModifierSign = EnSides]
		};
	default:{[h: assert (0, &quot;switch(type) armor reduction&quot;, 1)]}]
	
	[h, if(armorModifierSign == &quot;+&quot;): armorRoll = roll(armorDieQuantity,armorDieSides) + armorDieModifier]
	[h, if(armorModifierSign == &quot;-&quot;): armorRoll = roll(armorDieQuantity,armorDieSides) - armorDieModifier]

	[h: &quot;&lt;!-- Round armorRoll up to 0 if lower than 0 --&gt;&quot;]

	[h, if(armorRoll &lt; 0): armorRoll = 0]

	[h: &quot;&lt;!-- Remove armor roll from damage roll --&gt;&quot;]   

	[h: damageResult = damageRoll - armorRoll]   

	[h: &quot;&lt;!-- Round damageRoll up to 0 if lower than 0  --&gt;&quot;]     

	[h, if(damageResult &lt; 0): damageResult = 0]

	[h: &quot;&lt;!-- Update damages to secondary plus armor roll reduced damage roll --&gt;&quot;]   

	[h, switch(damageType):
	case &quot;Stun&quot;: stunDamage = damageResult;
	case &quot;Wound&quot;: woundDamage = damageResult;
	case &quot;Mortal&quot;: mortalDamage = damageResult;
	default: assert (0, &quot;switch(damageType) armor reduction&quot;, 1)]

	[h: &quot;&lt;!--Apply secondary damage--&gt;&quot;]


	[h: &quot;&lt;!-- Set into array and run DamageCalc macro --&gt;&quot;]
	
	[h: damageOutput = json.set(&quot;&quot;,&quot;stunDamage&quot;,stunDamage,&quot;woundDamage&quot;,woundDamage,&quot;mortalDamage&quot;,mortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp)]

	[h, macro (&quot;DamageCalc@Lib:bw&quot;) : damageOutput]
	
	[h: &quot;&lt;!-- Returned absoloute damages --&gt;&quot;]   
	
	[h: returnStrProp = json.toStrProp(macro.return)]
	[h: varsFromStrProp(returnStrProp)]
	
	[h: &quot;&lt;!-- Apply secondary damages --&gt;&quot;]
	
	[h: stunHp = max(0, stunHp - secondaryStunDamage)]
	[h: woundHp = max(0, woundHp - secondaryWoundDamage)]
	
	[h: &quot;&lt;!-- Post damage information to chat--&gt;&quot;]
	
	[h, if (secondaryStunDamage !=0): outputText = outputText + &quot;The wound also causes &lt;b&gt;&quot; + secondaryStunDamage + &quot;&lt;/b&gt; secondary stun&quot;]
	[h, if (secondaryWoundDamage !=0): outputText = outputText + &quot; and &lt;b&gt;&quot; + secondaryWoundDamage + &quot;&lt;/b&gt; secondary wound&quot;]
	
	[h, if (i &lt; 2): outputText = outputText + &quot;&lt;br&gt;&quot;]
	
	[h: set(&quot;shot&quot;+i+&quot;Text&quot;, outputText)]
	
	[h: tempVar = json.set(&quot;&quot;,&quot;shot&quot;,i,&quot;hit&quot;,eval(&quot;shotHit&quot; + i),&quot;damageResult&quot;,damageResult,&quot;selected&quot;,selected,&quot;initiative&quot;,initiative,&quot;stunDamage&quot;,stunDamage,&quot;woundDamage&quot;,woundDamage,&quot;mortalDamage&quot;,mortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp,&quot;stunReduced&quot;,stunReduced,&quot;woundReduced&quot;,woundReduced,&quot;mortalReduced&quot;,mortalReduced,&quot;damageRoll&quot;,damageRoll,&quot;damageDieQuantity&quot;,damageDieQuantity,&quot;damageDieSides&quot;,damageDieSides,&quot;damageDieSign&quot;,damageDieSign,&quot;damageDieModifier&quot;,damageDieModifier,&quot;damageType&quot;,damageType,&quot;armorName&quot;,armorName,&quot;armorRoll&quot;,armorRoll,&quot;armorDieQuantity&quot;,armorDieQuantity,&quot;armorDieSides&quot;,armorDieSides,&quot;armorModifierSign&quot;,armorModifierSign,&quot;armorDieModifier&quot;,armorDieModifier,&quot;secondaryStunDamage&quot;,secondaryStunDamage,&quot;secondaryWoundDamage&quot;,secondaryWoundDamage)]

	
	[h: set(&quot;shotObject&quot; + i,tempVar)]
</command>
                      <label>automaticFire</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>61</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>61</index>
                      <colorKey>red</colorKey>
                      <hotKey>None</hotKey>
                      <command>&lt;!-- get move number of moved token --&gt;
[h: usedMove = getMoveCount()]

&lt;!-- abort when total move is 0 --&gt;
[h: abort(usedMove)]
&lt;!-- abort when token is a lib (only check the first token if multiple are selected) --&gt;
[h: abort(!startsWith(lower(getName(listGet(getSelected(),0))), &quot;lib:&quot;))]
&lt;!-- abort when GM --&gt;
[h: abort(isGM())]
&lt;!-- abort when initiative panel is empty --&gt;
[h: abort(!json.isEmpty(json.get(getInitiativeList(),&quot;tokens&quot;)))]

[h, if (tokens.moveCount !=1), code: {
    [h: tokens.denyMove=1]
    [h: abort(0)]};{}]

[h: &quot;&lt;!-- get movement --&gt;&quot;]

[h: selected = getSelected()]

[h: movement = getProperty(&quot;Movement&quot;,selected)]

[h: varsFromStrProp(movement)]

[h: usedMove = getMoveCount()]

[h, if(declared == 0), code: {
	[h:tokens.denyMove=1]
	[h, macro(&quot;DeclareMovement@Lib:bw&quot;): selected]	
	};{}]

[h: allowedMove = 0]

[h, token(selected): canNotMove = bitwiseor(getState(&quot;Dead&quot;),getState(&quot;Unconcious (Wound)&quot;),getState(&quot;Unconcious (Stun)&quot;))]
[h, if(canNotMove), code: 
	{
	[h: tokens.denyMove = 1]
	[h: broadcast(&quot;You are incapacitated!&quot;,getPlayerName())]
	};{
	}
]



[h, if((usedMove &lt;= walk)&amp;&amp;(! canNotMove)), code: {
	[h: movement = setStrProp(movement, &quot;walk&quot;, max(0,walk - usedMove))]
	[h: movement = setStrProp(movement, &quot;run&quot;, max(0,run - usedMove))]
	[h: movement = setStrProp(movement, &quot;sprint&quot;, max(0,sprint - usedMove))]
	[h: setProperty(&quot;Movement&quot;, movement, selected)]
	};{}]

	
[h, if((usedMove &gt; walk)&amp;&amp;(usedMove &lt;= run)&amp;&amp;(declared == &quot;Run&quot;)&amp;&amp;(! canNotMove)), code:
	{
	[h: movement = setStrProp(movement, &quot;walk&quot;, max(0,walk - usedMove))]
	[h: movement = setStrProp(movement, &quot;run&quot;, max(0,run - usedMove))]
	[h: movement = setStrProp(movement, &quot;sprint&quot;, max(0,sprint - usedMove))]
	[h: setProperty(&quot;Movement&quot;, movement, selected)]
	};{}]

	
[h, if((usedMove &gt; walk)&amp;&amp;(usedMove &lt;= run)&amp;&amp;(declared != &quot;Run&quot;)&amp;&amp;(! canNotMove)), code:
	{
	[h: confpick = 0]
	[h: screen = input(&quot;confpick|No,Yes|Moving this far requires you to Run (+2 step penalty to fire), continue?|radio|select = 1&quot;)]
	[h, if((confpick == 1) &amp;&amp; (screen == 1)), code: {
		[h: movement = setStrProp(movement, &quot;walk&quot;, max(0,walk - usedMove))]
		[h: movement = setStrProp(movement, &quot;run&quot;, max(0,run - usedMove))]
		[h: movement = setStrProp(movement, &quot;sprint&quot;, max(0,sprint - usedMove))]
		[h: movement = setStrProp(movement, &quot;declared&quot;, &quot;Run&quot;)]
		[h: setProperty(&quot;Movement&quot;, movement, selected)]
		};{
		[h: tokens.denyMove = 1]
		}]
	};{}]
	
[h, if((usedMove &gt; run)&amp;&amp;(usedMove &lt;= sprint)&amp;&amp;(declared == &quot;Sprint&quot;)&amp;&amp;(! canNotMove)), code:
	{
	[h: movement = setStrProp(movement, &quot;walk&quot;, max(0,walk - usedMove))]
	[h: movement = setStrProp(movement, &quot;run&quot;, max(0,run - usedMove))]
	[h: movement = setStrProp(movement, &quot;sprint&quot;, max(0,sprint - usedMove))]
	[h: setProperty(&quot;Movement&quot;, movement, selected)]
	};{}]


[h, if((usedMove &gt; run)&amp;&amp;(usedMove &lt;= sprint)&amp;&amp;(declared != &quot;Sprint&quot;)&amp;&amp;(! canNotMove)), code:
	{
	[h: confpick = 0]
	[h: screen = input(&quot;confpick|No,Yes|Moving this far requires you to Sprint (+3 step penalty to fire), continue?|radio|select = 1&quot;)]
	[h, if((confpick == 1) &amp;&amp; (screen == 1)), code: {
		[h: movement = setStrProp(movement, &quot;walk&quot;, max(0,walk - usedMove))]
		[h: movement = setStrProp(movement, &quot;run&quot;, max(0,run - usedMove))]
		[h: movement = setStrProp(movement, &quot;sprint&quot;, max(0,sprint - usedMove))]
		[h: movement = setStrProp(movement, &quot;declared&quot;, &quot;Sprint&quot;)]
		[h: setProperty(&quot;Movement&quot;, movement, selected)]
		};{
		[h: tokens.denyMove = 1]
		}]
	};{}]

[r, if(usedMove &gt; sprint), code: {
	[h: tokens.denyMove = 1]
	[h: broadcast(&quot;You cannot sprint this far!&quot;,getPlayerName())]
	};{}]

[h: declared = getStrProp(getProperty(&quot;Movement&quot;,selected), &quot;Declared&quot;)][h, if(declared == &quot;Walk&quot;): move = &quot;Walk: &quot; + getStrProp(getProperty(&quot;Movement&quot;,selected), &quot;Walk&quot;)][h, if(declared == &quot;Run&quot;): move = &quot;Run: &quot; + getStrProp(getProperty(&quot;Movement&quot;,selected), &quot;Run&quot;)][h, if(declared == &quot;Sprint&quot;): move = &quot;Sprint: &quot; + getStrProp(getProperty(&quot;Movement&quot;,selected), &quot;Sprint&quot;)]
[h: setProperty(&quot;Move&quot;,move,selected)]</command>
                      <label>onTokenMove</label>
                      <group>zSettings</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>62</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>62</index>
                      <colorKey>purple</colorKey>
                      <hotKey>None</hotKey>
                      <command>[macro(&quot;openSkillFrame@Lib:bw&quot;): output]
	</command>
                      <label>processCharSheetForm</label>
                      <group>Forms</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>63</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>63</index>
                      <colorKey>purple</colorKey>
                      <hotKey>None</hotKey>
                      <command>	[h: tempVar = json.toStrProp(macro.args)]
	[h: varsFromStrProp(tempVar)]
	[h: emptyCharSheet = isPropertyEmpty(&quot;charSheetStrengthTable&quot;,playerTokenID)]
	[h: refreshCharacterSheet = getProperty(&quot;Refresh Character Sheet&quot;,playerTokenID)]
	[h, if(refreshCharacterSheet == &quot;&quot;): refreshCharacterSheet = 1]
	

	
	[h, if((emptycharSheet)||(refreshCharacterSheet)), code :{
		[h: defineSkillTable()]
		[closeFrame(&quot;Loading Screen&quot;)]
		};{
		}
	]
	
	[h: strengthTable = getProperty(&quot;charSheetStrengthTable&quot;,playerTokenID)]
	[h: dexterityTable = getProperty(&quot;charSheetDexterityTable&quot;,playerTokenID)]
	[h: constitutionTable = getProperty(&quot;charSheetConstitutionTable&quot;,playerTokenID)]
	[h: intelligenceTable = getProperty(&quot;charSheetIntelligenceTable&quot;,playerTokenID)]
	[h: willpowerTable = getProperty(&quot;charSheetWillpowerTable&quot;,playerTokenID)]
	[h: personalityTable = getProperty(&quot;charSheetPersonalityTable&quot;,playerTokenID)]
	
	[h: strScore = getProperty(&quot;Strength&quot;,playerTokenID)]
	[h: dexScore = getProperty(&quot;Dexterity&quot;,playerTokenID)]
	[h: conScore = getProperty(&quot;Constitution&quot;,playerTokenID)]
	[h: intScore = getProperty(&quot;Intelligence&quot;,playerTokenID)]
	[h: wilScore = getProperty(&quot;Willpower&quot;,playerTokenID)]
	[h: perScore = getProperty(&quot;Personality&quot;,playerTokenID)]
	
	[h: strMod = getMod(strScore)][h, if(strMod &gt;= 0): strSign = &quot;+&quot;; strSign = &quot;&quot;]
	[h: dexMod = getMod(dexScore)][h, if(dexMod &gt;= 0): dexSign = &quot;+&quot;; dexSign = &quot;&quot;]
	[h: conMod = getMod(conScore)][h, if(conMod &gt;= 0): conSign = &quot;+&quot;; conSign = &quot;&quot;]
	[h: intMod = getMod(intScore)][h, if(intMod &gt;= 0): intSign = &quot;+&quot;; intSign = &quot;&quot;]
	[h: wilMod = getMod(wilScore)][h, if(wilMod &gt;= 0): wilSign = &quot;+&quot;; wilSign = &quot;&quot;]
	[h: perMod = getMod(perScore)][h, if(perMod &gt;= 0): perSign = &quot;+&quot;; perSign = &quot;&quot;]
	
	[h: actionCheck = getProperty(&quot;Action Check&quot;, playerTokenID)]
	[h: actionMarginal = json.get(actionCheck,&quot;Marginal&quot;)]
	[h: actionOrdinary = json.get(actionCheck,&quot;Ordinary&quot;)]
	[h: actionGood = json.get(actionCheck,&quot;Good&quot;)]
	[h: actionAmazing = json.get(actionCheck,&quot;Amazing&quot;)]
	
	[h: race = getProperty(&quot;Race&quot;, playerTokenID)]
	[h, if(race == &quot;T&apos;sa&quot;): actionDie = &quot;-d4&quot;; actionDie = &quot;+d0&quot;]
	
	[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;, playerTokenID)]
	[h: actionsPerRound = json.get(naturalStatistics,&quot;Actions Per Round&quot;)]
	[h: walk = json.get(naturalStatistics,&quot;Walk&quot;)]
	[h: run = json.get(naturalStatistics,&quot;Run&quot;)]
	[h: sprint = json.get(naturalStatistics,&quot;Sprint&quot;)]
	[h: easySwim = json.get(naturalStatistics,&quot;Easy Swim&quot;)]
	[h: swim = json.get(naturalStatistics,&quot;Swim&quot;)]
	[h: glide = json.get(naturalStatistics,&quot;Glide&quot;)]
	[h: fly = json.get(naturalStatistics,&quot;Fly&quot;)]
	[h: naturalStun = json.get(naturalStatistics,&quot;Stun&quot;)]
	[h: naturalWound = json.get(naturalStatistics,&quot;Wound&quot;)]
	[h: naturalMortal = json.get(naturalStatistics,&quot;Mortal&quot;)]
	[h: naturalFatigue = json.get(naturalStatistics,&quot;Fatigue&quot;)]
	[h: stun = getProperty(&quot;Stun&quot;, playerTokenID)]
	[h: wound = getProperty(&quot;Wound&quot;, playerTokenID)]
	[h: mortal = getProperty(&quot;Mortal&quot;, playerTokenID)]
	[h: fatigue = getProperty(&quot;Fatigue&quot;, playerTokenID)]

	[h: &apos;&lt;!-- Armor String --&gt;&apos;]
	
	[h: tokenEquipment = getProperty(&quot;Equipment&quot;,playerTokenID)]
	[h: mainHandName = json.get(tokenEquipment,&quot;Main Hand&quot;)]
	[h: offHandName = json.get(tokenEquipment,&quot;Off Hand&quot;)]
	[h: headName = json.get(tokenEquipment,&quot;Head&quot;)]
	[h: chestName = json.get(tokenEquipment,&quot;Chest&quot;)]
	[h: accessoryName = json.get(tokenEquipment,&quot;Accessory&quot;)]
	[h: weaponDatabase = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]
	[h: armorDatabase = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]
	[h: mainHandType = json.get(tokenEquipment,&quot;Main Hand Type&quot;)]
	[h: offHandType = json.get(tokenEquipment,&quot;Off Hand Type&quot;)]

	[h: mainHandLiModifier = 0][h: mainHandHiModifier = 0][h: mainHandEnModifier = 0]
	[h, if(mainHandType == &quot;Armor&quot;), code :{
		[h: mainHandStats = json.get(armorDatabase,mainHandName)]
		[h: mainHandLiModifier = json.get(mainHandStats,&quot;LiModifier&quot;)]
		[h: mainHandHiModifier = json.get(mainHandStats,&quot;HiModifier&quot;)]
		[h: mainHandEnModifier = json.get(mainHandStats,&quot;EnModifier&quot;)]
		};{
		}
	]
	
	[h: offHandLiModifier = 0][h: offHandHiModifier = 0][h: offHandEnModifier = 0]
	[h, if(offHandType == &quot;Armor&quot;), code :{
		[h: offHandStats = json.get(armorDatabase,offHandName)]
		[h: offHandLiModifier = json.get(offHandStats,&quot;LiModifier&quot;)]
		[h: offHandHiModifier = json.get(offHandStats,&quot;HiModifier&quot;)]
		[h: offHandEnModifier = json.get(offHandStats,&quot;EnModifier&quot;)]
		};{
		}
	]
	
	

	[h: headStats = json.get(armorDatabase,headName)]
	[h, if(json.isEmpty(headStats)): headStats = json.set(&quot;&quot;,&quot;equipSlot&quot;,&quot;Helmet&quot;,&quot;LiModifier&quot;,0,&quot;HiModifier&quot;,0,&quot;EnModifier&quot;,0)]
	
	[h: chestStats = json.get(armorDatabase,chestName)]
	[h, if(json.isEmpty(chestStats)): chestStats = json.set(&quot;&quot;,&quot;equipSlot&quot;,&quot;None&quot;,&quot;LiSides&quot;,0,&quot;LiSign&quot;,&quot;+&quot;,&quot;LiQuantity&quot;,0,&quot;LiModifier&quot;,0,&quot;HiSides&quot;,0,&quot;HiSign&quot;,&quot;+&quot;,&quot;HiQuantity&quot;,0,&quot;HiModifier&quot;,0,&quot;EnSides&quot;,0,&quot;EnSign&quot;,&quot;+&quot;,&quot;EnQuantity&quot;,0,&quot;EnModifier&quot;,0)]
	
	[h: accessoryStats = json.get(armorDatabase,accessoryName)]
	[h, if(json.isEmpty(accessoryStats)): accessoryStats = json.set(&quot;&quot;,&quot;equipSlot&quot;,&quot;Accessory&quot;,&quot;LiModifier&quot;,0,&quot;HiModifier&quot;,0,&quot;EnModifier&quot;,0)]
	
	[h, if(json.get(chestStats,&quot;equipSlot&quot;) == &quot;None&quot;), code :{
	
		[h: LiModifier = json.get(headStats,&quot;LiModifier&quot;) + json.get(accessoryStats,&quot;LiModifier&quot;) + mainHandLiModifier + offHandLiModifier]
		
		[h: HiModifier = json.get(headStats,&quot;HiModifier&quot;) + json.get(accessoryStats,&quot;HiModifier&quot;) + mainHandHiModifier + offHandHiModifier]
		
		[h: EnModifier = json.get(headStats,&quot;EnModifier&quot;) + json.get(accessoryStats,&quot;EnModifier&quot;) + mainHandEnModifier + offHandEnModifier]
		
		};{
	
		[h: LiModifier = json.get(headStats,&quot;LiModifier&quot;) + json.get(accessoryStats,&quot;LiModifier&quot;) + mainHandLiModifier + offHandLiModifier]
		[h, if(json.get(chestStats,&quot;LiSign&quot;) == &quot;-&quot;): LiModifier = LiModifier - json.get(chestStats, &quot;LiModifier&quot;); LiModifier = LiModifier + json.get(chestStats, &quot;LiModifier&quot;)]
		
		[h: HiModifier = json.get(headStats,&quot;HiModifier&quot;) + json.get(accessoryStats,&quot;HiModifier&quot;) + mainHandHiModifier + offHandHiModifier]
		[h, if(json.get(chestStats,&quot;HiSign&quot;) == &quot;-&quot;): hiModifier = hiModifier - json.get(chestStats, &quot;HiModifier&quot;); hiModifier = hiModifier + json.get(chestStats, &quot;HiModifier&quot;)]
		
		[h: EnModifier = json.get(headStats,&quot;EnModifier&quot;) + json.get(accessoryStats,&quot;EnModifier&quot;) + mainHandEnModifier + offHandEnModifier]
		[h, if(json.get(chestStats,&quot;EnSign&quot;) == &quot;-&quot;): enModifier = enModifier - json.get(chestStats, &quot;EnModifier&quot;); enModifier = enModifier + json.get(chestStats, &quot;EnModifier&quot;)]
	
		}
	]

	
	[h: LiSign = &quot;&quot;][h: HiSign = &quot;&quot;][h: EnSign = &quot;&quot;]		
	[h, if(LiModifier &gt;= 0): LiSign = &quot;+&quot;][h, if(HiModifier &gt;= 0): HiSign = &quot;+&quot;][h, if(EnModifier &gt;= 0): EnSign = &quot;+&quot;]
	
	[h: LiString = json.get(chestStats, &quot;LiQuantity&quot;) + &quot;d&quot; + json.get(chestStats, &quot;LiSides&quot;) + LiSign + LiModifier]
	[h: HiString = json.get(chestStats, &quot;HiQuantity&quot;) + &quot;d&quot; + json.get(chestStats, &quot;HiSides&quot;) + HiSign + HiModifier]
	[h: EnString = json.get(chestStats, &quot;EnQuantity&quot;) + &quot;d&quot; + json.get(chestStats, &quot;EnSides&quot;) + EnSign + EnModifier]
	
	[h: &apos;&lt;!-- Weapon String --&gt;&apos;]
	
	[h, if (mainHandType == &quot;Weapon&quot;): mainHandStats = json.get(weaponDatabase,mainHandName)]
	[h, if (mainHandType == &quot;Armor&quot;): mainHandStats = json.get(armorDatabase,mainHandName)]
	[h, if (offHandType == &quot;Weapon&quot;): offHandStats = json.get(weaponDatabase,offHandName)]
	[h, if (offHandType == &quot;Armor&quot;): offHandStats = json.get(armorDatabase,offHandName)]
	
	[h: mainHandEquipSlot = &quot;&quot;]
	[h: offHandEquipSlot = &quot;&quot;]
	
	[h, if((mainHandType == &quot;Weapon&quot;)||(mainHandType == &quot;Armor&quot;)), code :{
		[h: mainHandEquipSlot = json.get(mainHandStats,&quot;equipSlot&quot;)]
		};{
		}
	]
	
	[h, if((offHandType == &quot;Weapon&quot;)||(offHandType == &quot;Armor&quot;)), code :{
		[h: offHandEquipSlot = json.get(offHandStats,&quot;equipSlot&quot;)]
		};{
		}
	]
	
	[h: unarmedStatistics = getProperty(&quot;Unarmed Statistics&quot;,playerTokenID)]
	[h: ordinaryString = json.get(unarmedStatistics,&quot;ordinaryString&quot;)]
	[h: goodString = json.get(unarmedStatistics,&quot;goodString&quot;)]
	[h: amazingString = json.get(unarmedStatistics,&quot;amazingString&quot;)]
	[h: ordinarySeverity = json.get(unarmedStatistics,&quot;ordinarySeverity&quot;)]
	[h: goodSeverity = json.get(unarmedStatistics,&quot;goodSeverity&quot;)]
	[h: amazingSeverity = json.get(unarmedStatistics,&quot;amazingSeverity&quot;)]
	[h: weaponTable1 = strformat(&quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; Unarmed&lt;/td&gt;&lt;td&gt;&lt;b&gt;Acc:&lt;/b&gt; 0&lt;/td&gt;&lt;td&gt;&lt;b&gt;Damage:&lt;/b&gt; %{ordinaryString}%{ordinarySeverity}/%{goodString}%{goodSeverity}/%{amazingString}%{amazingSeverity}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type:&lt;/b&gt; Li/O&lt;/td&gt;&lt;/tr&gt;&quot;)]
	[h: weaponTable2 = strformat(&quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; Unarmed&lt;/td&gt;&lt;td&gt;&lt;b&gt;Acc:&lt;/b&gt; 0&lt;/td&gt;&lt;td&gt;&lt;b&gt;Damage:&lt;/b&gt; %{ordinaryString}%{ordinarySeverity}/%{goodString}%{goodSeverity}/%{amazingString}%{amazingSeverity}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type:&lt;/b&gt; Li/O&lt;/td&gt;&lt;/tr&gt;&quot;)]
	
	[h, if(mainHandEquipSlot == &quot;Two Hands&quot;), code :{
		[h: offHandEquipSlot = &quot;Two Hands&quot;)]
		[h: weapon1Acc = json.get(mainHandStats,&quot;accuracy&quot;)]
		[h: weapon1Damage = json.get(mainHandStats,&quot;ordinaryString&quot;) + &quot;/&quot; + json.get(mainHandStats,&quot;goodString&quot;) + &quot;/&quot; + json.get(mainHandStats,&quot;amazingString&quot;)]
		
		[h: type = json.get(mainHandStats, &quot;type&quot;)]
		[h, switch (type), code :
			case &quot;L&quot;: {[h: type = &quot;Li&quot;]};
			case &quot;H&quot;: {[h: type = &quot;Hi&quot;]};
			case &quot;E&quot;: {[h: type = &quot;En&quot;]};
			default: {[h: type = &quot;None&quot;]}
		]
		
		[h: firepower = json.get(mainHandStats, &quot;firepower&quot;)]

		[h: weapon1TypeString = type + &quot;/&quot; + firepower]
		
		[h: weaponTable1 = strformat(&quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; %{mainHandName}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Acc:&lt;/b&gt; %{weapon1Acc}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Damage:&lt;/b&gt; %{weapon1Damage}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type:&lt;/b&gt; %{weapon1TypeString}&lt;/td&gt;&lt;/tr&gt;&quot;)]
		[h: weaponTable2 = &quot;&quot;]
		
	};{}]
	
	[h, if((mainHandEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(mainHandType == &quot;Weapon&quot;)), code :{
		[h: weapon1Acc = json.get(mainHandStats,&quot;accuracy&quot;)]
		[h: weapon1Damage = json.get(mainHandStats,&quot;ordinaryString&quot;) + &quot;/&quot; + json.get(mainHandStats,&quot;goodString&quot;) + &quot;/&quot; + json.get(mainHandStats,&quot;amazingString&quot;)]
		[h: weapon1ShortRange = json.get(mainHandStats,&quot;shortRange&quot;)]
		[h: weapon1MediumRange = json.get(mainHandStats,&quot;mediumRange&quot;)]
		[h: weapon1LongRange = json.get(mainHandStats,&quot;longRange&quot;)]
		
		[h: type = json.get(mainHandStats, &quot;type&quot;)]
		[h, switch (type), code :
			case &quot;L&quot;: {[h: type = &quot;Li&quot;]};
			case &quot;H&quot;: {[h: type = &quot;Hi&quot;]};
			case &quot;E&quot;: {[h: type = &quot;En&quot;]};
			default: {[h: type = &quot;None&quot;]}
		]
		
		[h: firepower = json.get(mainHandStats, &quot;firepower&quot;)]

		
		[h: weapon1TypeString = type + &quot;/&quot; + firepower]
		
		[h: weaponTable1 = strformat(&quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; %{mainHandName}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Acc:&lt;/b&gt; %{weapon1Acc}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Damage:&lt;/b&gt; %{weapon1Damage}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type:&lt;/b&gt; %{weapon1TypeString}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;&amp;nbsp;&amp;nbsp;Range:&lt;/b&gt; %{weapon1ShortRange}/%{weapon1MediumRange}/%{weapon1LongRange}&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot;)]
		
	};{}]

	[h, if((offHandEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(offHandType == &quot;Weapon&quot;)) , code :{
		[h: weapon2Acc = json.get(offHandStats,&quot;accuracy&quot;)]
		[h: weapon2Damage = json.get(offHandStats,&quot;ordinaryString&quot;) + &quot;/&quot; + json.get(offHandStats,&quot;goodString&quot;) + &quot;/&quot; + json.get(offHandStats,&quot;amazingString&quot;)]
		[h: weapon2ShortRange = json.get(offHandStats,&quot;shortRange&quot;)]
		[h: weapon2MediumRange = json.get(offHandStats,&quot;mediumRange&quot;)]
		[h: weapon2LongRange = json.get(offHandStats,&quot;longRange&quot;)]
		
		[h: type = json.get(offHandStats, &quot;type&quot;)]
		[h, switch (type), code :
			case &quot;L&quot;: {[h: type = &quot;Li&quot;]};
			case &quot;H&quot;: {[h: type = &quot;Hi&quot;]};
			case &quot;E&quot;: {[h: type = &quot;En&quot;]};
			default: {[h: type = &quot;None&quot;]}
		]
		
		[h: firepower = json.get(offHandStats, &quot;firepower&quot;)]
		
		[h: weapon2TypeString = type + &quot;/&quot; + firepower]
		
		[h: weaponTable2 = strformat(&quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; %{offHandName}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Acc:&lt;/b&gt; %{weapon2Acc}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Damage:&lt;/b&gt; %{weapon2Damage}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Type:&lt;/b&gt; %{weapon2TypeString}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;&amp;nbsp;&amp;nbsp;Range:&lt;/b&gt; %{weapon2ShortRange}/%{weapon2MediumRange}/%{weapon2LongRange}&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot;)]
		
	};{}]
	
	[h, if((mainHandEquipSlot == &quot;Shield&quot;)&amp;&amp;(mainHandType == &quot;Armor&quot;)) , code :{
		[h: weapon1Damage = json.get(mainHandStats,&quot;LiModifier&quot;) + &quot;/&quot; + json.get(mainHandStats,&quot;HiModifier&quot;) + &quot;/&quot; + json.get(mainHandStats,&quot;EnModifier&quot;)]

		[h: actionPenalty1 = json.get(mainHandStats,&quot;actionPenalty&quot;)]
		[h: toughness1 = json.get(mainHandStats,&quot;toughness&quot;)]

		[h: weaponTable1 = strformat(&quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; %{mainHandName}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Penalty:&lt;/b&gt; %{actionPenalty1}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Armour:&lt;/b&gt; %{weapon1Damage}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Toughness:&lt;/b&gt; %{toughness1}&lt;/td&gt;&lt;/tr&gt;&quot;)]
		
	};{}]
	
	[h, if((offHandEquipSlot == &quot;Shield&quot;)&amp;&amp;(offHandType == &quot;Armor&quot;)) , code :{
		[h: weapon2Damage = json.get(offHandStats,&quot;LiModifier&quot;) + &quot;/&quot; + json.get(offHandStats,&quot;HiModifier&quot;) + &quot;/&quot; + json.get(offHandStats,&quot;EnModifier&quot;)]
		
		[h: actionPenalty2 = json.get(offHandStats,&quot;actionPenalty&quot;)]
		[h: toughness2 = json.get(offHandStats,&quot;toughness&quot;)]
		
		[h: weaponTable2 = strformat(&quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; %{offHandName}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Penalty:&lt;/b&gt; %{actionPenalty2}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Armour:&lt;/b&gt; %{weapon2Damage}&lt;/td&gt;&lt;td&gt;&lt;b&gt;Toughness:&lt;/b&gt; %{toughness2}&lt;/td&gt;&lt;/tr&gt;&quot;)]
		
	};{}]
	
	[h: situationBonus = getProperty(&quot;Situation Bonus&quot;,playerTokenID)]
	
	[h: processForm = macroLinkText(&quot;processCharSheetForm@Lib:bw&quot;, &quot;none&quot;)]

	&lt;body bgcolor=#FFFFFF&gt;
	&lt;form action=&quot;[r: processForm]&quot; method=&quot;json&quot;&gt;

	&lt;table width=600 align=left&gt;
		&lt;tr&gt;
			&lt;td colspan=2 align=left&gt;
				&lt;table bgcolor=black cellpadding=1&gt;&lt;tr&gt;&lt;td&gt;&lt;table cellpadding=3 width=621 bgcolor=CCCCCC&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Name:&lt;/b&gt; [r: getName(playerTokenID)]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Race:&lt;/b&gt; [r: getProperty(&quot;Race&quot;,playerTokenId)]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Profession:&lt;/b&gt; [r: if((length(situationBonus) &gt; 1), getProperty(&quot;Profession&quot;,playerTokenID) + &quot; (&quot; + situationBonus + &quot;)&quot;,getProperty(&quot;Profession&quot;,playerTokenID))]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Level:&lt;/b&gt; [r: getProperty(&quot;Level&quot;,playerTokenID)]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Achievement Points:&lt;/b&gt; [r: getProperty(&quot;Achievement Points&quot;,playerTokenID)]/[r: getProperty(&quot;Level&quot;,playerTokenID) + 5]&lt;/td&gt;
				&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td rowspan = 2 align=left&gt;
				&lt;table bgcolor=black cellpadding=1&gt;&lt;tr&gt;&lt;td&gt;&lt;table cellpadding=3 width=200 bgcolor=CCCCCC&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;&lt;font color=green&gt;ABILITY&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;&lt;font color=green&gt;Score&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;&lt;font color=green&gt;Untrained&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
						&lt;td align=center&gt;&lt;b&gt;&lt;font color=green&gt;Res.&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Strength&lt;b&gt;&lt;/td&gt;
						&lt;td align=center&gt;[r: strScore]&lt;/td&gt;
						&lt;td align=center&gt;[r: floor(strScore/2)]&lt;/td&gt;
						&lt;td align=center&gt;[r: strSign][r: strMod]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Dexterity&lt;b&gt;&lt;/td&gt;
						&lt;td align=center&gt;[r: dexScore]&lt;/td&gt;
						&lt;td align=center&gt;[r: floor(dexScore/2)]&lt;/td&gt;
						&lt;td align=center&gt;[r: dexSign][r: dexMod]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Constitution&lt;b&gt;&lt;/td&gt;
						&lt;td align=center&gt;[r: conScore]&lt;/td&gt;
						&lt;td align=center&gt;[r: floor(conScore/2)]&lt;/td&gt;
						&lt;td align=center&gt;[r: conSign][r: conMod]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Intelligence&lt;b&gt;&lt;/td&gt;
						&lt;td align=center&gt;[r: intScore]&lt;/td&gt;
						&lt;td align=center&gt;[r: floor(intScore/2)]&lt;/td&gt;
						&lt;td align=center&gt;[r: intSign][r: intMod]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Willpower&lt;b&gt;&lt;/td&gt;
						&lt;td align=center&gt;[r: wilScore]&lt;/td&gt;
						&lt;td align=center&gt;[r: floor(wilScore/2)]&lt;/td&gt;
						&lt;td align=center&gt;[r: wilSign][r: wilMod]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Personality&lt;b&gt;&lt;/td&gt;
						&lt;td align=center&gt;[r: perScore]&lt;/td&gt;
						&lt;td align=center&gt;[r: floor(perScore/2)]&lt;/td&gt;
						&lt;td align=center&gt;[r: perSign][r: perMod]&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
			&lt;/td&gt;
			&lt;td align=left&gt;
				&lt;table bgcolor=black cellpadding=1 align=left&gt;&lt;tr&gt;&lt;td align=left&gt;&lt;table width=407 cellpadding=2 cellspacing=0 bgcolor=CCCCCC align=left&gt;
					&lt;tr&gt;
						&lt;td colspan=4&gt;&lt;b&gt;&lt;font color=green&gt;ACTION CHECK SCORE&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Marginal&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Ordinary&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Good&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Amazing&lt;/b&gt;&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;[r: actionMarginal]&lt;/td&gt;
						&lt;td&gt;[r: actionOrdinary]&lt;/td&gt;
						&lt;td&gt;[r: actionGood]&lt;/td&gt;
						&lt;td&gt;[r: actionAmazing]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;&lt;font color=green&gt;MODIFIER DIE:&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;[r: actionDie]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;&lt;font color=green&gt;ACTIONS PER ROUND:&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;[r: actionsPerRound]&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td align=left&gt;
				&lt;table bgcolor=black cellpadding=1&gt;&lt;tr&gt;&lt;td&gt;&lt;table width=407 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
					&lt;tr&gt;
						&lt;td colspan=4&gt;&lt;b&gt;&lt;font color=green&gt;COMBAT MOVEMENT RATES&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Sprint:&lt;/b&gt; [r: sprint]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Run:&lt;/b&gt; [r: run]&lt;/td&gt;
						&lt;td colspan=2&gt;&lt;b&gt;Walk:&lt;/b&gt; [r: walk]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Easy Swim:&lt;/b&gt; [r: easySwim]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Swim:&lt;/b&gt; [r: swim]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Glide:&lt;/b&gt; [r: glide]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Fly:&lt;/b&gt; [r: fly]&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan = 2 align=left&gt;
				&lt;table bgcolor=black cellpadding=1&gt;&lt;tr&gt;&lt;td&gt;&lt;table width=621 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
					&lt;tr&gt;
						&lt;td colspan=8&gt;&lt;b&gt;&lt;font color=green&gt;DURABILITY&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Stun&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;[r: stun] / [r: naturalStun]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Wound&lt;/b&gt;&lt;/td&gt;	
						&lt;td&gt;[r: wound] / [r: naturalWound]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Mortal&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;[r: mortal] / [r: naturalMortal]&lt;/td&gt;
						&lt;td&gt;&lt;b&gt;Fatigue&lt;/b&gt;&lt;/td&gt;
						&lt;td&gt;[r: fatigue] / [r: naturalFatigue]&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
	&lt;table&gt;
		&lt;tr valign=top&gt;
			&lt;td align=left&gt;
				&lt;table bgcolor=black cellpadding=1 cellspacing=0&gt;&lt;tr&gt;&lt;td&gt;&lt;table width=100 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
					&lt;tr&gt;
						&lt;td colspan=3&gt;&lt;b&gt;&lt;font color=green&gt;ARMOUR&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Li:&lt;/b&gt; [r: LiString]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;Hi:&lt;/b&gt; [r: HiString]&lt;/td&gt;
					&lt;/tr&gt;&lt;tr&gt;
						&lt;td&gt;&lt;b&gt;En:&lt;/b&gt; [r: EnString]&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
			&lt;/td&gt;
			&lt;td align=left&gt;
				&lt;table bgcolor=black cellpadding=1&gt;&lt;tr&gt;&lt;td&gt;&lt;table width=513 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
					&lt;tr&gt;
						&lt;td colspan=3&gt;&lt;b&gt;&lt;font color=green&gt;Equipment&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
					&lt;/tr&gt;
					[r: weaponTable1]
					[r: weaponTable2]
				&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
	&lt;table cellspacing=0 cellpadding=4&gt;
		&lt;tr&gt;
			&lt;td align=left valign=top&gt;
				&lt;table cellspacing=0 cellpadding=0 width = 200&gt;
					&lt;tr&gt;
						&lt;td&gt;
							&lt;table cellspacing = 0 cellpadding = 0&gt;
								&lt;tr&gt;
									&lt;td&gt;
										&lt;table bgcolor=black cellpadding=1&gt;
											&lt;tr&gt;
												&lt;td&gt;
													&lt;table width=200 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
														&lt;tr&gt;
															&lt;td width=140&gt;&lt;b&gt;&lt;font color=green&gt;STR Skills&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Rank&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Score&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
														&lt;/tr&gt;
														[r: strengthTable]
													&lt;/table&gt;
												&lt;/td&gt;
											&lt;/tr&gt;
										&lt;/table&gt;
									&lt;/td&gt;
								&lt;/tr&gt;
								&lt;tr&gt;
									&lt;td&gt;&lt;font size=0&gt;&amp;nbsp;&lt;/font&gt;&lt;/td&gt;
								&lt;/tr&gt;
								&lt;tr&gt;
									&lt;td&gt;
										&lt;table bgcolor=black cellpadding=1&gt;
											&lt;tr&gt;
												&lt;td&gt;
													&lt;table width=200 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
														&lt;tr&gt;
															&lt;td width=140&gt;&lt;b&gt;&lt;font color=green&gt;DEX Skills&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Rank&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Score&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
														&lt;/tr&gt;
														[r: dexterityTable]
													&lt;/table&gt;
												&lt;/td&gt;
											&lt;/tr&gt;
										&lt;/table&gt;
									&lt;/td&gt;
								&lt;/tr&gt;
								&lt;tr&gt;
									&lt;td&gt;&lt;font size=0&gt;&amp;nbsp;&lt;/font&gt;&lt;/td&gt;
								&lt;/tr&gt;
								&lt;tr&gt;
									&lt;td&gt;
										&lt;table bgcolor=black cellpadding=1&gt;
											&lt;tr&gt;
												&lt;td&gt;
													&lt;table width=200 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
														&lt;tr&gt;
															&lt;td width=140&gt;&lt;b&gt;&lt;font color=green&gt;CON Skills&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Rank&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Score&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
														&lt;/tr&gt;
														[r: constitutionTable]
													&lt;/table&gt;
												&lt;/td&gt;
											&lt;/tr&gt;
										&lt;/table&gt;
									&lt;/td&gt;
								&lt;/tr&gt;
							&lt;/table&gt;
						&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
			&lt;/td&gt;
			&lt;td align=left valign=top&gt;
				&lt;table cellspacing=0 cellpadding=0 width = 200&gt;
					&lt;tr&gt;
						&lt;td&gt;
							&lt;table cellspacing = 0 cellpadding = 0&gt;
								&lt;tr&gt;
									&lt;td&gt;
										&lt;table bgcolor=black cellpadding=1&gt;
											&lt;tr&gt;
												&lt;td&gt;
													&lt;table width=200 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
														&lt;tr&gt;
															&lt;td width=140&gt;&lt;b&gt;&lt;font color=green&gt;INT Skills&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Rank&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Score&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
														&lt;/tr&gt;
														[r: intelligenceTable]
													&lt;/table&gt;
												&lt;/td&gt;
											&lt;/tr&gt;
										&lt;/table&gt;
									&lt;/td&gt;
								&lt;/tr&gt;
							&lt;/table&gt;
						&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
			&lt;/td&gt;
			&lt;td align=left valign=top&gt;
				&lt;table cellspacing=0 cellpadding=0 width = 200&gt;
					&lt;tr&gt;
						&lt;td valign=top&gt;
							&lt;table cellspacing = 0 cellpadding = 0&gt;
								&lt;tr&gt;
									&lt;td&gt;
										&lt;table bgcolor=black cellpadding=1&gt;
											&lt;tr&gt;
												&lt;td&gt;
													&lt;table width=200 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
														&lt;tr&gt;
															&lt;td width=140&gt;&lt;b&gt;&lt;font color=green&gt;WIL Skills&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Rank&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Score&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
														&lt;/tr&gt;
														[r: willpowerTable]
													&lt;/table&gt;
												&lt;/td&gt;
											&lt;/tr&gt;
										&lt;/table&gt;
									&lt;/td&gt;
								&lt;/tr&gt;
								&lt;tr&gt;
									&lt;td&gt;&lt;font size=0&gt;&amp;nbsp;&lt;/font&gt;&lt;/td&gt;
								&lt;/tr&gt;
								&lt;tr&gt;
									&lt;td&gt;
										&lt;table bgcolor=black cellpadding=1&gt;
											&lt;tr&gt;
												&lt;td&gt;
													&lt;table width=200 cellpadding=2 cellspacing=0 bgcolor=CCCCCC&gt;
														&lt;tr&gt;
															&lt;td width=140&gt;&lt;b&gt;&lt;font color=green&gt;PER Skills&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Rank&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
															&lt;td width=30 align=center&gt;&lt;b&gt;&lt;font color=green&gt;Score&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;
														&lt;/tr&gt;
														[r: personalityTable]
													&lt;/table&gt;
												&lt;/td&gt;
											&lt;/tr&gt;
										&lt;/table&gt;
									&lt;/td&gt;
								&lt;/tr&gt;
							&lt;/table&gt;
						&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
			
	&lt;/form&gt;

	&lt;/body&gt;</command>
                      <label>charSheetForm</label>
                      <group>Forms</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>true</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>64</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>64</index>
                      <colorKey>purple</colorKey>
                      <hotKey>None</hotKey>
                      <command>    [frame(&quot;Character Sheet&quot;): {

        [r, macro(&quot;charSheetForm@Lib:bw&quot;): macro.args]

    }]

</command>
                      <label>openCharSheetFrame</label>
                      <group>Forms</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>65</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>65</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input = arg(0)]

&lt;!-- Rolls control die, situation die, and outputs both. Also includes the step value and &quot;+dx&quot; string--&gt;

[h: output=0]

&lt;!-- Roll control die (d20) --&gt;

[h: controlDieRoll = roll(1,20)]

&lt;!-- Record input as diestep --&gt;

[h: situationDieStep = input]

&lt;!-- Transform input, to avoid abort on 0 value --&gt;

[h: input=input * 10 + 1]
[h: input = if(input &lt; -49,-49,input)]
[h: input = if(input &gt; 81,81,input)]


[h, switch(input), code:

case &quot;-49&quot;:
	{[h: situationDieRoll = roll(1,20)]
	[h: situationDieText = &quot;d20&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-39&quot;:
	{[h: situationDieRoll = roll(1,12)]
	[h: situationDieText = &quot;d12&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-29&quot;:
	{[h: situationDieRoll = roll(1,8)]
	[h: situationDieText = &quot;d8&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-19&quot;:
	{[h: situationDieRoll = roll(1,6)]
	[h: situationDieText = &quot;d6&amp;&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;-9&quot;:
	{[h: situationDieRoll = roll(1,4)]
	[h: situationDieText = &quot;d4&quot;]
	[h: combinedRoll = controlDieRoll - situationDieRoll]
	};
case &quot;1&quot;:
	{[h: situationDieRoll = &quot;0&quot;]
	[h: situationDieText = &quot;d0&quot;]
	[h: combinedRoll = controlDieRoll]
	};
case &quot;11&quot;:
	{[h: situationDieRoll = roll(1,4)]
	[h: situationDieText = &quot;d4&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;21&quot;:
	{[h: situationDieRoll = roll(1,6)]
	[h: situationDieText = &quot;d6&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;31&quot;:
	{[h: situationDieRoll = roll(1,8)]
	[h: situationDieText = &quot;d8&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;41&quot;:
	{[h: situationDieRoll = roll(1,12)]
	[h: situationDieText = &quot;d12&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;51&quot;:
	{[h: situationDieRoll = roll(1,20)]
	[h: situationDieText = &quot;d20&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;61&quot;:
	{[h: situationDieRoll = roll(2,20)]
	[h: situationDieText = &quot;2d20&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;71&quot;:
	{[h: situationDieRoll = roll(3,20)]
	[h: situationDieText = &quot;3d20&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
case &quot;81&quot;:
	{[h: situationDieRoll = roll(4,20)]
	[h: situationDieText = &quot;4d20&quot;]
	[h: combinedRoll = controlDieRoll + situationDieRoll]
	};
default:
	{[h: assert(1, &quot;AlternityRoll input not valid&quot;)]
	}]

[h, if(situationDieStep &gt; 0), code: {[h:stepSymbol = &quot;+&quot;]};{}]
[h, if(situationDieStep == 0), code: {[h:stepSymbol = &quot;+&quot;]};{}]
[h, if(situationDieStep &lt; 0), code: {[h:stepSymbol = &quot;-&quot;]};{}]

&lt;!-- output all fields as an array --&gt;
	
[h: output = json.set(&quot;&quot;,&quot;controlDieRoll&quot;,controlDieRoll,&quot;situationDieText&quot;,situationDieText,&quot;situationDieStep&quot;,situationDieStep,&quot;situationDieRoll&quot;,situationDieRoll,&quot;stepSymbol&quot;,stepSymbol,&quot;combinedRoll&quot;,combinedRoll)]
[h: macro.return = output]</command>
                      <label>alternityRoll</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>66</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>66</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: id = arg(0)]

[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;,id)]
[h: actionsPerRound = json.get(naturalStatistics,&quot;Actions Per Round&quot;)]
[h: setProperty(&quot;Actions&quot;,actionsPerRound,id)]</command>
                      <label>resetActionsPerRound</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>67</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>67</index>
                      <colorKey>yellow</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h, if(getInitiativeRound() != -1), code :{
	[h, if(lastInPhase()), code:{ [h, macro(&quot;nextPhase@Lib:bw&quot;) : &quot;&quot;] }]
	};{
	}
]

[h: sizeOfInitiative = initiativeSize() - 1]
[h: resetInit = &quot;No&quot;]
[h: nextRound = &quot;No&quot;]
[h: currentRound = getInitiativeRound()]

[h, if(sizeOfInitiative == getCurrentInitiative()), code: {

	[macro(&quot;nextRound@Lib:bw&quot;) : &quot;&quot;]
	[h: setCurrentInitiative(0)]
	[h: nextRound = &quot;Yes&quot;]

	};{
	
	[h: initSize = initiativeSize()]
	[h: initiative = getInitiativeToken()]
	
	[h, if ((initSize &gt; 0) &amp;&amp; (initiative == &quot;&quot;)), code :
		{
	
		[h, macro(&quot;nextRound@Lib:bw&quot;) : &quot;&quot;]
		[h: resetInit = &quot;Yes&quot;]
		[h: nextInitiative()]
		
		};{}
	]
		
	[h: initiative = getInitiativeToken()]
	
	[h, if (getTokenFacing(initiative) == &quot;&quot;), code: {
		[h: broadcast(&apos;&lt;span style=color:red;font-weight:bold;&gt;Token must be faced before next initiative&lt;/span&gt;&apos;)]
		};{
		[h: nextInitiative()]
		[h, macro(&quot;PreformMovement@Lib:bw&quot;):&quot;&quot;]
		}
	]
	}
]

[h, if (resetInit == &quot;Yes&quot;), code :{
	[h: setCurrentInitiative(0)]
	};{}]
	
[h, if (nextRound == &quot;Yes&quot;), code :{
	[h: setInitiativeRound(currentRound + 1)]
	};{}]

[h: initiative = getInitiativeToken()]
[h: setProperty(&quot;Action Spent&quot;,0,initiative)]
[h: isDead = getState(&quot;Dead&quot;,initiative)]
[h: isUnconciousStun = getState(&quot;Unconcious (Stun)&quot;,initiative)]
[h: isUnconciousWound = getState(&quot;Unconcious (Wound)&quot;,initiative)]
[h: initiativeIDList = &quot;&quot;]
[h: initiativeSize = initiativeSize()]
[h, for (i,0,initiativeSize), code :{
	[h: initiativeTokenID = json.get(json.get(json.get(getInitiativeList(), &quot;tokens&quot;), i), &quot;tokenId&quot;)]
	[h: initiativeIDList = listAppend(initiativeIDList, initiativeTokenID)]
	}
]

[h: &apos;&lt;!-- Improved cycle macro --&gt;&apos;]
[h: loopIndexVarSaved = getCurrentInitiative()]
[h: newRound = 0]
[h, if(isDead || isUnconciousStun || isUnconciousWound), code :
	{
	[h: loopIndexVar = getCurrentInitiative()]
	[h, while(loopIndexVar &gt;= 0), code :
		{
		[h: loopIndexVarSaved = loopIndexVar]
		[h: nextInitiativeID = listGet(initiativeIDList, loopIndexVar)]
		[h, if(nextInitiativeID == &quot;&quot;): loopIndexVar = -1]
		[h, if(nextInitiativeID == &quot;&quot;): newRound = 1; newRound = 0]
		[h: isDead = getState(&quot;Dead&quot;,nextInitiativeID)]
		[h: isUnconciousStun = getState(&quot;Unconcious (Stun)&quot;,nextInitiativeID)]
		[h: isUnconciousWound = getState(&quot;Unconcious (Wound)&quot;,nextInitiativeID)]
		[h: pause (&quot;nextInitiativeID&quot;,&quot;loopIndexVar&quot;,&quot;loopIndexVarSaved&quot;,&quot;isDead&quot;,&quot;isUnconciousStun&quot;,&quot;isUnconciousWound&quot;)]
		[h, if(isDead || isUnconciousStun || isUnconciousWound): loopIndexVar = loopIndexVar + 1; loopIndexVar = -1]
		}
	]
	}
]

[h, if(loopIndexVarSaved &gt; initiativeSize), code :
	{
	[h: setCurrentIniitiatve(loopIndexVarSaved)]
	[macro (&quot;nextInitiative@Lib:bw&quot;) : &quot;&quot;]
	};{
	[h: setCurrentInitiative(loopIndexVarSaved)]
	}
]

[h: initiative = getInitiativeToken()]
[h: pause (&quot;initiative&quot;,&quot;loopIndexVarSaved&quot;)]
[h: name = getName(initiative)]

[h, if(isNPC(initiative)), code :{ [h: broadcast (getName(initiative) + &quot; has received initiative.&quot;)] };{}]</command>
                      <label>nextInitiative</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>68</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>68</index>
                      <colorKey>yellow</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: &apos;&lt;!-- applyUpdates --&gt;&apos;]

[h: phaseActions = getLibProperty(&quot;Phase Actions&quot;,&quot;Lib:bw&quot;)]

[h, if(! json.isEmpty(phaseActions)), code :{
	[h: broadcast(&quot;&lt;b&gt;Phase results:&lt;/b&gt;&quot;)]
	};{
	}
]
	
[h, foreach(action,phaseActions), code :
	{
	[h: type = json.get(action,&quot;type&quot;)]
	[h, if (type == &quot;Ranged&quot;), code :
		{
		[h: applyRangedAttack()]
		}
	]

	[h, if (type == &quot;Automatic&quot;), code :
		{
		[h: applyAutomaticAttack()]
		}
	]
	
	[h, if (type == &quot;Custom&quot;), code :
		{
		[h: applyCustomAttack()]
		}
	]
	}
]
[h: initiativeIDList()]
[h: tokenIDUniqueArray = json.unique(json.fromList(initiativeIDList))]
[h, foreach(tokenID, tokenIDUniqueArray ) : setProperty(&quot;Action Spent&quot;,0,tokenID)]

[h: sizeOfInitiative = initiativeSize() - 1]
[h: resetInit = &quot;No&quot;]
[h: nextRound = &quot;No&quot;]
[h: currentRound = getInitiativeRound()]</command>
                      <label>nextPhase</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>69</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>69</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: &apos;&lt;!-- list (list of initiative values) list2 (list of non-dead initiative values)  --&gt;&apos;]
[h, if (getInitiativeRound() == -1), code :
	{
	[h: macro.return = 0]
	};{
	[h, if(getCurrentInitiative() == -1), code :
		{
		[h: setCurrentInitiative(0)]
		};{
		}
	]
	[h: initiativeJSON = json.get(getInitiativeList(),&quot;tokens&quot;)]
	[h: list = &quot;&quot;][h: array1 = &quot;&quot;][h: array2 = &quot;&quot;][h: array3 = &quot;&quot;][h: array4 = &quot;&quot;]
	[h: initiativeLength = json.length(initiativeJSON)]
	[h: deadList = 0]
	[h, for (i,0,initiativeLength), code:{
		[h: jsonInfo = json.get(initiativeJSON,i)]
		[h: currentInitiative =  json.get(jsonInfo,&quot;initiative&quot;))]
		[h: currentID = json.get(json.get(initiativeJSON,i),&quot;tokenId&quot;))]
		[h: list = listappend(list,currentInitiative)]
		[h: isDead = getState(&quot;Dead&quot;,currentID)]
		[h: jsonInfo = json.set(jsonInfo,&quot;originalIndex&quot;,i,&quot;isDead&quot;,isDead)]
		[h: initFloor = floor(currentInitiative)]
		[h, if(initFloor == 4): array4 = json.append(array4,jsonInfo)]
		[h, if(initFloor == 3): array3 = json.append(array3,jsonInfo)]
		[h, if(initFloor == 2): array2 = json.append(array2,jsonInfo)]
		[h, if(initFloor == 1): array1 = json.append(array1,jsonInfo)]
		[h: deadList = deadList + isDead]
		}
	]
	[h, if(deadList == initiativeLength), code:
		{
		[h: macro.return = 0]
		[h: assert(0,&quot;All tokens in initiative are Dead!&quot;,0)]
		};{}
	]
		
	[h: currentInitiativeID = getInitiativeToken()]
	[h: initiativeList = &quot;&quot;]
	[h, foreach(entry,initiativeJSON), code :{
		[h: initiative = json.get(entry,&quot;initiative&quot;)]
		[h: initiativeList = listAppend(initiativeList,initiative)]
		}
	]
	[h: currentInitiativeValue = listGet(initiativeList,getCurrentInitiative())]
	[h: currentPhaseArray = eval(&quot;array&quot;+ floor(currentInitiativeValue))]

	[h: length = json.length(currentPhaseArray)]
	[h: loopVar = 1]
	[h, while ((loopVar == 1)&amp;&amp;(length &gt; 0)), code :{
		[h: initInfo = json.get(currentPhaseArray,length-1)]
		[h: isDead = json.get(initInfo,&quot;isDead&quot;)]
		[h, if(! isDead): originalIndexOfLastInPhase = json.get(initInfo,&quot;originalIndex&quot;)]
		[h, if(! isDead): loopVar = 0; length = length - 1]
		}
	]
	
	[h, if (length == 0), code :
		{
		[h: macro.return = 1]
		};{
		[h: lastInPhase = json.get(initiativeJSON,originalIndexOfLastInPhase)]
		[h: lastInPhaseInitiative = json.get(lastInPhase,&quot;initiative&quot;)]
		[h, if(lastInPhaseInitiative == currentInitiativeValue): macro.return = 1; macro.return = 0]
		}
	]
	

	}
]</command>
                      <label>lastInPhase</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>73</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>73</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>	[h: tempVar = json.toStrProp(macro.args)]
	[h: varsFromStrProp(tempVar)]

	[h: knownBroadSkills = getProperty(&quot;Broad Skills&quot;, playerTokenID)]
	[h: knownSpecialistSkills = getProperty(&quot;Skills&quot;, playerTokenID)]
	[h: strengthList = getLibProperty(&quot;strengthList&quot;,&quot;Lib:Library&quot;)]
	[h: dexterityList = getLibProperty(&quot;dexterityList&quot;,&quot;Lib:Library&quot;)]
	[h: constitutionList = getLibProperty(&quot;constitutionList&quot;,&quot;Lib:Library&quot;)]
	[h: intelligenceList = getLibProperty(&quot;intelligenceList&quot;,&quot;Lib:Library&quot;)]
	[h: willpowerList = getLibProperty(&quot;willpowerList&quot;,&quot;Lib:Library&quot;)]
	[h: personalityList = getLibProperty(&quot;personalityList&quot;,&quot;Lib:Library&quot;)]
	[h: skillLibrary = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]
	[h: strengthTable = &quot;&quot;][h: dexterityTable = &quot;&quot;][h: constitutionTable = &quot;&quot;][h: intelligenceTable = &quot;&quot;][h: willpowerTable = &quot;&quot;][h: personalityTable = &quot;&quot;]
	[h: situationBonus = getPropVar(&quot;Situation Bonus&quot;, playerTokenID, &quot;&quot;)]
	
	[h: &apos;&lt;!-- Strength --&gt;&apos;]
	[h: x = 0]
	
	
	[h, foreach(skillName,strengthList), code :{
		[h, if(situationBonus == skillName): situationText = &quot;&lt;b&gt;&amp;nbsp&amp;nbsp;&amp;#91;-d4&amp;#93;&lt;/b&gt;&quot;; situationText = &quot;&quot;]
		[h: skillInfo = json.get(skillLibrary,skillName)]
		[h: skillBroad = json.get(skillInfo,&quot;broad&quot;)]
		[h: skillBroadIsAttribute = json.contains(&quot;Strength&quot;,skillBroad)]
		
		[h: &apos;&lt;!-- If skill is broad skill --&gt;&apos;]
		[h, if(skillBroadIsAttribute), code :{
			[h: isBroadSkill = 1]
			};{
			[h: isBroadSkill = 0]
			}
		]
		
		[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
		[h: skillUntrained = json.get(skillInfo,&quot;untrained&quot;)]
		
		[h: knownSpecialistSkill = json.get(knownSpecialistSkills,skillName)]
		[h: skillNotInSkillsJSON = (json.isEmpty(knownSpecialistSkill))]	
		[h, if(skillNotInSkillsJSON):
			knownSkillJSON = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,&quot;&quot;);
			knownSkillJSON = json.get(knownSpecialistSkills,skillName)]	
		[h: rank = json.get(knownSkillJSON,&quot;Rank&quot;)]
		
		[h: tokenAttribute = getProperty(&quot;Strength&quot;,playerTokenID)]
		[h, if(isBroadSkill): ordinaryScore = tokenAttribute; ordinaryScore = tokenAttribute + rank]
		[h, if (rank == 0): ordinaryScore = floor(ordinaryScore / 2)]
		[h: goodScore = floor(ordinaryScore / 2)]
		[h: amazingScore = floor(goodScore / 2)]
		[h: score = ordinaryScore + &quot;/&quot; + goodScore + &quot;/&quot; + amazingScore]

		
		[h: output = skillName + &quot;,&quot; + playerTokenID]
		[h: linkText = strformat(&apos;&lt;a style=&quot;color:black&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))]
		
		[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)), code :{
			[h: linkText =  strformat(&apos;&lt;a style=&quot;color:blue&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))]
			};{}]
		
		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)), code:{
			[h: score = &quot;0/0/0&quot;]	
			[h: linkText = &quot;&lt;font color=blue&gt;&quot; + skillName + &quot;&lt;/font&gt;&quot;]
			};{
			}
		]
		
		[h, if(band(x, 1)), code :{
	
			[h, if (isBroadSkill): strengthTable = strengthTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + situationText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): strengthTable = strengthTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): strengthTable = strengthTable + 
			&quot;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			};{
			[h, if (isBroadSkill): strengthTable = strengthTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + situationText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): strengthTable = strengthTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): strengthTable = strengthTable + &quot;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			}
		]
		[h: x = x + 1]
		}
	]

	[h: &apos;&lt;!-- Dexterity --&gt;&apos;]
	[h: x = 0]
	[h, foreach(skillName,dexterityList), code :{
	
		[h, if(situationBonus == skillName): situationText = &quot;&lt;b&gt;&amp;nbsp&amp;nbsp;&amp;#91;-d4&amp;#93;&lt;/b&gt;&quot;; situationText = &quot;&quot;]
	
		[h: skillInfo = json.get(skillLibrary,skillName)]
		[h: skillBroad = json.get(skillInfo,&quot;broad&quot;)]
		[h: skillBroadIsAttribute = json.contains(&quot;Dexterity&quot;,skillBroad)]
		
		[h: &apos;&lt;!-- If skill is broad skill --&gt;&apos;]
		[h, if(skillBroadIsAttribute), code :{
			[h: isBroadSkill = 1]
			};{
			[h: isBroadSkill = 0]
			}
		]
		
		[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
		[h: skillUntrained = json.get(skillInfo,&quot;untrained&quot;)]
		
		[h: knownSpecialistSkill = json.get(knownSpecialistSkills,skillName)]
		[h: skillNotInSkillsJSON = (json.isEmpty(knownSpecialistSkill))]	
		[h, if(skillNotInSkillsJSON):
			knownSkillJSON = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,&quot;&quot;);
			knownSkillJSON = json.get(knownSpecialistSkills,skillName)]	
		[h: rank = json.get(knownSkillJSON,&quot;Rank&quot;)]
		
		[h: tokenAttribute = getProperty(&quot;Dexterity&quot;,playerTokenID)]
		[h, if(isBroadSkill): ordinaryScore = tokenAttribute; ordinaryScore = tokenAttribute + rank]
		[h, if (rank == 0): ordinaryScore = floor(ordinaryScore / 2)]
		[h: goodScore = floor(ordinaryScore / 2)]
		[h: amazingScore = floor(goodScore / 2)]
		[h: score = ordinaryScore + &quot;/&quot; + goodScore + &quot;/&quot; + amazingScore]

		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)): score = &quot;0/0/0&quot;]
		
		[h: output = skillName + &quot;,&quot; + playerTokenID]
		[h: linkText = strformat(&apos;&lt;a style=&quot;color:black&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))] 
		
		[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)), code :{
			[h: linkText =  strformat(&apos;&lt;a style=&quot;color:blue&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))]
			};{}]
		
		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)), code:{
			[h: score = &quot;0/0/0&quot;]	
			[h: linkText = &quot;&lt;font color=blue&gt;&quot; + skillName + &quot;&lt;/font&gt;&quot;]
			};{
			}
		]
			
			
		[h, if(band(x, 1)), code :{
			[h, if (isBroadSkill): dexterityTable = dexterityTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + situationText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): dexterityTable = dexterityTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): dexterityTable = dexterityTable + 
			&quot;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			};{
			[h, if (isBroadSkill): dexterityTable = dexterityTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + situationText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): dexterityTable = dexterityTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): dexterityTable = dexterityTable + &quot;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + situationText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			}
		]
		[h: x = x + 1]
		}
	]

	[h: &apos;&lt;!-- Constitution --&gt;&apos;]
	[h: x = 0]
	[h, foreach(skillName,constitutionList), code :{
		[h: skillInfo = json.get(skillLibrary,skillName)]
		[h: skillBroad = json.get(skillInfo,&quot;broad&quot;)]
		[h: skillBroadIsAttribute = json.contains(&quot;Constitution&quot;,skillBroad)]
		
		[h: &apos;&lt;!-- If skill is broad skill --&gt;&apos;]
		[h, if(skillBroadIsAttribute), code :{
			[h: isBroadSkill = 1]
			};{
			[h: isBroadSkill = 0]
			}
		]
		
		[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
		[h: skillUntrained = json.get(skillInfo,&quot;untrained&quot;)]
		
		[h: knownSpecialistSkill = json.get(knownSpecialistSkills,skillName)]
		[h: skillNotInSkillsJSON = (json.isEmpty(knownSpecialistSkill))]	
		[h, if(skillNotInSkillsJSON):
			knownSkillJSON = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,&quot;&quot;);
			knownSkillJSON = json.get(knownSpecialistSkills,skillName)]	
		[h: rank = json.get(knownSkillJSON,&quot;Rank&quot;)]
		
		[h: tokenAttribute = getProperty(&quot;Constitution&quot;,playerTokenID)]
		[h, if(isBroadSkill): ordinaryScore = tokenAttribute; ordinaryScore = tokenAttribute + rank]
		[h, if (rank == 0): ordinaryScore = floor(ordinaryScore / 2)]
		[h: goodScore = floor(ordinaryScore / 2)]
		[h: amazingScore = floor(goodScore / 2)]
		[h: score = ordinaryScore + &quot;/&quot; + goodScore + &quot;/&quot; + amazingScore]

		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)): score = &quot;0/0/0&quot;]
		
		[h: output = skillName + &quot;,&quot; + playerTokenID]
		[h: linkText = strformat(&apos;&lt;a style=&quot;color:black&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))] 
		
		[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)), code :{
			[h: linkText =  strformat(&apos;&lt;a style=&quot;color:blue&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))]
			};{}]
		
		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)), code:{
			[h: score = &quot;0/0/0&quot;]	
			[h: linkText = &quot;&lt;font color=blue&gt;&quot; + skillName + &quot;&lt;/font&gt;&quot;]
			};{
			}
		]
		
		[h, if(band(x, 1)), code :{
			[h, if (isBroadSkill): constitutionTable = constitutionTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): constitutionTable = constitutionTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): constitutionTable = constitutionTable + 
			&quot;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			};{
			[h, if (isBroadSkill): constitutionTable = constitutionTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): constitutionTable = constitutionTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): constitutionTable = constitutionTable + &quot;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			}
		]
		[h: x = x + 1]
		}
	]
	
	[h: &apos;&lt;!-- Intelligence --&gt;&apos;]
	[h: x = 0]
	[h, foreach(skillName,intelligenceList), code :{
		[h: skillInfo = json.get(skillLibrary,skillName)]
		[h: skillBroad = json.get(skillInfo,&quot;broad&quot;)]
		[h: skillBroadIsAttribute = json.contains(&quot;Intelligence&quot;,skillBroad)]
		
		[h: &apos;&lt;!-- If skill is broad skill --&gt;&apos;]
		[h, if(skillBroadIsAttribute), code :{
			[h: isBroadSkill = 1]
			};{
			[h: isBroadSkill = 0]
			}
		]
		
		[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
		[h: skillUntrained = json.get(skillInfo,&quot;untrained&quot;)]
		
		[h: knownSpecialistSkill = json.get(knownSpecialistSkills,skillName)]
		[h: skillNotInSkillsJSON = (json.isEmpty(knownSpecialistSkill))]	
		[h, if(skillNotInSkillsJSON):
			knownSkillJSON = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,&quot;&quot;);
			knownSkillJSON = json.get(knownSpecialistSkills,skillName)]	
		[h: rank = json.get(knownSkillJSON,&quot;Rank&quot;)]
		
		[h: tokenAttribute = getProperty(&quot;Intelligence&quot;,playerTokenID)]
		[h, if(isBroadSkill): ordinaryScore = tokenAttribute; ordinaryScore = tokenAttribute + rank]
		[h, if (rank == 0): ordinaryScore = floor(ordinaryScore / 2)]
		[h: goodScore = floor(ordinaryScore / 2)]
		[h: amazingScore = floor(goodScore / 2)]
		[h: score = ordinaryScore + &quot;/&quot; + goodScore + &quot;/&quot; + amazingScore]

		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)): score = &quot;0/0/0&quot;]
		
		[h: output = skillName + &quot;,&quot; + playerTokenID]
		[h: linkText = strformat(&apos;&lt;a style=&quot;color:black&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))] 
		
		[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)), code :{
			[h: linkText =  strformat(&apos;&lt;a style=&quot;color:blue&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))]
			};{}]
		
		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)), code:{
			[h: score = &quot;0/0/0&quot;]	
			[h: linkText = &quot;&lt;font color=blue&gt;&quot; + skillName + &quot;&lt;/font&gt;&quot;]
			};{
			}
		]
		
		[h, if(band(x, 1)), code :{
			[h, if (isBroadSkill): intelligenceTable = intelligenceTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): intelligenceTable = intelligenceTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): intelligenceTable = intelligenceTable + 
			&quot;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			};{
			[h, if (isBroadSkill): intelligenceTable = intelligenceTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): intelligenceTable = intelligenceTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): intelligenceTable = intelligenceTable + &quot;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			}
		]
		[h: x = x + 1]
		}
	]
	
	[h: &apos;&lt;!-- Willpower --&gt;&apos;]
	[h: x = 0]
	[h, foreach(skillName,willpowerList), code :{
		[h: skillInfo = json.get(skillLibrary,skillName)]
		[h: skillBroad = json.get(skillInfo,&quot;broad&quot;)]
		[h: skillBroadIsAttribute = json.contains(&quot;Willpower&quot;,skillBroad)]
		
		[h: &apos;&lt;!-- If skill is broad skill --&gt;&apos;]
		[h, if(skillBroadIsAttribute), code :{
			[h: isBroadSkill = 1]
			};{
			[h: isBroadSkill = 0]
			}
		]
		
		[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
		[h: skillUntrained = json.get(skillInfo,&quot;untrained&quot;)]
		
		[h: knownSpecialistSkill = json.get(knownSpecialistSkills,skillName)]
		[h: skillNotInSkillsJSON = (json.isEmpty(knownSpecialistSkill))]	
		[h, if(skillNotInSkillsJSON):
			knownSkillJSON = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,&quot;&quot;);
			knownSkillJSON = json.get(knownSpecialistSkills,skillName)]	
		[h: rank = json.get(knownSkillJSON,&quot;Rank&quot;)]
		
		[h: tokenAttribute = getProperty(&quot;Willpower&quot;,playerTokenID)]
		[h, if(isBroadSkill): ordinaryScore = tokenAttribute; ordinaryScore = tokenAttribute + rank]
		[h, if (rank == 0): ordinaryScore = floor(ordinaryScore / 2)]
		[h: goodScore = floor(ordinaryScore / 2)]
		[h: amazingScore = floor(goodScore / 2)]
		[h: score = ordinaryScore + &quot;/&quot; + goodScore + &quot;/&quot; + amazingScore]

		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)): score = &quot;0/0/0&quot;]
		
		[h: output = skillName + &quot;,&quot; + playerTokenID]
		[h: linkText = strformat(&apos;&lt;a style=&quot;color:black&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))] 
		
		[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)), code :{
			[h: linkText =  strformat(&apos;&lt;a style=&quot;color:blue&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))]
			};{}]
		
		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)), code:{
			[h: score = &quot;0/0/0&quot;]	
			[h: linkText = &quot;&lt;font color=blue&gt;&quot; + skillName + &quot;&lt;/font&gt;&quot;]
			};{
			}
		]
		
		[h, if(band(x, 1)), code :{
			[h, if (isBroadSkill): willpowerTable = willpowerTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): willpowerTable = willpowerTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): willpowerTable = willpowerTable + 
			&quot;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			};{
			[h, if (isBroadSkill): willpowerTable = willpowerTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): willpowerTable = willpowerTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): willpowerTable = willpowerTable + &quot;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			}
		]
		[h: x = x + 1]
		}
	]
	
	[h: &apos;&lt;!-- Personality --&gt;&apos;]
	[h: x = 0]
	[h, foreach(skillName,personalityList), code :{
		[h: skillInfo = json.get(skillLibrary,skillName)]
		[h: skillBroad = json.get(skillInfo,&quot;broad&quot;)]
		[h: skillBroadIsAttribute = json.contains(&quot;Personality&quot;,skillBroad)]
		
		[h: &apos;&lt;!-- If skill is broad skill --&gt;&apos;]
		[h, if(skillBroadIsAttribute), code :{
			[h: isBroadSkill = 1]
			};{
			[h: isBroadSkill = 0]
			}
		]
		
		[h: &apos;&lt;!-- If skill cannot be used untrained --&gt;&apos;]
		[h: skillUntrained = json.get(skillInfo,&quot;untrained&quot;)]
		
		[h: knownSpecialistSkill = json.get(knownSpecialistSkills,skillName)]
		[h: skillNotInSkillsJSON = (json.isEmpty(knownSpecialistSkill))]	
		[h, if(skillNotInSkillsJSON):
			knownSkillJSON = json.set(&quot;&quot;,&quot;Name&quot;,skillName,&quot;Rank&quot;,&quot;&quot;);
			knownSkillJSON = json.get(knownSpecialistSkills,skillName)]	
		[h: rank = json.get(knownSkillJSON,&quot;Rank&quot;)]
		
		[h: tokenAttribute = getProperty(&quot;Personality&quot;,playerTokenID)]
		[h, if(isBroadSkill): ordinaryScore = tokenAttribute; ordinaryScore = tokenAttribute + rank]
		[h, if (rank == 0): ordinaryScore = floor(ordinaryScore / 2)]
		[h: goodScore = floor(ordinaryScore / 2)]
		[h: amazingScore = floor(goodScore / 2)]
		[h: score = ordinaryScore + &quot;/&quot; + goodScore + &quot;/&quot; + amazingScore]

		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)): score = &quot;0/0/0&quot;]
		
		[h: output = skillName + &quot;,&quot; + playerTokenID]
		
		[h: linkText = strformat(&apos;&lt;a style=&quot;color:black&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))] 
		
		[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)), code :{
			[h: linkText =  strformat(&apos;&lt;a style=&quot;color:blue&quot; href=&quot;%s&quot;&gt;%{skillName}&lt;/a&gt;&apos;,macroLinkText(&quot;skillCheckSpecific@Lib:bw&quot;,&quot;none&quot;,output,playerTokenID))]
			};{}]
		
		[h, if (json.get(skillInfo,&quot;untrained&quot;)==&quot;No&quot;): canUseUntrained = 0; canUseUntrained = 1]
		[h, if ((! canUseUntrained)&amp;&amp;(rank == 0)), code:{
			[h: score = &quot;0/0/0&quot;]	
			[h: linkText = &quot;&lt;font color=blue&gt;&quot; + skillName + &quot;&lt;/font&gt;&quot;]
			};{
			}
		]
		
		[h, if(band(x, 1)), code :{

			[h, if (isBroadSkill): personalityTable = personalityTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): personalityTable = personalityTable + &quot;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): personalityTable = personalityTable + 
			&quot;&lt;font color=&apos;blue&apos;&gt;
				&lt;tr bgcolor=DDDDDD&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			};{
			[h, if (isBroadSkill): personalityTable = personalityTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;b&gt;&quot; + linkText + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + rank + &quot;&lt;/b&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&lt;b&gt;&quot; + score + &quot;&lt;/b&gt;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;Yes&quot;)): personalityTable = personalityTable + &quot;
				&lt;tr bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;&quot;]
			[h, if ((!isBroadSkill)&amp;&amp;(skillUntrained == &quot;No&quot;)): personalityTable = personalityTable + &quot;
			&lt;font color=&apos;blue&apos;&gt;
				&lt;tr  bgcolor=EEEEEE&gt;
					&lt;td&gt;
						&lt;i&gt;&amp;nbsp;&amp;nbsp;&quot; + linkText + &quot;&lt;/i&gt;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + rank + &quot;
					&lt;/td&gt;
					&lt;td width=30 align=center&gt;
						&quot; + score + &quot;
					&lt;/td&gt;
				&lt;/tr&gt;
			&lt;/font&gt;&quot;]
			}
		]
		[h: x = x + 1]
		}
	]
	
	
	[h: setProperty(&quot;charSheetStrengthTable&quot;,strengthTable,playerTokenID)]
	[h: setProperty(&quot;charSheetDexterityTable&quot;,dexterityTable,playerTokenID)]
	[h: setProperty(&quot;charSheetConstitutionTable&quot;,constitutionTable,playerTokenID)]
	[h: setProperty(&quot;charSheetIntelligenceTable&quot;,intelligenceTable,playerTokenID)]
	[h: setProperty(&quot;charSheetWillpowerTable&quot;,willpowerTable,playerTokenID)]
	[h: setProperty(&quot;charSheetPersonalityTable&quot;,personalityTable,playerTokenID)]
	[h: setProperty(&quot;Refresh Character Sheet&quot;,0,playerTokenId)]</command>
                      <label>defineSkillTable</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>74</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>74</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: selected = macro.args]

[h: &apos;&lt;!-- Natural Statistics --&gt;&apos;]

[h: dexterity = getProperty(&quot;Dexterity&quot;,selected)]
[h: intelligence = getProperty(&quot;Intelligence&quot;,selected)]
[h: constitution = getProperty(&quot;Constitution&quot;,selected)]
[h: willpower = getProperty(&quot;Willpower&quot;,selected)]
[h: personality = getProperty(&quot;Personality&quot;,selected)]
[h: profession = getProperty(&quot;Profession&quot;,selected)]
[h: race = getProperty(&quot;Race&quot;,selected)]
[h: conWill = constitution + willpower]

[h, if(conWill &lt; 16), code : {[h:actionsPerRound = 1]};{}]
[h, if((conWill &gt;= 16) &amp;&amp; (conWill &lt; 24)), code : {[h:actionsPerRound = 2]};{}]
[h, if((conWill &gt;= 24) &amp;&amp; (conWill &lt; 32)), code : {[h:actionsPerRound = 3]};{}]
[h, if(conWill &gt;= 32), code : {[h:actionsPerRound = 4]};{}]

[h: setProperty(&quot;Actions&quot;,actionsPerRound,selected)]

[h, if(personality &lt; 8), code : {[h: lastResortMax = 0][h: lastResortCost = 1000]};{}]
[h, if((personality &gt;= 8)&amp;&amp;(personality &lt; 11)), code : {[h: lastResortMax = 1][h: lastResortCost = 3]};{}]
[h, if((personality &gt;= 11)&amp;&amp;(personality &lt; 13)), code : {[h: lastResortMax = 2][h: lastResortCost = 2]};{}]
[h, if((personality &gt;= 13)&amp;&amp;(personality &lt; 15)), code : {[h: lastResortMax = 3][h: lastResortCost = 1]};{}]
[h, if(personality &gt;= 15), code : {[h: lastResortMax = 4][h: lastResortCost = 1]};{}]

[h: lastResortPrep = json.set(&quot;&quot;,&quot;Max&quot;,lastResortMax,&quot;Cost&quot;,lastResortCost)]

[h: setProperty(&quot;Last Resort Info&quot;,lastResortPrep,selected)]
[h: setProperty(&quot;Last Resorts&quot;,0,selected)]




[h: actionScore = (dexterity + intelligence) / 2]

[h, switch(profession), code:
case &quot;Combat Spec&quot; : {[h: actionScore = actionScore + 3]};
case &quot;Free Agent&quot; : {[h: actionScore = actionScore + 2]
	[h: lastResortMax = lastResortMax + 1]};
case &quot;Tech Op&quot; : {[h: actionScore = actionScore + 1]};
case &quot;Diplomat/Combat Spec&quot; : {[h: actionScore = actionScore + 1]};
case &quot;Diplomat/Free Agent&quot; : {[h: actionScore = actionScore + 1]};
case &quot;Diplomat/Tech Op&quot; : {[h: actionScore = actionScore + 1]};
default: {[h: assert(0, &quot;switch(profession)&quot;, 1)]}]

[h: actionScore = floor(actionScore)]
[h: actionScoreGood = floor(actionScore/2)]
[h: actionScoreAmazing = floor(actionScoreGood/2)]

[h: actionCheck = json.set(&quot;&quot;,&quot;Marginal&quot;,actionScore+1,&quot;Ordinary&quot;,actionScore,&quot;Good&quot;,actionScoreGood,&quot;Amazing&quot;,actionScoreAmazing)]

[h: setProperty(&quot;Action Check&quot;, actionCheck, selected)]


[h: stun = constitution]

[h, if(race == &quot;Weren&quot;), code :{[h:stun = floor(stun*1.5)]};{}]

[h: wound = stun]
[h: mortal = ceil(stun/2)]
[h: fatigue = mortal]


[h: naturalStats = json.set(&quot;&quot;,&quot;Stun&quot;,stun,&quot;Wound&quot;,wound,&quot;Mortal&quot;,mortal,&quot;Fatigue&quot;,fatigue,&quot;Actions Per Round&quot;,actionsPerRound)]

[h: setProperty(&quot;Natural Statistics&quot;,naturalStats,selected)]


[h: equipmentInput = json.set(&quot;&quot;,&quot;Head&quot;,&quot;&quot;,&quot;Head Type&quot;,&quot;&quot;,&quot;Body&quot;,&quot;&quot;,&quot;Body Type&quot;,&quot;&quot;,&quot;Main Hand&quot;,&quot;&quot;,&quot;Main Hand Type&quot;,&quot;Unarmed&quot;,&quot;Off Hand&quot;,&quot;&quot;,&quot;Off Hand Type&quot;,&quot;Unarmed&quot;,&quot;Accessory&quot;,&quot;&quot;,&quot;Accessory Type&quot;,&quot;&quot;)]
[h: setProperty(&quot;Equipment&quot;,equipmentInput,selected)]

[h: &apos;&lt;!-- Movement --&gt;&apos;]

[h: strength = getProperty(&quot;Strength&quot;,selected)]
[h: dexterity = getProperty(&quot;Dexterity&quot;,selected)]

[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;,selected)]

[h: strDex = Strength + Dexterity]
[h, if (strDex &lt; 7), code: {[h: strDex = 7]}]
[h, if (strDex &gt; 32), code: {[h: strDex = 32]}]
[h: sprint = floor(strDex/2) * 2]
[h: run = floor(sprint * 2 / 3))]
[h: walk = ceiling(sprint / 4)]
[h: easySwim = 1]
[h, if(strDex &gt;= 14): easySwim = 2]
[h, if(strDex &gt;= 24): easySwim = 3]
[h, if(strDex &gt;= 30): easySwim = 4]
[h: swim = easySwim * 2]
[h: glide = sprint]
[h: fly = glide * 2]

[h: race = getProperty(&quot;Race&quot;,selected)]
[h, if(race != &quot;T&apos;sa&quot;): glide = 0]
[h, if(race != &quot;T&apos;sa&quot;): fly = 0]

[h: naturalStatistics = json.set(naturalStatistics,&quot;Walk&quot;,walk,&quot;Run&quot;,run,&quot;Sprint&quot;,sprint,&quot;Easy Swim&quot;,easySwim,&quot;Swim&quot;,swim,&quot;Glide&quot;,glide,&quot;Fly&quot;,fly)]

[h: setProperty(&quot;Natural Statistics&quot;, naturalStatistics, selected)]

[h: setProperty(&quot;Sprint&quot;,sprint,selected)]
[h: setProperty(&quot;Run&quot;,run,selected)]
[h: setProperty(&quot;Walk&quot;,walk,selected)]
[h: movement = getProperty(&quot;Movement&quot;,selected)]
[h: movement = setStrProp(movement, &quot;declared&quot;, &quot;Walk&quot;)]
[h: movement = setStrProp(movement, &quot;walk&quot;, walk)]
[h: movement = setStrProp(movement, &quot;run&quot;, run)]
[h: movement = setStrProp(movement, &quot;sprint&quot;, sprint)]
[h: tokenX = getTokenX(1,selected)]
[h: movement = setStrProp(movement, &quot;tokenX&quot;, tokenX)]
[h: tokenY = getTokenY(1,selected)]
[h: movement = setStrProp(movement, &quot;tokenY&quot;, tokenY)]
[h: setProperty(&quot;Movement&quot;,movement,selected)]
[h: move = &quot;Walk: &quot; + walk]
[h: setProperty(&quot;Move&quot;,move,selected)]

[h: &apos;&lt;!-- Health --&gt;&apos;]

[h: naturalStats = getProperty(&quot;Natural Statistics&quot;,selected)]
[h: stun = json.get(naturalStats, &quot;Stun&quot;)]
[h: wound = json.get(naturalStats, &quot;Wound&quot;)]
[h: mortal = json.get(naturalStats, &quot;Mortal&quot;)]
[h: fatigue = json.get(naturalStats, &quot;Fatigue&quot;)]
[h: setProperty(&quot;Stun&quot;,stun,selected)]
[h: setProperty(&quot;Wound&quot;,wound,selected)]
[h: setProperty(&quot;Mortal&quot;,mortal,selected)]
[h: setProperty(&quot;Fatigue&quot;,fatigue,selected)]
[h: setAllStates(0,selected)]

[h: &apos;&lt;!-- Unarmed Damage --&gt;&apos;]

[h: brawlRank = json.get(json.get(getProperty(&quot;Skills&quot;,selected),&quot;Brawl&quot;),&quot;Rank&quot;)]
[h: powerMartialArtsRank = json.get(json.get(getProperty(&quot;Skills&quot;,selected),&quot;Power Martial Arts&quot;),&quot;Rank&quot;)]

[h, if (powerMartialArtsRank &gt;= 1), code :{
	[h: unarmedDamage = &quot;1d6+0s/1d6+2s/1d4+0w&quot;]
	[h: ordinarySeverity = &quot;s&quot;]
	[h: goodSeverity = &quot;s&quot;]
	[h: amazingSeverity = &quot;w&quot;]
	};{
	[h: unarmedDamage = &quot;1d4+0s/1d4+1s/1d4+2s&quot;]
	[h: ordinarySeverity = &quot;s&quot;]
	[h: goodSeverity = &quot;s&quot;]
	[h: amazingSeverity = &quot;s&quot;]
	}
]

[h, if (race == &quot;Weren&quot;), code :
	{
	[h: unarmedDamage = &quot;1d4+0w/1d4+2w/1d4+0m&quot;]
	[h: ordinarySeverity = &quot;w&quot;]
	[h: goodSeverity = &quot;w&quot;]
	[h: amazingSeverity = &quot;m&quot;]
	};{
	}
]

[h: strength = getProperty(&quot;Strength&quot;,selected)]
[h: strength = ceil(strength/2) * 2]
[h, if (strength &lt; 6): strength = 6]
[h, if (strength &gt; 20): strength = 20]
[h, switch(strength), code :
	case 6: {[h: modifier = -1]};
	case 8: {[h: modifier = 0]};
	case 10: {[h: modifier = 0]};
	case 12: {[h: modifier = 1]};
	case 14: {[h: modifier = 2]};
	case 16: {[h: modifier = 3]};
	case 18: {[h: modifier = 4]};
	case 20: {[h: modifier = 5]};
	default: {[h: assert(0,&quot;switch(strength) invalid parameter value&quot;,1)]}
]

[h: damageParser(unarmedDamage)]

[h: object = macro.return]
[h: strPropObject = json.toStrProp(object)]
[h: varsFromStrProp(strPropObject)]

[h, if ((brawlRank &gt;= 1) || (powerMartialArtsRank &gt;= 1)), code :{
	[h: baseDie = &quot;+d0&quot;]
	};{
	[h: baseDie = &quot;+d4&quot;]
	}
]

[h: ordinaryModifier = ordinaryModifier + modifier]
[h: goodModifier = goodModifier + modifier]
[h: amazingModifier = amazingModifier + modifier]
[h: ordinaryString = ordinaryQuantity + &quot;d&quot; + ordinarySides + ordinarySign + ordinaryModifier]
[h: goodString = goodQuantity + &quot;d&quot; + goodSides + goodSign + goodModifier]
[h: amazingString = amazingQuantity + &quot;d&quot; + amazingSides + amazingSign + amazingModifier]

[h: object = json.set(object, &quot;baseDie&quot;, baseDie, &quot;ordinaryModifier&quot;, ordinaryModifier, &quot;goodModifier&quot;, goodModifier, &quot;amazingModifier&quot;, amazingModifier, &quot;ordinaryString&quot;, ordinaryString , &quot;goodString&quot;, goodString, &quot;amazingString&quot;, amazingString, &quot;ordinarySeverity&quot;, ordinarySeverity, &quot;goodSeverity&quot;, goodSeverity, &quot;amazingSeverity&quot;, amazingSeverity)]

[h: setProperty(&quot;Unarmed Statistics&quot;,object,selected)]

[h: &apos;&lt;!-- Request new skill table for char sheet --&gt;&apos;]

[h: setProperty(&quot;Refresh Character Sheet&quot;,1,selected)]

[macro (&quot;Add Skills@lib:bw&quot;): selected]</command>
                      <label>preformNewCharacter</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>77</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>77</index>
                      <colorKey>teal</colorKey>
                      <hotKey>None</hotKey>
                      <command>&lt;!-----===== FormatTooltip =====-----&gt;
&lt;!-- This function takes a JSON object of variables (labels) and values 
to be formatted into a table for a tooltip pop-up in the MapTools non-standard HTML interpreter,
overtop the sum, which is automatically calculated --&gt;
&lt;!-- input needs to be in the form of : param = json.set(&quot;&quot;, &quot;dice roll&quot;, 1d20, &quot;bonus 1&quot;, 2, &quot;bonus 2&quot;, 3)
formatToolTip(param)
formatToolTip(param, 0)
formatToolTip(param, 0, 15) --&gt;
[H: numArgs = argCount() ]
[H: tValues = arg(0) ]    &lt;!-- macro.args if not a user-defined function --&gt;
[H, IF( numArgs&gt;1 ): sumValues = arg(1) ; sumValues = 1 ]    &lt;!-- optional switch to calculate sum or just return formatted table --&gt;
[H, IF( numArgs&gt;2 ): vsDC = arg(2) ; vsDC = &quot;&quot; ]    &lt;!-- optional value to compare to sum as success threshold (DC) --&gt;
[H, if( isNumber( vsDC ) ): vsDC = number( vsDC ) ; vsDC = 0 ]
[H: tNames = json.fields( tValues )]

&lt;!--calculte sum of value--&gt;
[H: valueSum = 0 ]
[H, FOREACH( var, tNames, &quot;&quot; ): valueSum = valueSum + json.get( tValues, var )]
&lt;!--calculate the the result vs the DC--&gt;
[H: marginDC = valueSum - vsDC ]    &lt;!-- margin of the roll vs DC.  &gt;=0 is a pass, &lt;0 is a fail --&gt;

&lt;!--create basic tooltip html--&gt;
&lt;!--HEADER--&gt;
[H: ttHead = &quot;&lt;html&gt;&lt;head&gt;&quot;+
    &quot;&lt;style&gt;&lt;!--&quot;+
    &quot;   td              { font-family: Verdana,sans-serif ; }
        td.var          {font-style: italic;
                        text-align: left;}
        td.value        {text-align: right;}
        tr.total        {font-weight: bold;
                        color: #333333;
                        background: #CCCCFF;}
        tr.dc, tr.dcfail{font-weight: normal;
                        font-size: 100%;
                        color: #000000;
                        background: #CCFFCC;}
        tr.dcfail       {color: #660000;
                        background: #CCCCCC;}
    --&gt;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&quot;]

&lt;!--CONTENT--&gt;
[H:                             ttContents = &quot;&lt;table&gt;&quot;]
&lt;!--add labels with values--&gt;
[H, FOREACH( var, tNames, &quot;&quot; ):ttContents = ttContents + strformat(&quot;&lt;tr&gt;&lt;td class=&apos;var&apos;&gt;%s&lt;/td&gt;&lt;td class=&apos;value&apos; style=&apos;text-align: right;&apos;&gt;%s&lt;/td&gt;&lt;/tr&gt;&quot;, var, json.get( tValues,var ))]
&lt;!--add the sum of values--&gt;
[H:                             ttContents = ttContents + strformat(&quot;&lt;tr class=&apos;total&apos;&gt;&lt;td class=&apos;var&apos;&gt;&lt;em&gt;Total&lt;/em&gt;&lt;/td&gt;&lt;td class=&apos;value&apos; &gt;%s&lt;/td&gt;&lt;/tr&gt;&quot;,valueSum)]
&lt;!--add DC is it is set--&gt;
[H, if( vsDC!=0 ):             ttContents = ttContents + strformat(&quot;&lt;tr class=&apos;%s&apos;&gt;&lt;td class=&apos;var&apos;&gt;&lt;strong&gt;%s&lt;/strong&gt;&lt;/td&gt;&lt;td class=&apos;value&apos; style=&apos;text-align: right;&apos;&gt;&lt;em&gt;vs.&lt;/em&gt;%s&lt;/td&gt;&lt;/tr&gt;&quot;, if( marginDC&lt;0, &quot;dcfail&quot;, &quot;dc&quot; ), if( marginDC&gt;0, &quot;+&quot;, &quot;&quot; )+ marginDC, vsDC)]
&lt;!--end of the content--&gt;
[H:                             ttContents = ttContents + &quot;&lt;/table&gt;&quot; ]

&lt;!--FOOTER--&gt;
[H: ttFoot = &quot;&lt;/body&gt;&lt;/html&gt;&quot; ]

&lt;!--add HEADER, CONTENT and FOOTER--&gt;
[H: ttHTML = ttHead + ttContents + ttFoot ]

&lt;!--set background color for output text (to chat--&gt;
[H: textBG = if(vsDC!=0, if( marginDC&lt;0, &quot;#FFCCCC&quot;, &quot;#CCFFCC&quot; ), &quot;#EEEEEE&quot;)]

[H, IF( sumValues ), CODE:{
    &lt;!--create output with tt--&gt;
    [formattedtt = strformat(&apos;&lt;span style=&quot;background:%s&quot; title=&quot;%s&quot; &gt;%s&lt;/span&gt;&apos;, textBG, ttHTML, if( vsDC==0, valueSum, if( marginDC&gt;0, &quot;+&quot;, &quot;&quot; )+ marginDC ) ) ]
};{
    &lt;!--create output without tt, just show list of values--&gt;
    [formattedtt = ttContents ]
}]

&lt;!--return value to calling macro--&gt;
[H: macro.return = formattedtt ]</command>
                      <label>formatTooltip</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>silver</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>79</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>79</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input = stringToList(arg(0),&quot;/&quot;)]
[h: Li = listGet(input,0)]
[h: LiString = Li]
[h: Li2 = stringToList(Li,&quot;d&quot;)]
[h: LiQuantity = listGet(Li2,0)]
[h: Li3 = listGet(Li2,1)]
[h: indexPlus = indexOf(Li3,&quot;+&quot;)]
[h: indexMinus = indexOf(Li3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: Li4 = stringToList(Li3,&quot;\\+&quot;)]
	[h: LiSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: Li4 = stringToList(Li3,&quot;\\-&quot;)]
		[h: LiSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: LiSides = listGet(Li4,0)]
[h: LiModifier = listGet(Li4,1)]


	
[h: Hi = listGet(input,1)]
[h: HiString = Hi]
[h: Hi2 = stringToList(Hi,&quot;d&quot;)]
[h: HiQuantity = listGet(Hi2,0)]
[h: Hi3 = listGet(Hi2,1)]
[h: indexPlus = indexOf(Hi3,&quot;+&quot;)]
[h: indexMinus = indexOf(Hi3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: Hi4 = stringToList(Hi3,&quot;\\+&quot;)]
	[h: HiSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: Hi4 = stringToList(Hi3,&quot;\\-&quot;)]
		[h: HiSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: HiSides = listGet(Hi4,0)]
[h: HiModifier = listGet(Hi4,1)]

	
	
[h: En = listGet(input,2)]
[h: EnString = En]
[h: En2 = stringToList(En,&quot;d&quot;)]
[h: EnQuantity = listGet(En2,0)]
[h: En3 = listGet(En2,1)]
[h: indexPlus = indexOf(En3,&quot;+&quot;)]
[h: indexMinus = indexOf(En3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: En4 = stringToList(En3,&quot;\\+&quot;)]
	[h: EnSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: En4 = stringToList(En3,&quot;\\-&quot;)]
		[h: EnSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: EnSides = listGet(En4,0)]
[h: EnModifier = listGet(En4,1)]
	
[h: output = json.set(&quot;&quot;,&quot;LiQuantity&quot;,LiQuantity,&quot;LiSides&quot;,LiSides,&quot;LiSign&quot;,LiSign,&quot;LiModifier&quot;,LiModifier,&quot;LiString&quot;,LiString,&quot;HiQuantity&quot;,HiQuantity,&quot;HiSides&quot;,HiSides,&quot;HiSign&quot;,HiSign,&quot;HiModifier&quot;,HiModifier,&quot;HiString&quot;,HiString,&quot;EnQuantity&quot;,EnQuantity,&quot;EnSides&quot;,EnSides,&quot;EnSign&quot;,EnSign,&quot;EnModifier&quot;,EnModifier,&quot;EnString&quot;,EnString)]
[macro.return = output]</command>
                      <label>armorParse</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>80</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>80</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>&lt;body&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;font-size: 1.4em&quot; align=&quot;center&quot;&gt;&lt;b&gt;Refreshing Skills&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;</command>
                      <label>loadingScreenForm</label>
                      <group>Forms</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>81</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>81</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: arg0 = arg(0)]

[h, if(arg0 == &quot;Damage&quot;), code :
	{
	[h: lines = &quot;&quot;]
	[h: argCount = argCount()]
	[h, for(i,1,argCount), code :
		{
		[h: lines = lines + &quot;&lt;tr&gt;&lt;td style=&apos;border-style: solid; border-width: 1px; border-spacing=0px; &apos;&gt;&quot;+arg(i)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;]
		}
	]
	[h: output = 
		&quot;&lt;table&gt;
			&quot;+lines+&quot;
		&lt;/table&gt;&quot;
	]
	}
]

[h, if(arg0 == &quot;Skill&quot;), code :
	{
	[h: lines = &quot;&quot;]
	[h: argCount = argCount()]
	[h, for(i,1,argCount), code :
		{
		[h, if(i == 1):
		lines = lines + &quot;&lt;tr&gt;&lt;td style=&apos;border-style: solid; border-width: 1px; border-spacing=0px;&apos;&gt;&lt;font size=&apos;4&apos; color=&apos;blue&apos;&gt;&lt;b&gt;Skill Check&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&quot;+arg(i)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
		lines = lines + &quot;&lt;tr&gt;&lt;td style=&apos;border-style: solid; border-width: 1px; border-spacing=0px;&apos;&gt;&quot;+arg(i)+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;]
		}
	]
	[h: output = 
		&quot;&lt;table&gt;
			&quot;+lines+&quot;
		&lt;/table&gt;&quot;
	]
	}
]

[h: broadcast(output)]</command>
                      <label>chatBox</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>82</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>82</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>	[h: actionStrProp = json.toStrProp(action)]
	[h: varsFromStrProp(actionStrProp)]

	[h: stunReducedTotal = stunReduced + secondaryStunDamage]
	[h: woundReducedTotal = woundReduced + secondaryWoundDamage]
	
	[h: stunHp = max(0,getProperty(&quot;Stun&quot;,selected) - stunReducedTotal)]
	[h: woundHp = max(0,getProperty(&quot;Wound&quot;,selected) - woundReducedTotal)]
	[h: mortalHp = max(0,getProperty(&quot;Mortal&quot;,selected) - mortalReduced)]
	
	[h: &apos;&lt;!-- Work out status effects --&gt;&apos;]
	[h: alreadyStunned = getState(&quot;Unconcious (Stun)&quot;, selected)]
	[h: alreadyWounded = getState(&quot;Unconcious (Wound)&quot;, selected)]
	[h: alreadyDead = getState(&quot;Dead&quot;, selected)]
	
	[h: deathText=&quot;&quot;]
	[h, if (stunHp == 0), code :
		{
		[h, if (alreadyStunned), code :
			{
			[h: deathText = &quot;, who remains Stunned&quot;]
			[h, token(selected): token.initHold = 1]
			[h: setState(&quot;Unconcious (Stun)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			};{
			[h: deathText = &quot;, knocking them out (Stun)&quot;]
			[h, token(selected): token.initHold = 1]
			[h: setState(&quot;Unconcious (Stun)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			}
		]
	};{}]
	
	[h, if(woundHp == 0), code :
		{
		[h, if (alreadyWounded), code :
			{
			[h: deathText = &quot;, who remains Wounded&quot;]
			[h, token(selected): token.initHold = 1]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			};{
			[h: deathText = &quot;, knocking them out (Wound)&quot;]
			[h, token(selected): token.initHold = 1]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			}
		]
	};{}]
	
	[h, if(mortalHp == 0), code :
		{
		[h, if (alreadyDead), code :
			{
			[h: deathText = &quot;, who remains Dead&quot;]
			[h, token(selected): token.initHold = 1]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 0, selected)]
			[h: setState(&quot;Prone&quot;, 0, selected)]
			[h: setState(&quot;Dead&quot;, 1, selected)]
			};{
			[h: deathText = &quot;, &lt;b&gt;killing them&lt;/b&gt;&quot;]
			[h, token(selected): token.initHold = 1]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 0, selected)]
			[h: setState(&quot;Prone&quot;, 0, selected)]
			[h: setState(&quot;Dead&quot;, 1, selected)]
			}
		]
	};{}]
	
	[h: &apos;&lt;!-- Apply damage --&gt;&apos;]
	
	[h: setProperty(&quot;Stun&quot;,max(0,stunHp),selected)]
	[h: setProperty(&quot;Wound&quot;,max(0,woundHp),selected)]
	[h: setProperty(&quot;Mortal&quot;,max(0,mortalHp),selected)]
	
	[h: &apos;&lt;!-- Set Stun Recovery Vars --&gt;&apos;]
	
	[h, if(stunHp &lt;= 0): setProperty(&quot;Rounds Since Stunned&quot;,0,selected)]
	[h, if(stunHp &lt;= 0): setProperty(&quot;Rounds Since Stunned Check&quot;,0,selected)]
	[h, if(stunHp &lt;= 0): setProperty(&quot;Stun Recovering&quot;,0,selected)]
	
	[h: &apos;&lt;!-- If Amazing success, check for knockout --&gt;&apos;]
	
	[h: enduranceCheckSuccess = &quot;&quot;]
	
	[h: stunOnAmazingDamage = getGMSetting(&quot;stunOnAmazingDamage&quot;)]
	
	[h, if ((successString == &quot;Amazing Success&quot;)&amp;&amp;(stunOnAmazingDamage) || (successString == &quot;Automatic Success&quot;)&amp;&amp;(stunOnAmazingDamage)),  code :
		{
		[h: enduranceCheckSuccess = skillCheckBasic(&quot;Endurance&quot;,0,selected)]
		};{
		}
	]
	
	[h: stunText = &quot;&quot;]
	
	[h, if ((enduranceCheckSuccess == &quot;Failure&quot;) || (enduranceCheckSuccess == &quot;Critial failure!&quot;)), code :
		{
		[h: setProperty(&quot;Stun&quot;,0,selected)]
		[h: setState(&quot;Unconcious (Stun)&quot;,1,selected)]
		[h: setState(&quot;Prone&quot;,1,selected)]
		[h, token(selected): token.initHold = 1]
		[h: stunText = getName(selected) + &quot; is now stunned because they failed an &lt;i&gt;Stamina - Endurance&lt;/i&gt; check due to the amazing hit&quot;]
		[h: &apos;&lt;!-- Set Stun Recovery Vars --&gt;&apos;]
		[h: setProperty(&quot;Rounds Since Stunned&quot;,0,selected)]
		[h: setProperty(&quot;Rounds Since Stunned Check&quot;,0,selected)]
		};{
		}
	]
	
	[h, if ((enduranceCheckSuccess == &quot;Ordinary success&quot;) || (enduranceCheckSuccess == &quot;Good success&quot;) || (enduranceCheckSuccess == &quot;Amazing success&quot;) || (enduranceCheckSuccess == &quot;Automatic success!&quot;)): stunText = getName(selected) + &quot; avoided stun by passing an &lt;i&gt;Stamina - Endurance&lt;/i&gt; check due to the amazing hit&quot;]
	
	
	[h: &apos;&lt;!-- Post damage information to chatBox--&gt;&apos;]
	
	[h: damageList = &quot;&quot;]
	
	[h, if(sum(stunReduced+secondaryStunDamage) &gt; 0): damageList = listAppend(damageList,sum(stunReduced+secondaryStunDamage) + &quot;s&quot;,&quot;/&quot;)]
	[h, if(sum(woundReduced+secondaryWoundDamage) &gt; 0): damageList = listAppend(damageList,sum(woundReduced+secondaryWoundDamage) + &quot;w&quot;,&quot;/&quot;)]
	[h, if(mortalReduced &gt; 0): damageList = listAppend(damageList,mortalReduced + &quot;m&quot;,&quot;/&quot;)]
	[h, if(damageList == &quot;&quot;): damageList = &quot;no damage&quot;; damageList = replace(damageList,&quot; &quot;,&quot;&quot;)]
	[h: boldDamageString = &quot;&lt;b&gt;= &quot; + replace(damageList,&quot; &quot;,&quot;&quot;) + &quot;&lt;/b&gt;&quot;]
	[h: damageTooltip = json.set(damageTooltip,&quot;Damage Result&quot;,boldDamageString,&quot;Remaining Health&quot;, stunHP + &quot;s/&quot; + woundHp + &quot;w/&quot; + mortalHp + &quot;m&quot;)]
	
	[h: outputText =
		&quot;&lt;i&gt;&quot; + getName(initiative) + &quot;&lt;/i&gt; hit &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt; with &quot; + mainHandName + &quot; dealing &quot; +
		tooltipFromObject(
		damageTooltip,
		&quot;&lt;b&gt;&quot; + damageList + &quot;&lt;/b&gt;&quot;
		)
		+ deathText
	]
	
	[h, if(stunText != &quot;&quot;): chatBox(&quot;Damage&quot;,outputText,stunText) ; chatBox(&quot;Damage&quot;,outputText)]
	
	[h: setLibProperty(&quot;Phase Actions&quot;,&quot;&quot;,&quot;Lib:bw&quot;)]
	
</command>
                      <label>applyRangedAttack</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>84</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>84</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>		
	[h, foreach(shot,json.get(action,&quot;Shot Data&quot;)), code :
		{
		[h: shotStrProp = json.toStrProp(shot)]
		[h: varsFromStrProp(shotStrProp)]
		
		[h: stunHp = max(0, (getProperty(&quot;Stun&quot;, selected) - stunReduced - secondaryStunDamage))]
		[h: woundHp = max(0, (getProperty(&quot;Wound&quot;, selected) - woundReduced - secondaryWoundDamage))]
		[h: mortalHp = max(0, (getProperty(&quot;Mortal&quot;, selected) - mortalReduced))]
		
		[h: &apos;&lt;!-- Work out status effects --&gt;&apos;]
		[h: alreadyStunned = getState(&quot;Unconcious (Stun)&quot;, selected)]
		[h: alreadyWounded = getState(&quot;Unconcious (Wound)&quot;, selected)]
		[h: alreadyDead = getState(&quot;Dead&quot;, selected)]
		
		[h: deathText=&quot;&quot;]
		[h, if ((stunHp == 0)&amp;&amp;(alreadyStunned)), code :
			{
			[h: deathText = &quot;, who remains Stunned&quot;]
			};{
			}
		]
		[h, if ((stunHp == 0)&amp;&amp;(alreadyStunned == 0)), code :
			{
			[h: deathText = &quot;, knocking them out (Stun)&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			};{
			}
		]
		
		[h, if((woundHp == 0)&amp;&amp;(alreadyWounded)), code :
			{
			[h: deathText = &quot;, who remains Wounded&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			};{
			}
		]
		
		[h, if ((woundHp == 0)&amp;&amp;(alreadyWounded == 0)), code :
			{
			[h: deathText = &quot;, knocking them out (Wound)&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			};{
			}
		]

		
		[h, if((mortalHp == 0)&amp;&amp;(alreadyDead)), code :
			{
			[h: deathText = &quot;, who remains Dead&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 0, selected)]
			[h: setState(&quot;Prone&quot;, 0, selected)]
			};{
			}
		]
		[h, if((mortalHp == 0)&amp;&amp;(alreadyDead == 0)), code :
			{
			[h: deathText = &quot;, &lt;b&gt;killing them&lt;/b&gt;&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 0, selected)]
			[h: setState(&quot;Prone&quot;, 0, selected)]
			[h: setState(&quot;Dead&quot;, 1, selected)]
			};{
			}
		]

		
		[h: &apos;&lt;!-- Apply damage --&gt;&apos;]
			
		[h: setProperty(&quot;Stun&quot;,max(0,stunHp),selected)]
		[h: setProperty(&quot;Wound&quot;,max(0,woundHp),selected)]
		[h: setProperty(&quot;Mortal&quot;,max(0,mortalHp),selected)]	
		
		[h: &apos;&lt;!-- Set Stun Recovery Vars --&gt;&apos;]
	
		[h, if(stunHp &lt;= 0): setProperty(&quot;Rounds Since Stunned&quot;,0,selected)]
		[h, if(stunHp &lt;= 0): setProperty(&quot;Rounds Since Stunned Check&quot;,0,selected)]
		[h, if(stunHp &lt;= 0): setProperty(&quot;Stun Recovering&quot;,0,selected)]
		
		
		[h: &apos;&lt;!-- Post damage information to chatBox--&gt;&apos;]
		
		[h, if(stunReduced == 0): stunString = &quot;&quot;; stunString = &quot;&lt;b&gt;&quot; + stunReduced + &quot;&lt;/b&gt;s&quot;]
		[h, if(woundReduced == 0): woundString = &quot;&quot;; woundString = &quot;&lt;b&gt;&quot; + woundReduced + &quot;&lt;/b&gt;w&quot;]
		[h, if(mortalReduced == 0): mortalString = &quot;&quot;; mortalString = &quot;&lt;b&gt;&quot; + mortalReduced + &quot;&lt;/b&gt;m&quot;]
		
		[h, if ((stunReduced == 0)&amp;&amp;(woundReduced == 0)&amp;&amp;(mortalReduced == 0)), code :{
			[h: stunString = &quot;&lt;b&gt;0&lt;/b&gt;&quot;]
			[h: woundString = &quot;&quot;]
			[h: mortalString = &quot;&quot;]
			};{}
		]
		 
		[h: shotNumber = shot + 1]
		
		[h: damageTypeChar = lower(substring(damageType,0,1))]
		
		[h: outputText = &quot;Shot &quot;+ shotNumber + &quot;:&lt;br&gt;&lt;i&gt;&quot; + getName(initiative) + &quot;&lt;/i&gt; deals &lt;b&gt;&quot; + damageResult + &quot;&lt;/b&gt;&quot; + damageTypeChar + &quot; damage to &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt;&quot; + deathText + &quot;. &lt;b&gt;&quot; + damageRoll + &quot;&lt;/b&gt;[&quot; + damageDieQuantity + &quot;d&quot; + damagedieSides + damageDieSign + damageDieModifier + &quot;] reduced by &quot; + armorName + &quot; by &lt;b&gt;&quot; + armorRoll + &quot;&lt;/b&gt;[&quot; + armorDieQuantity + &quot;d&quot; + armorDieSides + armorModifierSign + abs(armorDieModifier) + &quot;]&quot;]
		

		[h, if (secondaryStunDamage !=0): outputText = outputText + &quot; The wound also causes &lt;b&gt;&quot; + secondaryStunDamage + &quot;&lt;/b&gt; secondary stun&quot;]
		[h, if (secondaryWoundDamage !=0): outputText = outputText + &quot; and &lt;b&gt;&quot; + secondaryWoundDamage + &quot;&lt;/b&gt; secondary wound&quot;]
		
		[h, if(! hit):  outputText = &quot;Shot &quot;+shotNumber+&quot;: Missed.&quot;]
		
		[h: chatBox(&quot;Damage&quot;,outputText)]
		
		[h: setLibProperty(&quot;Phase Actions&quot;,&quot;&quot;,&quot;Lib:bw&quot;)]
		}
	]</command>
                      <label>applyAutomaticAttack</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>85</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>85</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: bw.playerTokenIDList = getOwned(getPlayerName())]
[h: bw.playerTokenNameList =&quot;&quot;]
[h, foreach(tokenID,bw.playerTokenIDList): bw.playerTokenNameList = listAppend(bw.playerTokenNameList,getName(tokenID))]

[h: bw.listLength = listCount(bw.playerTokenNameList)]

[h, if (bw.listLength &lt;= 0), code :{
	[h: assert(0,&quot;You don&apos;t own any tokens!&quot;,0)]
	};{
	}
]

[h, if (bw.listLength &gt; 1), code :{
	[h: abort(input(
	&quot;bw.playerTokenIndex|&quot;+bw.playerTokenNameList+&quot;|Choose which token to use|LIST|Select = 0&quot;
	))]
	};{
	[h: bw.playerTokenIndex = 0]
	}
]

[h: playerTokenName = listGet(bw.playerTokenNameList,bw.playerTokenIndex)]
[h: playerTokenID = listGet(bw.playerTokenIDList,bw.playerTokenIndex)]</command>
                      <label>selectOwned</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>86</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>86</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: bw.playerTokenIDList = getSelected()]
[h: bw.playerTokenNameList =&quot;&quot;]
[h, foreach(tokenID,bw.playerTokenIDList): bw.playerTokenNameList = listAppend(bw.playerTokenNameList,getName(tokenID))]

[h: bw.listLength = listCount(bw.playerTokenNameList)]

[h, if (bw.listLength &lt;= 0), code :{
	[h: assert(0,&quot;You have no tokens selected!&quot;,0)]
	};{
	}
]

[h, if (bw.listLength &gt; 1), code :{
	[h: abort(input(
	&quot;bw.playerTokenIndex|&quot;+bw.playerTokenNameList+&quot;|Choose which token to use|LIST|Select = 0&quot;
	))]
	};{
	[h: bw.playerTokenIndex = 0]
	}
]

[h: playerTokenName = listGet(bw.playerTokenNameList,bw.playerTokenIndex)]
[h: playerTokenID = listGet(bw.playerTokenIDList,bw.playerTokenIndex)]</command>
                      <label>selectSelected</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>87</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>87</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>

[h: damage = damageString]
[h: damage2 = stringToList(damage,&quot;d&quot;)]
[h: damageDieQuantity = listGet(damage2,0)]
[h: damage3 = listGet(damage2,1)]
[h: indexPlus = indexOf(damage3,&quot;+&quot;)]
[h: indexMinus = indexOf(damage3,&quot;-&quot;)]
[if (indexPlus &gt;= 1), code :{
	[h: damage4 = stringToList(damage3,&quot;\\+&quot;)]
	[h: damageDieSign = &quot;+&quot;]
	};{
	[if (indexMinus &gt;= 1), code :{
		[h: damage4 = stringToList(damage3,&quot;\\-&quot;)]
		[h: damageDieSign = &quot;-&quot;]
		};{
		[assert(1,&quot;Invalid Syntax on Die Input&quot;,1)]
		}]
	}]
[h: damageDieSides = listGet(damage4,0)]
[h: damage5 = listGet(damage4,1)]
[h: indexS = indexOf(damage5,&quot;s&quot;)]
[h: indexW = indexOf(damage5,&quot;w&quot;)]
[h: indexM = indexOf(damage5,&quot;m&quot;)]
[h, if (indexS &gt;= 1), code :{
	[h: damageType = &quot;Stun&quot;]
	[h: damageDieModifier  = replace(damage5,&quot;s&quot;,&quot;&quot;)]
	};{}]
[h, if (indexW &gt;= 1), code :{
	[h: damageType = &quot;Wound&quot;]
	[h: damageDieModifier = replace(damage5,&quot;w&quot;,&quot;&quot;)]
	};{}]
[h, if (indexM &gt;= 1), code :{
	[h: damageType = &quot;Mortal&quot;]
	[h: damageDieModifier = replace(damage5,&quot;m&quot;,&quot;&quot;)]
	};{}]
</command>
                      <label>damageParserSingle</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>88</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>88</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>	[h: actionStrProp = json.toStrProp(action)]
	[h: varsFromStrProp(actionStrProp)]

	[h: &apos;&lt;!-- Work out status effects --&gt;&apos;]
	[h: alreadyStunned = getState(&quot;Unconcious (Stun)&quot;, selected)]
	[h: alreadyWounded = getState(&quot;Unconcious (Wound)&quot;, selected)]
	[h: alreadyDead = getState(&quot;Dead&quot;, selected)]
	
	[h: deathText=&quot;&quot;]
	[h, if (stunHp == 0), code :
		{
		[if (alreadyStunned), code :
			{
			[h: deathText = &quot;, who remains Stunned&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			};{
			[h: deathText = &quot;, knocking them out (Stun)&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			}
		]
	};{}]
	
	[h, if(woundHp == 0), code :
		{
		[h, if (alreadyWounded), code :
			{
			[h: deathText = &quot;, who remains Wounded&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			};{
			[h: deathText = &quot;, knocking them out (Wound)&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 1, selected)]
			[h: setState(&quot;Prone&quot;, 1, selected)]
			}
		]
	};{}]
	
	[h, if(mortalHp == 0), code :
		{
		[h, if (alreadyDead), code :
			{
			[h: deathText = &quot;, who remains Dead&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 0, selected)]
			[h: setState(&quot;Prone&quot;, 0, selected)]
			[h: setState(&quot;Dead&quot;, 1, selected)]
			};{
			[h: deathText = &quot;, &lt;b&gt;killing them&lt;/b&gt;&quot;]
			[h: setState(&quot;Unconcious (Stun)&quot;, 0, selected)]
			[h: setState(&quot;Unconcious (Wound)&quot;, 0, selected)]
			[h: setState(&quot;Prone&quot;, 0, selected)]
			[h: setState(&quot;Dead&quot;, 1, selected)]
			}
		]
	};{}]
	
	[h: &apos;&lt;!-- Apply damage --&gt;&apos;]
	
	[h: setProperty(&quot;Stun&quot;,max(0,stunHp),selected)]
	[h: setProperty(&quot;Wound&quot;,max(0,woundHp),selected)]
	[h: setProperty(&quot;Mortal&quot;,max(0,mortalHp),selected)]
	
	[h: &apos;&lt;!-- Set Stun Recovery Vars --&gt;&apos;]
	
	[h, if(stunHp &lt;= 0): setProperty(&quot;Rounds Since Stunned&quot;,0,selected)]
	[h, if(stunHp &lt;= 0): setProperty(&quot;Rounds Since Stunned Check&quot;,0,selected)]
	[h, if(stunHp &lt;= 0): setProperty(&quot;Stun Recovering&quot;,0,selected)]
	
	
	[h: &apos;&lt;!-- Post damage information to chatBox--&gt;&apos;]
	
	[h, if(stunReduced == 0): stunString = &quot;&quot;; stunString = &quot;&lt;b&gt;&quot; + stunReduced + &quot;&lt;/b&gt;s&quot;]
	[h, if(woundReduced == 0): woundString = &quot;&quot;; woundString = &quot;&lt;b&gt;&quot; + woundReduced + &quot;&lt;/b&gt;w&quot;]
	[h, if(mortalReduced == 0): mortalString = &quot;&quot;; mortalString = &quot;&lt;b&gt;&quot; + mortalReduced + &quot;&lt;/b&gt;m&quot;]
	
	[h, if ((stunReduced == 0)&amp;&amp;(woundReduced == 0)&amp;&amp;(mortalReduced == 0)), code :{
		[h: stunString = &quot;&lt;b&gt;0&lt;/b&gt;&quot;]
		[h: woundString = &quot;&quot;]
		[h: mortalString = &quot;&quot;]
		};{}
	]
	[h: emptyDescriptionSuffix = json.isEmpty(descriptionSuffix)]
	[h, if(emptyDescriptionSuffix), code :
		{
		[h: outputText = &quot;&lt;i&gt;&quot; + descriptionPrefix + &quot;&lt;/i&gt; deals &quot; + stunString + woundString + mortalString + &quot; primary damage to &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt;&quot; + deathText + &quot;. &quot; + damageRoll + &quot;[&quot; + damageDieQuantity + &quot;d&quot; + damagedieSides + damageDieSign +  damageDieModifier + &quot;] reduced by &quot; + armorName + &quot; by &quot; + armorRoll + &quot;[&quot; + armorDieQuantity + &quot;d&quot; + armorDieSides + armorModifierSign + abs(armorDieModifier) + &quot;]&quot;]
		[h, if (secondaryStunDamage !=0): outputText = outputText + &quot;&lt;br&gt;The wound also causes &lt;b&gt;&quot; + secondaryStunDamage + &quot;&lt;/b&gt; secondary stun&quot;]
		[h, if (secondaryWoundDamage !=0): outputText = outputText + &quot; and &lt;b&gt;&quot; + secondaryWoundDamage + &quot;&lt;/b&gt; secondary wound&quot;]
		};{
		[h: outputText = &quot;&lt;i&gt;&quot; + descriptionPrefix + &quot;&lt;/i&gt; deals &quot; + stunString + woundString + mortalString + &quot;  damage to &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt;&quot; + deathText + &quot;. &quot; + damageRoll + &quot;[&quot; + damageDieQuantity + &quot;d&quot; + damagedieSides + damageDieSign +  damageDieModifier + &quot;] &quot; + descriptionSuffix]
		}
	]

	
	[h: chatBox(&quot;Damage&quot;,outputText)]
	
	[h: setLibProperty(&quot;Phase Actions&quot;,&quot;&quot;,&quot;Lib:bw&quot;)]</command>
                      <label>applyCustomAttack</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>90</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>90</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: initiativeIDList = &quot;&quot;]
[h, for (i,0,initiativeSize()), code :{
	[h: bw.var12093471 = json.get(json.get(json.get(getInitiativeList(), &quot;tokens&quot;), i), &quot;tokenId&quot;)]
	[h: initiativeIDList = listAppend(initiativeIDList, bw.var12093471)]
	}
]</command>
                      <label>initiativeIDList</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>olive</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>91</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>91</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>
&lt;!--Initialize Variables--&gt;
 
[h:sortObj= arg(0)]
[h:sortKey = arg(1)]
[h:sortDirection = arg(2)]
[h:sortObjContentList = json.fields(sortObj)]
[h:keyList = &quot;&quot;] 
[h:sortedJSON = &quot;{}&quot;]
 
 
&lt;!--Get value corresponding to sortKey for each nested object and append to keyList--&gt;
 
[h,foreach(item, sortObjContentList),CODE:
{
   [h:itemDetail = json.get(sortObj,item)]
   [h: keyList = listAppend(keyList, json.get(itemDetail, sortKey))]
}]
 
&lt;!--Sort keyList based on the direction input by the user--&gt;
 
[h:keyList = listSort(keyList, sortDirection)]
 
 
&lt;!--
Loop through keyList, and for each element, find the matching nested object(s) 
and add them to the new sortedJSON object
--&gt;
 
[h,foreach(key,keyList),CODE:
{
   [foreach(object,sortObj),CODE:
   {
     [objectDetail = json.get(sortObj,object)]
     [h:sortOnValue = json.get(objectDetail, sortKey)]
     [if(sortOnValue == key): sortedJSON=json.set(sortedJSON, object, objectDetail);&quot;&quot;]
   }]
}]
 
&lt;!--Output the Results--&gt;
 
JSON Object sorted by [r:whichKey], [r:sortDirection]:&lt;br&gt;
&lt;pre&gt;[r:json.indent(sortedJSON, 3)]&lt;/pre&gt;</command>
                      <label>jsonObjectSort</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>92</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>92</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: id = arg(0)]
[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;,id)]
[h: sprint = json.get(naturalStatistics,&quot;Sprint&quot;)]
[h: run = json.get(naturalStatistics,&quot;Run&quot;)]
[h: walk = json.get(naturalStatistics,&quot;Walk&quot;)]
[h: output = json.toStrProp(json.set(&quot;&quot;,&quot;declared&quot;,&quot;Walk&quot;,&quot;walk&quot;,walk,&quot;run&quot;,run,&quot;sprint&quot;,sprint))]
[h: setProperty(&quot;Movement&quot;,output,id)]
[h: move = &quot;Walk: &quot; + walk]
[h: setProperty(&quot;Move&quot;,move,id)]</command>
                      <label>resetMovement</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>93</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>93</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: assert(argCount() - 2,&quot;getPropVar Unexpected Var Quantity&quot;,1)]
[h: bw.tempVar0 = arg(0)]
[h: bw.tempVar1 = arg(1)]
[h: bw.tempVar2 = arg(2)]
[h: bw.tempVar3 = getProperty(bw.tempVar0,bw.tempVar1)]
[h: macro.return = if(length(bw.tempVar3) != 0,bw.tempVar3,bw.tempVar2)]</command>
                      <label>getPropVar</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>94</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>94</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[H: link = arg(0)]
[H: runAsPlayer = arg(1)]
[h, if(argCount() &gt;= 3): message = arg(2); message = &quot;Sending macro&quot;]
[H: player = getPlayerName()]
[H, if(runAsPlayer == player): execLink(link); broadcast(strformat(&apos;%{message}&lt;a href=&quot;%{link}&quot;&gt;&lt;/a&gt;&apos;),runAsPlayer)]</command>
                      <label>autoExecute</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>95</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>95</index>
                      <colorKey>red</colorKey>
                      <hotKey>None</hotKey>
                      <command>	
	[h: initiative = arg(0)]
	[h: selected = arg(1)]
	[h: vars = arg(2)]
	[h: varsFromStrProp(json.toStrProp(vars))]
	
	[h: outputText = &quot;&quot;]
	[h: hit = &quot;true&quot;]
	
	[h, if ((selectedMode != &quot;Automatic&quot;)&amp;&amp;(selectedMode != &quot;P&quot;)), code :{
		
		[h: &quot;&lt;!-- If shot hits and not-automatic --&gt;&quot;]

		[h, switch(successNum), code:
		case 1: {
		   [h: damageDieSides = ordinarySides]
		   [h: damageDieQuantity = ordinaryQuantity]
		   [h: damageDieSign = ordinarySign]
		   [h: damageDieModifier = ordinaryModifier]
		   [h: damageType = ordinaryType]
		   };
		case 2: {
		   [h: damageDieSides = goodSides]
		   [h: damageDieQuantity = goodQuantity]
		   [h: damageDieSign = goodSign]
		   [h: damageDieModifier = goodModifier]
		   [h: damageType = goodType]
		   };
		case 3: {
		   [h: damageDieSides = amazingSides]
		   [h: damageDieQuantity = amazingQuantity]
		   [h: damageDieSign = amazingSign]
		   [h: damageDieModifier = amazingModifier]
		   [h: damageType = amazingType]
		   };
		case 0: {
		   [h: hit = &quot;false&quot;]
		   };
		default: {
		   [h: assert(0, &quot;switch(successNum) weaponLookup&quot;, 1)]
		   }
		]
		
		[h: outputText = &quot;&lt;i&gt;&quot; + getName(initiative) + &quot;&lt;/i&gt; attacks &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt; with &quot; + mainHandName + &quot;.&lt;br&gt;&lt;span style=&apos;background:#EEEEEE&apos; title=&apos; [d20]&apos;&gt;&quot; + controlDieRoll + &quot;&lt;/span&gt; &quot; + stepSymbol +&quot; &quot;+ tooltipFromObject(
			json.set(&quot;&quot;,&quot;Target Dexterity&quot;,selectedDexModifier,&quot;Range&quot;,rangeModifier,&quot;Attacker Movement Penalty&quot;,initiativeMovementModifier,&quot;Flank Bonus&quot;,flankModifier,&quot;Firing Mode&quot;,modeModifier,&quot;Cover Penalty&quot;,coverModifier,&quot;Defender Prone&quot;,proneSelectedModifier,&quot;Attacker Prone&quot;,proneInitiativeModifier,&quot;Dual Action Penalty&quot;,dualActionModifier,&quot;Combat Spec Bonus&quot;,situationModifier),
			situationDieRoll,
			&quot;Total Step Modifier&quot;,
			json.set(&quot;&quot;,&quot;Situation Die &quot;+stepSymbol+&quot;[&quot;+situationDieText+&quot;]&quot;,stepSymbol+situationDieRoll+&quot;&quot;)
			)
		+ &quot; = &quot; +
		tooltipFromObject(
			json.set(&quot;&quot;,&quot;Controlling Skill&quot;,skill,&quot;Dexterity&quot;,initiativeDex,&quot;Rank&quot;,&quot;&lt;/b&gt;+&quot;+weaponSkillRank,&quot;Ordinary Success&quot;,&quot;&lt;b&gt;= &quot;+ordinarySuccess+&quot;&lt;/b&gt;&quot;,&quot;Good Success&quot;,&quot;(&quot;+goodSuccess+&quot;)&quot;,&quot;Amazing Success&quot;,&quot;(&quot;+amazingSuccess+&quot;)&quot;,&quot;&lt;b&gt;Combined Roll&lt;/b&gt;&quot;,&quot;&lt;b&gt;&quot;+combinedRoll+&quot;&lt;/b&gt;&quot;),
			&quot;&lt;b&gt;&quot;+success+&quot;&lt;/b&gt;&quot;,
			&quot;&quot;,
			json.set(&quot;&quot;,&quot;Success&quot;,success)
			)
		]
		
		};{
		}
	]

	
	[h, if (selectedMode == &quot;P&quot;), code :{
	
		[h: &quot;&lt;!-- If attack hits and not-automatic --&gt;&quot;]

		[h, switch(successNum), code:
		case 1: {
		   [h: damageDieSides = ordinarySides]
		   [h: damageDieQuantity = ordinaryQuantity]
		   [h: damageDieSign = ordinarySign]
		   [h: damageDieModifier = ordinaryModifier]
		   [h: damageType = ordinaryType]
		   };
		case 2: {
		   [h: damageDieSides = goodSides]
		   [h: damageDieQuantity = goodQuantity]
		   [h: damageDieSign = goodSign]
		   [h: damageDieModifier = goodModifier]
		   [h: damageType = goodType]
		   };
		case 3: {
		   [h: damageDieSides = amazingSides]
		   [h: damageDieQuantity = amazingQuantity]
		   [h: damageDieSign = amazingSign]
		   [h: damageDieModifier = amazingModifier]
		   [h: damageType = amazingType]
		   };
		case 0: {
		   [h: hit = &quot;false&quot;]
		   };
		default: {
		   [h: assert(0, &quot;switch(successNum) weaponLookup&quot;, 1)]
		   }
		]
		
		[h: outputText = &quot;&lt;i&gt;&quot; + getName(initiative) + &quot;&lt;/i&gt; attacks &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt; with &quot; + mainHandName + &quot;.&lt;br&gt;&lt;span style=&apos;background:#EEEEEE&apos; title=&apos; [d20]&apos;&gt;&quot; + controlDieRoll + &quot;&lt;/span&gt; &quot; + stepSymbol +&quot; &quot;+ tooltipFromObject(
			json.set(&quot;&quot;,&quot;Target Strength&quot;,selectedStrModifier,&quot;Range&quot;,rangeModifier,&quot;Attacker Movement Penalty&quot;,initiativeMovementModifier,&quot;Flank Bonus&quot;,flankModifier,&quot;Firing Mode&quot;,modeModifier,&quot;Cover Penalty&quot;,coverModifier,&quot;Defender Prone&quot;,proneSelectedModifier,&quot;Attacker Prone&quot;,proneInitiativeModifier,&quot;Dual Action Penalty&quot;,dualActionModifier,&quot;Combat Spec Bonus&quot;,situationModifier),
			situationDieRoll,
			&quot;Total Step Modifier&quot;,
			json.set(&quot;&quot;,&quot;Situation Die &quot;+stepSymbol+&quot;[&quot;+situationDieText+&quot;]&quot;,stepSymbol+situationDieRoll+&quot;&quot;)
			)
		+ &quot; = &quot; +
		tooltipFromObject(
			json.set(&quot;&quot;,&quot;Controlling Skill&quot;,skill,&quot;Strength&quot;,initiativeStr,&quot;Rank&quot;,&quot;&lt;/b&gt;+&quot;+weaponSkillRank,&quot;Ordinary Success&quot;,&quot;&lt;b&gt;= &quot;+ordinarySuccess+&quot;&lt;/b&gt;&quot;,&quot;Good Success&quot;,&quot;(&quot;+goodSuccess+&quot;)&quot;,&quot;Amazing Success&quot;,&quot;(&quot;+amazingSuccess+&quot;)&quot;,&quot;&lt;b&gt;Combined Roll&lt;/b&gt;&quot;,&quot;&lt;b&gt;&quot;+combinedRoll+&quot;&lt;/b&gt;&quot;),
			&quot;&lt;b&gt;&quot;+success+&quot;&lt;/b&gt;&quot;,
			&quot;&quot;,
			json.set(&quot;&quot;,&quot;Success&quot;,success)
			)
		]
		
		};{
		}
	]
	
	[h, if ((hit == &quot;true&quot;)&amp;&amp;(selectedMode != &quot;Automatic&quot;))	, code: {
		
		[h: &quot;&lt;!-- Roll for damage if hit --&gt;&quot;]
		
		[h, if(damageDieSign == &quot;+&quot;): damageRoll = roll(damageDieQuantity,damageDieSides) + damageDieModifier]
		[h, if(damageDieSign == &quot;-&quot;): damageRoll = roll(damageDieQuantity,damageDieSides) - damageDieModifier]

		[h: &quot;&lt;!-- Calculate how much damage is stopped by Armor --&gt;&quot;]

		[h: stunHp = getProperty(&quot;Stun&quot;,selected)]
		[h: woundHp = getProperty(&quot;Wound&quot;,selected)]
		[h: mortalHp = getProperty(&quot;Mortal&quot;,selected)]
		[h: stunDamage = 0]
		[h: woundDamage = 0]
		[h: mortalDamage = 0]

		[h, switch(damageType), code:
		case &quot;Stun&quot;: {
			[h: stunDamage = damageRoll]
			[h: damageSuffix = &quot;s&quot;]
			};
		case &quot;Wound&quot;: {
			[h: woundDamage = damageRoll]
			[h: damageSuffix = &quot;w&quot;]
			};
		case &quot;Mortal&quot;: {
			[h: mortalDamage = damageRoll]
			[h: damageSuffix = &quot;m&quot;]
			};
		default: {[h: assert (0, &quot;switch(damageType) armor reduction&quot;, 1)]}]
	   
		[h: secondaryStunDamage = 0]
		[h: secondaryWoundDamage = 0]
		[h, if(woundDamage &gt;= 2): secondaryStunDamage = floor(woundDamage/2)]
		[h, if(mortalDamage &gt;= 2), code: {
			[h: secondaryStunDamage = secondaryStunDamage + floor(mortalDamage/2)]
			[h: secondaryWoundDamage = floor(mortalDamage/2)]
		};{}]
		
		[h: &quot;&lt;!-- Calculate armor roll --&gt;&quot;]
		
		[h, if(json.isEmpty(selectedChestJSON)): selectedChestJSON = json.set(&quot;&quot;,&quot;name&quot;,&quot;No armour&quot;,skill,&quot;None&quot;,&quot;actionPenalty&quot;,0,&quot;toughness&quot;,&quot;Ordinary&quot;,&quot;hide&quot;,0,&quot;mass&quot;,0,&quot;avail&quot;,&quot;Common&quot;,&quot;cost&quot;,0,&quot;PL&quot;,0,&quot;equipSlot&quot;,&quot;Chest&quot;,&quot;description&quot;,&quot;No armour.&quot;,&quot;reduction&quot;,&quot;0d0+0/0d0+0/0d0+0&quot;,&quot;LiQuantity&quot;,0,&quot;LiSides&quot;,0,&quot;LiSign&quot;,&quot;+&quot;,&quot;LiModifier&quot;,0,&quot;LiString&quot;,&quot;0d0+0&quot;,&quot;HiQuantity&quot;,0,&quot;HiSides&quot;,0,&quot;HiSign&quot;,&quot;+&quot;,&quot;HiModifier&quot;,0,&quot;HiString&quot;,&quot;0d0+0&quot;,&quot;EnQuantity&quot;,0,&quot;EnSides&quot;,0,&quot;EnSign&quot;,&quot;+&quot;,&quot;EnModifier&quot;,0,&quot;EnString&quot;,&quot;0d0+0&quot;)]
			
		[h: varsFromStrProp(json.toStrProp(selectedChestJSON))]
		
		[h: armorName = name]
		[h: type = substring(type,0,1)]
		[h, switch(type), code:
		case &quot;L&quot;:{
			[h: armorDieSides = LiSides]
			[h: armorDieQuantity = LiQuantity]
			[h: armorDieModifier = LiModifier]
			[h: armorModifierSign = LiSign]
			};
		case &quot;H&quot;:{
			[h: armorDieSides = HiSides]
			[h: armorDieQuantity = HiQuantity]
			[h: armorDieModifier = HiModifier]
			[h: armorModifierSign = HiSign]
			};
		case &quot;E&quot;:{
			[h: armorDieSides = EnSides]
			[h: armorDieQuantity = EnQuantity]
			[h: armorDieModifier = EnModifier]
			[h: armorModifierSign = EnSides]
			};
		default:{[h: assert (0, &quot;switch(type) armor reduction&quot;, 1)]}]
		
		[h, if(armorModifierSign == &quot;+&quot;): armorRoll = roll(armorDieQuantity,armorDieSides) + armorDieModifier]
		[h, if(armorModifierSign == &quot;-&quot;): armorRoll = roll(armorDieQuantity,armorDieSides) - armorDieModifier]
	   
		[h: &quot;&lt;!-- Round armorRoll up to 0 if lower than 0 --&gt;&quot;]
	   
		[h, if(armorRoll &lt; 0): armorRoll = 0]
	   
		[h: &quot;&lt;!-- Remove armor roll from damage roll --&gt;&quot;]   
	   
		[h: damageResult = damageRoll - armorRoll]   
	   
		[h: &quot;&lt;!-- Round damageRoll up to 0 if lower than 0  --&gt;&quot;]     
	   
		[h, if(damageResult &lt; 0): damageResult = 0]
		
		[h: &quot;&lt;!-- Update damages to secondary plus armor roll reduced damage roll --&gt;&quot;]
		
		[h, switch(damageType):
		case &quot;Stun&quot;: stunDamage = damageResult;
		case &quot;Wound&quot;: woundDamage = damageResult;
		case &quot;Mortal&quot;: mortalDamage = damageResult;
		default: assert (0, &quot;switch(damageType) armor reduction&quot;, 1)]
		
		[h: &quot;&lt;!--Apply secondary damage--&gt;&quot;]

		[h: stunHp = stunHp - secondaryStunDamage]
		[h: woundHp = woundHp - secondaryWoundDamage]  
		
		[h: &quot;&lt;!-- Set into array and run DamageCalc macro --&gt;&quot;]   
	   
		[h: damageOutput = json.set(&quot;&quot;,&quot;stunDamage&quot;,stunDamage,&quot;woundDamage&quot;,woundDamage,&quot;mortalDamage&quot;,mortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp)]
	   
		[macro (&quot;DamageCalc@Lib:bw&quot;) : damageOutput]

		[h: &quot;&lt;!-- Returned absoloute damages to apply to target --&gt;&quot;]   

		[h: varsFromStrProp(json.toStrProp(macro.return))]
		
		[h: &apos;&lt;!-- Apply damage to output Property for phase change --&gt;&apos;]
		
		[h, if(successNum == 1): ordinaryString2 = &quot;&lt;b&gt;&quot; + ordinaryString + &quot;&lt;/b&gt;&quot;; ordinaryString2 = ordinaryString]
		[h, if(successNum == 2): goodString2 = &quot;&lt;b&gt;&quot; + goodString + &quot;&lt;/b&gt;&quot;; goodString2 = goodString]
		[h, if(successNum == 3): amazingString2 = &quot;&lt;b&gt;&quot; + amazingString+ &quot;&lt;/b&gt;&quot;; amazingString2 = amazingString]
		
		[h, if(type == &quot;L&quot;): liString2 = &quot;&lt;b&gt;&quot; + liString + &quot;&lt;/b&gt;&quot;; liString2 = liString]
		[h, if(type == &quot;H&quot;): hiString2 = &quot;&lt;b&gt;&quot; + hiString + &quot;&lt;/b&gt;&quot;; hiString2 = hiString]
		[h, if(type == &quot;E&quot;): enString2 = &quot;&lt;b&gt;&quot; + enString+ &quot;&lt;/b&gt;&quot;; enString2 = enString]
		
		[h, if(type == &quot;L&quot;): type2 = &quot;Li&quot;]
		[h, if(type == &quot;H&quot;): type2 = &quot;Hi&quot;]
		[h, if(type == &quot;E&quot;): type2 = &quot;En&quot;]
		
		[h, if(secondaryStunDamage &gt; 0): secondaryStunString = secondaryStunDamage + &quot;s&quot;; secondaryStunString = &quot;&quot;]
		[h, if(secondaryWoundDamage &gt; 0): secondaryWoundString = secondaryWoundDamage + &quot;w&quot;; secondaryWoundString = &quot;&quot;]
		
		[h: secondaryString = &quot;&quot;]
		[h, if(secondaryStunDamage != 0): secondaryString = listAppend(secondaryString,secondaryStunDamage + &quot;s&quot;,&quot;/&quot;)]
		[h, if(secondaryWoundDamage != 0): secondaryString = listAppend(secondaryString,secondaryWoundDamage + &quot;w&quot;,&quot;/&quot;)]
		[h, if(secondaryString != &quot;&quot;): secondaryString = replace(secondaryString,&quot; &quot;,&quot;&quot;) + &quot;/&quot;]
		
		[h: damageResult = &quot;&quot;]
		
		[h: damageTooltip = json.set(&quot;&quot;,
			mainHandName + &quot; damage (&lt;b&gt;&quot; + type2 + &quot;&lt;/b&gt;)&quot;,
			ordinaryString2 + &quot;/&quot; + goodString2 + &quot;/&quot; + amazingString2,
			&quot;Damage Roll&quot;,
			&quot;+&quot; + secondaryString + &quot;&lt;b&gt;&quot; + damageRoll + damageSuffix + &quot;&lt;/b&gt;&quot;,
			armorName + &quot; armor&quot;,
			liString2 + &quot;/&quot; + hiString2 + &quot;/&quot; + enString2,
			&quot;Armor Roll&quot;,
			&quot;&lt;b&gt;-&quot; + armorRoll + damageSuffix + &quot;&lt;/b&gt;&quot;
		)]
		
		[h: phaseOutput = json.set(&quot;&quot;,&quot;type&quot;,&quot;Ranged&quot;,&quot;selected&quot;,selected,&quot;initiative&quot;,initiative,&quot;stunDamage&quot;,stunDamage,&quot;woundDamage&quot;,woundDamage,&quot;mortalDamage&quot;,mortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp,&quot;stunReduced&quot;,stunReduced,&quot;woundReduced&quot;,woundReduced,&quot;mortalReduced&quot;,mortalReduced,&quot;damageRoll&quot;,damageRoll,&quot;damageDieQuantity&quot;,damageDieQuantity,&quot;damageDieSides&quot;,damageDieSides,&quot;damageDieSign&quot;,damageDieSign,&quot;damageDieModifier&quot;,damageDieModifier,&quot;damageType&quot;,damageType,&quot;armorName&quot;,armorName,&quot;armorRoll&quot;,armorRoll,&quot;armorDieQuantity&quot;,armorDieQuantity,&quot;armorDieSides&quot;,armorDieSides,&quot;armorModifierSign&quot;,armorModifierSign,&quot;armorDieModifier&quot;,armorDieModifier,&quot;secondaryStunDamage&quot;,secondaryStunDamage,&quot;secondaryWoundDamage&quot;,secondaryWoundDamage,&quot;damageTooltip&quot;,damageTooltip,&quot;mainHandName&quot;,mainHandName,&quot;successString&quot;,success)]
		
		[h: phaseActions = getLibProperty(&quot;Phase Actions&quot;,&quot;Lib:bw&quot;)]
		[h: phaseActions = json.append(phaseActions,phaseOutput)]
		[h: setLibProperty(&quot;Phase Actions&quot;,phaseActions,&quot;Lib:bw&quot;)]
		
	   
	};{}
	]
	
	[h, if (selectedMode == &quot;Automatic&quot;), code :
		{
		[h: shot0Text = &quot;Shot1: &lt;b&gt;Misses!&lt;/b&gt;&lt;br&gt;&quot;]
		[h: shot1Text = &quot;Shot2: &lt;b&gt;Misses!&lt;/b&gt;&lt;br&gt;&quot;]
		[h: shot2Text = &quot;Shot3: &lt;b&gt;Misses!&lt;/b&gt;&quot;]
		[h: shotObject = &quot;&quot;]
		[h, for(i,0,3), code :
			{
			
			[h: automaticFire()]
	
			}
		]
	
		[h: shotsArray = json.append(&quot;&quot;,shotObject0,shotObject1,shotObject2)]
			
		[h: phaseOutput = json.set(&quot;&quot;,&quot;type&quot;,&quot;Automatic&quot;,&quot;Shot Data&quot;,shotsArray)]
	
		[h: phaseActions = getLibProperty(&quot;Phase Actions&quot;,&quot;Lib:bw&quot;)]
		[h: phaseActions = json.append(phaseActions,phaseOutput)]
		[h: setLibProperty(&quot;Phase Actions&quot;,phaseActions,&quot;Lib:bw&quot;)]
		};{
		}
	]
	
	[h, if ((hit == &quot;false&quot;)&amp;&amp;(selectedMode != &quot;Automatic&quot;)), code :{
	
		[h: &quot;&lt;!-- If Miss and not automatic --&gt;&quot;]
		
		[h: &quot;&lt;!-- Get flank facing --&gt;&quot;]

		[h: flankingOutput = json.set(&quot;&quot;,&quot;target&quot;,selected,&quot;origin&quot;,initiative)]
		[h, macro(&quot;GetFlank@Lib:bw&quot;): flankingOutput]
		[h: flankingInput = macro.return]
		[h: angleOnTarget = json.get(flankingInput,&quot;angleOnTarget&quot;)]
		[h: originFace = json.get(flankingInput,&quot;originFace&quot;)]
		
		};{}
	]

	[h: &quot;&lt;!-- Turn initiative to face selected --&gt;&quot;]

	[h: setTokenFacing(originFace,initiative)]
	
	[h: &quot;&lt;!-- Spend Action if not Free Actions --&gt;&quot;]
	
	[h, if(! freeActions): initiativeActions = initiativeActions - 1]
	
	[h: setProperty(&quot;Actions&quot;,initiativeActions,initiative)]
	
	[h, if(dualActionModifier == 2): setProperty(&quot;Dual Action&quot;,4,initiative)]
	[h, if(dualActionModifier == 4): setProperty(&quot;Dual Action&quot;,2,initiative)]
	[h, if(dualActionModifier == 0): setProperty(&quot;Dual Action&quot;,0,initiative)]
	
	[h, if(lastAction): setProperty(&quot;Action Spent&quot;,1,initiative); setProperty(&quot;Action Spent&quot;,0,initiative)]
	
	[h: &quot;&lt;!-- Attack Chat Output --&gt;&quot;]
	
	[h: chatBox(&quot;Damage&quot;,outputText)]
	
	[h: setProperty(&quot;Disable Action&quot;,0,initiative)]</command>
                      <label>Attack Damage</label>
                      <group></group>
                      <sortby>2</sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>yellow</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>96</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>96</index>
                      <colorKey>red</colorKey>
                      <hotKey>None</hotKey>
                      <command>	[h: initiative = arg(0)]
	[h: selected = arg(1)]
	[h: vars = arg(2)]
	[h: varsFromStrProp(json.toStrProp(vars))]

	[h: profession = getProperty(&quot;Profession&quot;,selected)]
	[h: lastResorts = getProperty(&quot;Last Resorts&quot;,selected)]

	[h: selectedLastResortsChosen = 0]
	[h, if(initiativeLastResortsChosen == 0), code :
		{
		[h, if((lastResorts &gt; 0)&amp;&amp;(profession != &quot;Free Agent&quot;)&amp;&amp;(successNum != 0)), code :
			{
			[h: screen = input(&quot;selectedLastResortsChosen|No,Yes|Use a Last Resort? &quot;+lastResorts+&quot; remaining|radio|select = 1&quot;,
			&quot;junkVar|&quot;+success+&quot;|Current Success|LABEL&quot;)]
			[h, if(screen == 0): selectedLastResortsChosen = 0]
			};{
			[h: selectedLastResortsChosen = 0]
			}
		]

		[h, if((lastResorts &gt;= 2)&amp;&amp;(profession == &quot;Free Agent&quot;)&amp;&amp;(successNum &gt;= 2)), code :
			{
			[h: screen = input(&quot;selectedLastResortsChosen|No,Yes (1),Yes (2)|Use a Last Resort? &quot;+lastResorts+&quot; remaining|radio|select = 1&quot;,
			&quot;junkVar|&quot;+success+&quot;|Current Success|LABEL&quot;)]
			[h, if(screen == 0): selectedLastResortsChosen = 0]
			};{
			[h: selectedLastResortsChosen = 0]
			}
		]
		
		[h, if((lastResorts &gt;= 2)&amp;&amp;(profession == &quot;Free Agent&quot;)&amp;&amp;(successNum == 1)), code :
			{
			[h: screen = input(&quot;selectedLastResortsChosen|No,Yes|Use a Last Resort? &quot;+lastResorts+&quot; remaining|radio|select = 1&quot;,
			&quot;junkVar|&quot;+success+&quot;|Current Success|LABEL&quot;)]
			[h, if(screen == 0): selectedLastResortsChosen = 0]
			};{
			[h: selectedLastResortsChosen = 0]
			}
		]
		};{
		}
	]

	[h: successNum = successNum - selectedLastResortsChosen]
	
	[h, if (successNum == 0): success = &quot;Failure&quot;]
	[h, if (successNum == 1): success = &quot;Ordinary Success&quot;]
	[h, if (successNum == 2): success = &quot;Good Success&quot;]
	[h, if (successNum == 3): success = &quot;Amazing Success&quot;]
	
	[h: vars = json.fromStrProp(strPropFromVars(&quot;selectedMode,success,freeActions,ordinarySides,ordinaryQuantity,ordinarySign,ordinaryModifier,ordinaryType,ordinaryString,goodSides,goodQuantity,goodSign,goodModifier,goodType,goodString,amazingSides,amazingQuantity,amazingSign,amazingModifier,amazingType,amazingString,selectedChestJSON,initiativeActions,type,originFace,dualActionModifier,lastAction,successNum,initiativeLastResortsChosen,mainHandName,controlDieRoll,stepSymbol,selectedStrModifier,selectedDexModifier,rangeModifier,initiativeMovementModifier,flankModifier,modeModifier,coverModifier,proneSelectedModifier,proneInitiativeModifier,dualActionModifier,situationModifier,situationDieRoll,situationDieText,situationDieRoll,initiativeStr,weaponSkillRank,ordinarySuccess,goodSuccess,amazingSuccess,combinedRoll,skill,initiativeDex&quot;,&quot;UNSUFFIXED&quot;))]
	
	[h: initiativeOwner = getOwners(&quot;,&quot;,initiative)]
	[h: args = json.append(&quot;&quot;,initiative,selected,vars)]
	[h: link = macroLinkText(&quot;Attack Damage@lib:bw&quot;,&quot;none&quot;,args,initiative)]
	[h: autoExecute(link,initiativeOwner,&quot;Last Resort oppertunity&quot;)]</command>
                      <label>Last Resort Defender Prompt</label>
                      <group></group>
                      <sortby>1</sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>yellow</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>97</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>97</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: object = arg(0)]
[h, if(argCount() &gt; 1): message = arg(1); message = &quot;&quot;]
[h, if(argCount() &gt; 2): totalLabel = arg(2); totalLabel = &quot;&quot;]
[h, if(argCount() &gt; 3): footerObject = arg(3); footerObject = &quot;&quot;]

[h: tooltipHeader = &quot;&lt;html&gt;&lt;head&gt;&lt;style&gt;
	td {
		font-family: Verdana,sans-serif ;
	}
    td.field {
		text-align: left;
    }
    td.value {
		text-align: right;
    }
    tr.label {
		font-weight: bold;
		color: #333333;
		background: #CCCCFF;
    }
    tr.dc, tr.dcfail {
		font-weight: normal;
		font-size: 100%;
		color: #000000;
		background: #CCCCFF;
    }
    tr.dcFail {
		color: #660000;
		background: #CCCCCC;
    }
	tr.total {
		font-weight: bold;
	}
	&lt;/style&gt;&lt;/head&gt;&quot;]
	
[h: objectFields = json.fields(object)]
[h: total = 0]
[h: tooltipBody = &quot;&lt;body&gt;&lt;table&gt;&quot;]
[h, foreach(field, objectFields), code:
	{
	[h: value = json.get(object,field)]
	[h, if(isNumber(value) &amp;&amp; (totalLabel != &quot;&quot;)), code :
		{
		[h: total = total + value]
		[h, if(value &gt; 0): tooltipBody = tooltipBody + &quot;&lt;tr&gt;&lt;td class=&apos;field&apos;&gt;&quot; + field + &quot;:&lt;/td&gt;&lt;td class=&apos;value&apos; style=&apos;text-align: right;&apos;&gt;+&quot; + value + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;]
		[h, if(value &lt; 0): tooltipBody = tooltipBody + &quot;&lt;tr&gt;&lt;td class=&apos;field&apos;&gt;&quot; + field + &quot;:&lt;/td&gt;&lt;td class=&apos;value&apos; style=&apos;text-align: right;&apos;&gt;&quot; + value + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;]
		};{
		[h, if(indexOf(field,&quot;Result&quot;) != -1): tooltipBody = tooltipBody + &quot;&lt;tr class=&apos;label&apos;&gt;&lt;td class=&apos;field&apos;&gt;&quot; + field + &quot;:&lt;/td&gt;&lt;td class=&apos;value&apos; style=&apos;text-align: right;&apos;&gt;&quot; + value + &quot;&lt;/td&gt;&lt;/tr&gt;&quot; ; tooltipBody = tooltipBody + &quot;&lt;tr&gt;&lt;td class=&apos;field&apos;&gt;&quot; + field + &quot;:&lt;/td&gt;&lt;td class=&apos;value&apos; style=&apos;text-align: right;&apos;&gt;&quot; + value + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;]
		}
	]

	}
]
[h, if ((totalLabel != &quot;&quot;)&amp;&amp;(total &gt; 0)): tooltipBody = tooltipBody + &quot;&lt;tr class=&apos;total&apos;&gt;&lt;td class=&apos;field&apos;&gt;&quot;+totalLabel+&quot;:&lt;/td&gt;&lt;td class=&apos;value&apos;&gt;+&quot;+ total +&quot;&lt;/td&gt;&lt;/tr&gt;&quot;]
[h, if ((totalLabel != &quot;&quot;)&amp;&amp;(total &lt;= 0)): tooltipBody = tooltipBody + &quot;&lt;tr class=&apos;total&apos;&gt;&lt;td class=&apos;field&apos;&gt;&quot;+totalLabel+&quot;:&lt;/td&gt;&lt;td class=&apos;value&apos;&gt;&quot;+ total +&quot;&lt;/td&gt;&lt;/tr&gt;&quot;]

[h, if (! json.isEmpty(footerObject)), code :
	{
	[h, foreach(field, footerObject): tooltipBody = tooltipBody + &quot;&lt;tr class=&apos;label&apos;&gt;&lt;td class=&apos;field&apos;&gt;&quot; + field + &quot;:&lt;/td&gt;&lt;td class=&apos;value&apos; style=&apos;text-align: right;&apos;&gt;&quot; + json.get(footerObject,field) + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;]
	};{
	}
]

[h: tooltip = tooltipHeader + tooltipBody + &quot;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;&quot;]
[h, if(message == &quot;&quot;): message = &quot;Result&quot;]
[h: output = &apos;&lt;span style=&quot;background:#EEEEEE&quot; title=&quot;&apos; + tooltip + &apos;&quot;&gt;&apos; + message + &apos;&lt;/span&gt;&apos;]
[h: macro.return = output]</command>
                      <label>tooltipFromObject</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>98</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>98</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: chosenSkillName = arg(0)]
[h: modifier = arg(1)]
[h: playerTokenID = arg(2)]
[h: skillsDatabase = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]
[h: chosenSkillBroad = json.get(json.get(skillsDatabase,chosenSkillName), &quot;broad&quot;)]
[h: contains = listContains(&quot;Strength, Dexterity, Constitution, Intelligence, Willpower, Personality&quot;,chosenSkillBroad)]

[h, if(contains &gt; 0), code:{
	[h: chosenAttribute = chosenSkillBroad]
	};{
	[h: chosenAttribute = json.get(json.get(skillsDatabase,chosenSkillBroad), &quot;broad&quot;)]
	}
]

	[h: &apos;&lt;!-- Start of Skill Get --&gt;&apos;]

[h: knownSkills = getProperty(&quot;Skills&quot;,playerTokenID)]
[h: knownSkillData = json.get(knownSkills,chosenSkillName)]
[h: rank = json.get(knownSkillData ,&quot;Rank&quot;)]

	[h: &apos;&lt;!-- End of Skill Get --&gt;&apos;]
	
[h: attributeScore = getProperty(chosenAttribute,playerTokenID)]
[h: skillsDatabase = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]
[h: skillData = json.get(skillsDatabase,chosenSkillName)]

[h: skillBroad = json.get(skillData,&quot;broad&quot;)]
[h: skillIsBroad = listContains(&quot;Strength,Dexterity,Constitution,Intelligence,Willpower,Personality&quot;,skillBroad)]
[h, if(skillIsBroad): effectiveSkillRank = 0; effectiveSkillRank = rank]
[h, if(rank &lt; 1): effectiveAttributeScore = floor(attributeScore / 2); effectiveAttributeScore = attributeScore]
[h: ordinarySuccess = effectiveAttributeScore + effectiveSkillRank]
[h: goodSuccess = floor(ordinarySuccess / 2)]
[h: amazingSuccess = floor(goodSuccess / 2)]
[h: successString = ordinarySuccess + &quot;/&quot; + goodSuccess + &quot;/&quot; + amazingSuccess]
[h, if((skillIsBroad)&amp;&amp;(rank==1)): rankString = &quot;&lt;html&gt;&lt;b&gt;&lt;span&gt;Known Broad Skill&lt;/span&gt;&lt;/b&gt;&lt;/html&gt;&quot;)]
[h, if((skillIsBroad)&amp;&amp;(rank==0)): rankString = &quot;&lt;html&gt;&lt;b&gt;&lt;span style=&apos;color:blue&apos;&gt;Untrained Broad Skill&lt;/span&gt;&lt;/b&gt;&lt;/html&gt;&quot;)]
[h, if((! skillIsBroad)&amp;&amp;(rank &lt; 1)): rankString = &quot;&lt;html&gt;&lt;i&gt;&lt;span&gt;Untrained Specialist Skill&lt;/span&gt;&lt;/i&gt;&lt;/html&gt;&quot;)]
[h, if((! skillIsBroad)&amp;&amp;(rank &gt;= 1)): rankString = &quot;&lt;html&gt;&lt;b&gt;&lt;span&gt;&quot;+rank+&quot;&lt;/span&gt;&lt;/b&gt;&lt;/html&gt;&quot;]
[h, if(rank != 0):
attributeString = chosenAttribute + &quot; (&quot;+attributeScore+&quot;)&quot;;
attributeString = chosenAttribute + &quot; (&quot;+attributeScore+&quot;) [&quot;+effectiveAttributeScore+&quot;]&quot;]

[h: &quot;&lt;!-- Get combat spec situation bonus (if any) --&gt;&quot;]

[h: situationBonus = getPropVar(&quot;Situation Bonus&quot;, playerTokenID, &quot;&quot;)]
[h, if (situationBonus == chosenSkillName): situationModifier = json.get(json.get(getProperty(&quot;Skills&quot;,playerTokenID),situationBonus),&quot;Rank&quot;); situationModifier = 0]
[h, if (situationModifier &gt; 0): situationModifier = -1; situationModifier = 0]

[h: modifier = modifier + situationModifier]

[h: rollData = alternityRoll(modifier)]
[h: varsFromStrProp(json.toStrProp(rollData))]
[h: situationDieText = json.get(rollData,&quot;situationDieText&quot;)]

[h, if (combinedRoll &lt;= ordinarySuccess): success = &quot;Ordinary success&quot;]
[h, if (combinedRoll &lt;= goodSuccess): success = &quot;Good success&quot;]
[h, if (combinedRoll &lt;= amazingSuccess): success = &quot;Amazing success&quot;]
[h, if (combinedRoll &gt; ordinarySuccess): success = &quot;Failure&quot;]
[h, if (controlDieRoll == 20): success = &quot;Critical failure!&quot;]
[h, if (controlDieRoll == 1): success = &quot;Automatic success!&quot;]

[h: macro.return = success]</command>
                      <label>skillCheckBasic</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>99</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>99</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>
[h: options = getLibProperty(&quot;GM Settings&quot;,&quot;Lib:bw&quot;)]
[h: arg0 = arg(0)]
[h: output = &quot;invalidOutput&quot;]
[h, foreach (option,options), code:
	{
	[h: name = json.get(option,&quot;name&quot;)]
	[h: value = json.get(option,&quot;value&quot;)]
	[h, if(name == arg0): output = value]
	}
]

[h, if(output == &quot;invalidOutput&quot;): assert(0,&quot;Null returned by getGMSetting&quot;,1)]
[h: macro.return = output]</command>
                      <label>getGMSetting</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>100</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>100</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: skillName = arg(0)]
[h: playerTokenID = arg(1)]
[h: rank = json.get(json.get(getProperty(&quot;Skills&quot;,playerTokenID),skillName),&quot;Rank&quot;)]
[h: macro.return = rank]</command>
                      <label>getSkillRank</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>101</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>101</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: &apos;&lt;!-- Skill checks from character sheet --&gt;&apos;]

[h: input=macro.args]

[h, if(getInitiativeRound() == -1), code :
	{
	[h: inCombat = 0]
	};{
	[h: inCombat = 1]
	[h: tempVar1 = listContains(getInitiativeToken(),getOwned(getPlayerName()))]
	[h: tempVar2 = if(isGM() == 0 &amp;&amp; tempVar1 == 0,0,1)]
	[h: tempVar3 = getProperty(&quot;Action Spent&quot;,getInitiativeToken())]
	[h: assert(tempVar2,&quot;It is not your turn!&quot;,0)]
	[h, if(isGM() &amp;&amp; tempVar3 == 1), code :
		{
		[h: screen = input(&quot;confpick|No,Yes|The token has acted already this turn, perform anyway?|radio|select = 1&quot;)]
		[h: abort(screen)]
		[h: abort(confpick)]
		[h: tempVar3 = 0]
		};{
		}
	]
	[h, if(tempVar3 == 1): assert(0,&quot;You cannot act now!&quot;,0)]
	}
]

[h: chosenSkillName = listGet(input,0)]
[h: playerTokenID = listGet(input,1)]
[h: skillsDatabase = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]
[h: chosenSkillInfo = json.get(skillsDatabase,chosenSkillName)]
[h: chosenSkillBroad = json.get(chosenSkillInfo, &quot;broad&quot;)]
[h: contains = listContains(&quot;Strength, Dexterity, Constitution, Intelligence, Willpower, Personality&quot;,chosenSkillBroad)]

[h, if(contains &gt; 0), code:{
	[h: chosenAttribute = chosenSkillBroad]
	};{
	[h: chosenAttribute = json.get(json.get(skillsDatabase,chosenSkillBroad), &quot;broad&quot;)]
	}
]

	[h: &apos;&lt;!-- Start of Skill Get --&gt;&apos;]

[h: knownSkills = getProperty(&quot;Skills&quot;,playerTokenID)]
[h: knownSkillData = json.get(knownSkills,chosenSkillName)]
[h: rank = json.get(knownSkillData ,&quot;Rank&quot;)]

	[h: &apos;&lt;!-- End of Skill Get --&gt;&apos;]
	
[h: attributeScore = getProperty(chosenAttribute,playerTokenID)]
[h: skillsDatabase = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]
[h: skillData = json.get(skillsDatabase,chosenSkillName)]

[h: skillBroad = json.get(skillData,&quot;broad&quot;)]
[h: skillIsBroad = listContains(&quot;Strength,Dexterity,Constitution,Intelligence,Willpower,Personality&quot;,skillBroad)]
[h, if(skillIsBroad): effectiveSkillRank = 0; effectiveSkillRank = rank]
[h, if(rank &lt; 1): effectiveAttributeScore = floor(attributeScore / 2); effectiveAttributeScore = attributeScore]
[h: ordinarySuccess = effectiveAttributeScore + effectiveSkillRank]
[h: goodSuccess = floor(ordinarySuccess / 2)]
[h: amazingSuccess = floor(goodSuccess / 2)]
[h: successString = ordinarySuccess + &quot;/&quot; + goodSuccess + &quot;/&quot; + amazingSuccess]
[h, if((skillIsBroad)&amp;&amp;(rank==1)): rankString = &quot;&lt;html&gt;&lt;b&gt;&lt;span&gt;Known Broad Skill&lt;/span&gt;&lt;/b&gt;&lt;/html&gt;&quot;)]
[h, if((skillIsBroad)&amp;&amp;(rank==0)): rankString = &quot;&lt;html&gt;&lt;b&gt;&lt;span style=&apos;color:blue&apos;&gt;Untrained Broad Skill&lt;/span&gt;&lt;/b&gt;&lt;/html&gt;&quot;)]
[h, if((! skillIsBroad)&amp;&amp;(rank &lt; 1)): rankString = &quot;&lt;html&gt;&lt;i&gt;&lt;span&gt;Untrained Specialist Skill&lt;/span&gt;&lt;/i&gt;&lt;/html&gt;&quot;)]
[h, if((! skillIsBroad)&amp;&amp;(rank &gt;= 1)): rankString = &quot;&lt;html&gt;&lt;b&gt;&lt;span&gt;&quot;+rank+&quot;&lt;/span&gt;&lt;/b&gt;&lt;/html&gt;&quot;]
[h, if(rank != 0):
attributeString = chosenAttribute + &quot; (&quot;+attributeScore+&quot;)&quot;;
attributeString = chosenAttribute + &quot; (&quot;+attributeScore+&quot;) [&quot;+effectiveAttributeScore+&quot;]&quot;]

[h: dualActionModifier = getPropVar(&quot;Dual Action&quot;,playerTokenID,0)]

[h, if((dualActionModifier &gt; 0)&amp;&amp;(inCombat)), code :
	{
	[h: abort(input(&quot;junkVar|&lt;html&gt;&lt;span&gt;&quot;+chosenSkillName+&quot;&lt;/span&gt;&lt;/html&gt;|&lt;html&gt;&lt;span&gt;Skill&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;junkVar|&lt;html&gt;&lt;span&gt;&quot;+attributeString + &quot;&lt;/span&gt;&lt;/html&gt;|&lt;html&gt;&lt;span&gt;Controlling attribute (score)[effective]&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;junkVar|&quot;+rankString+&quot;|&lt;html&gt;&lt;span&gt;Rank&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;junkVar|&lt;html&gt;&lt;span&gt;&quot;+successString+&quot;&lt;/span&gt;&lt;/html&gt;|&lt;html&gt;&lt;span&gt;Success&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;modifier|0|&lt;html&gt;&lt;span&gt;Step Modifier&lt;/span&gt;&lt;/html&gt;&quot;,
		&quot;description|.|&lt;html&gt;&lt;span&gt;Description (optional)&lt;/span&gt;&lt;/html&gt;&quot;,
		&quot;junkVar|&lt;html&gt;&lt;b&gt;Second Action (+&quot;+dualActionModifier+&quot;)&lt;/b&gt;&lt;/html&gt;|&lt;html&gt;&lt;b&gt;Performing two actions at once&lt;/b&gt;&lt;/html&gt;|LABEL&quot;))
	]
	[h: secondAction = 1]
	};{
	[h: abort(input(&quot;junkVar|&lt;html&gt;&lt;span&gt;&quot;+chosenSkillName+&quot;&lt;/span&gt;&lt;/html&gt;|&lt;html&gt;&lt;span&gt;Skill&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;junkVar|&lt;html&gt;&lt;span&gt;&quot;+attributeString + &quot;&lt;/span&gt;&lt;/html&gt;|&lt;html&gt;&lt;span&gt;Controlling attribute (score)[effective]&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;junkVar|&quot;+rankString+&quot;|&lt;html&gt;&lt;span&gt;Rank&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;junkVar|&lt;html&gt;&lt;span&gt;&quot;+successString+&quot;&lt;/span&gt;&lt;/html&gt;|&lt;html&gt;&lt;span&gt;Success&lt;/span&gt;&lt;/html&gt;|LABEL&quot;,
		&quot;modifier|0|&lt;html&gt;&lt;span&gt;Step Modifier&lt;/span&gt;&lt;/html&gt;&quot;,
		&quot;description|.|&lt;html&gt;&lt;span&gt;Description (optional)&lt;/span&gt;&lt;/html&gt;&quot;,
		&quot;dualActionModifier|No, Primary (+2), Secondary (+4)|&lt;html&gt;&lt;span&gt;Perform two actions at once?&lt;/span&gt;&lt;/html&gt;|LIST&quot;))
	]
	[h: secondAction = 0]
	[h: dualActionModifier = dualActionModifier * 2]
	}
]

[h: &apos;&lt;!-- Get combat spec situation bonus (if any) --&gt;&apos;]

[h: situationBonus = getPropVar(&quot;Situation Bonus&quot;, playerTokenID, &quot;&quot;)]
[h, if (situationBonus == &quot;&quot;): situationModifier = 0; situationModifier = json.get(json.get(getProperty(&quot;Skills&quot;,playerTokenID),situationBonus),&quot;Rank&quot;)]
[h, if (situationModifier &gt; 0): situationModifier = -1]

[h: rollData = alternityRoll(modifier+dualActionModifier+situationModifier)]
[h: varsFromStrProp(json.toStrProp(rollData))]
[h: situationDieText = json.get(rollData,&quot;situationDieText&quot;)]

[h, if (combinedRoll &lt;= ordinarySuccess): success = &quot;Ordinary success&quot;]
[h, if (combinedRoll &lt;= goodSuccess): success = &quot;Good success&quot;]
[h, if (combinedRoll &lt;= amazingSuccess): success = &quot;Amazing success&quot;]
[h, if (combinedRoll &gt; ordinarySuccess): success = &quot;Failure&quot;]
[h, if (controlDieRoll == 20): success = &quot;Critical failure!&quot;]
[h, if (controlDieRoll == 1): success = &quot;Automatic success!&quot;]

[h, if ((description == &quot;&quot;)||(description == &quot; &quot;)||(description == &quot;.&quot;)): description = &quot;&quot;; description = description + &quot;&lt;br&gt;&quot;]

[h: output = description + &quot;&lt;i&gt;&quot; + getName(playerTokenID) + &quot;&lt;/i&gt; rolls against &quot;+chosenSkillName+&quot; at rank &quot;+effectiveSkillRank+&quot; with a target of &quot;+successString+&quot;&lt;br&gt;&quot;+controlDieRoll+&quot;[d20] &quot;+stepSymbol+&quot; &quot;+situationDieRoll+situationDieText+&quot; = &lt;b&gt;&quot;+combinedRoll+&quot;&lt;/b&gt; (&quot;+success+&quot;)&quot;]
[h: broadcast(output)]

[h, if(dualActionModifier == 2): setProperty(&quot;Dual Action&quot;,4,playerTokenID)]
[h, if(dualActionModifier == 4): setProperty(&quot;Dual Action&quot;,2,playerTokenID)]
[h, if((dualActionModifier == 0)||(secondAction)): setProperty(&quot;Dual Action&quot;,0,playerTokenID)]
[h, if((secondAction)&amp;&amp;(inCombat)): setProperty(&quot;Action Spent&quot;,1,playerTokenID)]
[h, if((dualActionModifier == 0)||(inCombat)):  setProperty(&quot;Action Spent&quot;,1,playerTokenID)]</command>
                      <label>skillCheckSpecific</label>
                      <group>User Defined Functions</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>teal</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>102</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>102</index>
                      <colorKey>fuchsia</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: input = macro.args]

	[h, if(input != &quot;&quot;), code :
		{
		[h: playerTokenID = input]
		[h: playerTokenName = getName(playerTokenID)]
		};{
		[h: playerTokenIDList = getOwned(getPlayerName())]
		[h: playerTokenNameList =&quot;&quot;]
		[h, foreach(tokenID,playerTokenIDList): playerTokenNameList = listAppend(playerTokenNameList,getName(tokenID))]

		[h: listLength = listCount(playerTokenNameList)]

		[h, if (listLength &gt; 1), code :{
			[h: abort(input(
			&quot;playerTokenName|&quot;+playerTokenNameList+&quot;|Choose which token is speaking to the trader|LIST|Select = 0 VALUE = STRING&quot;
			))]
			};{
			[h: playerTokenName = playerTokenNameList]
			}
		]

		[h: playerTokenID = findToken(playertokenName)]
		}
	]
	
	[h: output = json.set(&quot;&quot;,&quot;attributeButton&quot;,&quot;Strength&quot;,&quot;playerTokenName&quot;,playerTokenName,&quot;playerTokenID&quot;,playerTokenID,&quot;currentAttribute&quot;,&quot;&quot;)]

	[frame(&quot;Skills&quot;):
		{
		[r, macro(&quot;skillForm@Lib:bw&quot;): output]
		}
	]


</command>
                      <label>Add Skills</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>true</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>103</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>103</index>
                      <colorKey>yellow</colorKey>
                      <hotKey>None</hotKey>
                      <command>
[h, if(getInitiativeRound() == -1), code :
	{
	[h, if(! isGM()): assert(0,&quot;It is not your turn.&quot;,0)]
	[h, macro(&quot;nextRound@Lib:bw&quot;) : &quot;&quot;]
	};{
	[h, token(getInitiativeToken()): owner = json.contains(getOwners(),getPlayerName())]
	[h, if(! owner &amp;&amp; ! isGM()): assert(0,&quot;It is not your turn.&quot;,0)]
	}
]
[h: hasPassedPhase = 0]
[h: hasPassedRound = 0]
[h: initiativeIDList()]
[h: loop = 1]
[h: initiativeIndex = getCurrentInitiative()]
[h, while (loop == 1), code :
	{
	[h: initiativeTokenID = listGet(initiativeIDList,initiativeIndex)]
	[h: lastInPhase = lastInPhase()]
	[h, if (lastInPhase), code :
		{
		[h, macro(&quot;nextPhase@Lib:bw&quot;) : &quot;&quot;]
		[h: hasPassedPhase = 1]
		};{
		}
	]
	[h, if (initiativeIndex == initiativeSize() - 1), code :
		{
		[h, macro(&quot;nextRound@Lib:bw&quot;) : &quot;&quot;]
		[h: hasPassedRound = 1]
		[h: setCurrentInitiative(0)]
		[h: initiativeIndex = 0]
		[h: initiativeIDList()]
		};{
		[h: initiativeIndex = initiativeIndex + 1]
		}
	]
	[h: initiativeTokenID = listGet(initiativeIDList,initiativeIndex)]	
	
	[h: &apos;&lt;!-- Stun Recovery --&gt;&apos;]

	[h: roundsSinceStunned = getPropVar(&quot;Rounds Since Stunned&quot;,initiativeTokenID,-1)]
	[h: roundsSinceStunnedCheck = getPropVar(&quot;Rounds Since Stunned Check&quot;,initiativeTokenID,1)]
		
	[h, if(roundsSinceStunned != -1 &amp;&amp; roundsSinceStunnedCheck): roundsSinceStunned = roundsSinceStunned + 1]
	
	[h: name = getName(initiativeTokenID)]
	
	[h, if(roundsSinceStunned &gt;= 0 &amp;&amp; roundsSinceStunnedCheck), code :
		{
		[h: setProperty(&quot;Move&quot;, &quot;None: 0&quot;, initiativeTokenID)]
		[h: movementStrProp = getProperty(&quot;Movement&quot;, initiativeTokenID)]
		[h: newMovementStrProp = setStrProp(movementStrProp, &quot;declared&quot;, &quot;Walk&quot;)]
		[h: newMovementStrProp = setStrProp(movementStrProp, &quot;walk&quot;, 0)]
		[h: newMovementStrProp = setStrProp(movementStrProp, &quot;run&quot;, 0)]
		[h: newMovementStrProp = setStrProp(movementStrProp, &quot;sprint&quot;, 0)]
		[h: setProperty(&quot;Movement&quot;, newMovementStrProp, initiativeTokenID)]
		};{
		}
	]
	
	[h, token(initiativeTokenID): visible = getVisible()]
	[h, if(roundsSinceStunned &gt;= 0 &amp;&amp; roundsSinceStunned &lt; 2 &amp;&amp; roundsSinceStunnedCheck &amp;&amp; visible): broadcast (getName(initiativeTokenID) + &quot; cannot recover from stun this turn.&quot;)]
	
	[h, if(roundsSinceStunned &gt;= 2 &amp;&amp; roundsSinceStunnedCheck), code :
		{
		[h: physicalResolveSuccess = skillCheckBasic(&quot;Physical Resolve&quot;,0,initiativeTokenID)]
		[h, if(physicalResolveSuccess == &quot;Critical failure!&quot;): stunRestored = 0]
		[h, if(physicalResolveSuccess == &quot;Failure&quot;): stunRestored = 0]
		[h, if(physicalResolveSuccess == &quot;Ordinary success&quot;): stunRestored = 2]
		[h, if(physicalResolveSuccess == &quot;Good success&quot;): stunRestored = 4]
		[h, if(physicalResolveSuccess == &quot;Amazing success&quot;): stunRestored = 6]
		[h, if(physicalResolveSuccess == &quot;Automatic success!&quot;): stunRestored = 6]
		[h: maxStunHp = json.get(getProperty(&quot;Natural Statistics&quot;,initiativeTokenID),&quot;Stun&quot;)]
		[h: currentStunHp = getProperty(&quot;Stun&quot;,initiativeTokenID)]
		[h: newStunHp = min(currentStunHp + stunRestored, maxStunHp)]
		[h: setProperty(&quot;Stun&quot;,newStunHp,initiativeTokenID)]
		[h, if(physicalResolveSuccess == &quot;Ordinary success&quot;): roundsSinceStunned = -1]
		[h, if(physicalResolveSuccess == &quot;Good success&quot;): roundsSinceStunned = -1]
		[h, if(physicalResolveSuccess == &quot;Amazing success&quot;): roundsSinceStunned = -1]
		[h, if(physicalResolveSuccess == &quot;Automatic success!&quot;): roundsSinceStunned = -1]
		[h, if(stunRestored &gt; 0): broadcast(&quot;&lt;i&gt;&quot;+getName(initiativeTokenID)+&quot;&lt;/i&gt; passes a Physical Resolve check to restore &quot;+stunRestored+&quot; stun and regain conciousness.&quot;; broadcast(&quot;&lt;i&gt;&quot;+getName(initiativeTokenID)+&quot;&lt;/i&gt; fails a Physical Resolve check to regain conciousness and remains stunned.&quot;)]
		[h, if(stunRestored &gt; 0): setState(&quot;Unconcious (Stun)&quot;,0,initiativeTokenID)]
		};{
		}
	]
	
	[h: setProperty(&quot;Rounds Since Stunned Check&quot;,0,initiativeTokenID)]
	[h: setProperty(&quot;Rounds Since Stunned&quot;,roundsSinceStunned,initiativeTokenID)]
		
	[h: &apos;&lt;!-- End Stun Recovery --&gt;&apos;]
	
	[h: isIncapacitated = bitwiseor(getState(&quot;Dead&quot;,initiativeTokenID),getState(&quot;Unconcious (Wound)&quot;,initiativeTokenID),getState(&quot;Unconcious (Stun)&quot;,initiativeTokenID))]
	
	[h, if(! isIncapacitated &amp;&amp; roundsSinceStunned == -1): loop = 0]
	
	
	}
]

[h: setCurrentInitiative(initiativeIndex)]

[h: initiativeTokenID = getInitiativeToken()]

[h: isIncapacitated = bitwiseor(getState(&quot;Dead&quot;,initiativeTokenID),getState(&quot;Unconcious (Wound)&quot;,initiativeTokenID),getState(&quot;Unconcious (Stun)&quot;,initiativeTokenID))]

[h, if(hasPassedRound), code :
	{
	[h: broadcast(&quot;&lt;b&gt;&lt;u&gt;New Round&lt;/u&gt;&lt;/b&gt;&quot;)]
	};{
	[h, if(hasPassedPhase), code :
		{
		[h: broadcast(&quot;&lt;b&gt;&lt;u&gt;New Phase&lt;/u&gt;&lt;/b&gt;&quot;)]
		};{
		}
	]
	}
]

[h, token(getInitiativeToken()), if (getVisible()): broadcast (&quot;&lt;i&gt;&quot;+getName(getInitiativeToken()) + &quot;&lt;/i&gt; has received initiative.&quot;)]</command>
                      <label>Next Initiative</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>true</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                </macroPropertiesMap>
                <speechMap/>
              </net.rptools.maptool.model.Token>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBUDdjODpgTwAAACgBEA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.Token>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <beingImpersonated>false</beingImpersonated>
                <exposedAreaGUID>
                  <baGUID>wKgBT60W3zCGCQAAAIgADQ==</baGUID>
                </exposedAreaGUID>
                <imageAssetMap>
                  <entry>
                    <null/>
                    <net.rptools.lib.MD5Key>
                      <id>668c9f21bf83e6d8a3455783aad8e686</id>
                    </net.rptools.lib.MD5Key>
                  </entry>
                </imageAssetMap>
                <x>300</x>
                <y>200</y>
                <z>6</z>
                <anchorX>0</anchorX>
                <anchorY>0</anchorY>
                <sizeScale>1.0</sizeScale>
                <lastX>0</lastX>
                <lastY>0</lastY>
                <snapToScale>true</snapToScale>
                <width>256</width>
                <height>256</height>
                <isoWidth>0</isoWidth>
                <isoHeight>0</isoHeight>
                <scaleX>1.0</scaleX>
                <scaleY>1.0</scaleY>
                <sizeMap>
                  <entry>
                    <java-class>net.rptools.maptool.model.SquareGrid</java-class>
                    <net.rptools.maptool.model.GUID reference="../../../../../entry[3]/net.rptools.maptool.model.Token/sizeMap/entry/net.rptools.maptool.model.GUID"/>
                  </entry>
                </sizeMap>
                <snapToGrid>true</snapToGrid>
                <isVisible>true</isVisible>
                <visibleOnlyToOwner>false</visibleOnlyToOwner>
                <vblColorSensitivity>0</vblColorSensitivity>
                <alwaysVisibleTolerance>0</alwaysVisibleTolerance>
                <isAlwaysVisible>false</isAlwaysVisible>
                <name>Lib:Library</name>
                <ownerType>0</ownerType>
                <tokenShape>TOP_DOWN</tokenShape>
                <tokenType>NPC</tokenType>
                <layer>TOKEN</layer>
                <propertyType>Library</propertyType>
                <tokenOpacity>1.0</tokenOpacity>
                <terrainModifier>0.0</terrainModifier>
                <isFlippedX>false</isFlippedX>
                <isFlippedY>false</isFlippedY>
                <sightType>Normal</sightType>
                <hasSight>false</hasSight>
                <gmName>Item/Skill Databases</gmName>
                <state>
                  <entry>
                    <string>Other2</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Unconcious (Wound)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Other3</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Incapacitated</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Dead</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Unconcious (Stun)</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Other4</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Prone</string>
                    <boolean>false</boolean>
                  </entry>
                  <entry>
                    <string>Hidden</string>
                    <boolean>false</boolean>
                  </entry>
                </state>
                <propertyMapCI>
                  <store>
                    <entry>
                      <string></string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key></key>
                        <value class="string">{&quot;Test&quot;:{&quot;&quot;:&quot;&quot;,&quot;goodString&quot;:&quot;4d5-6w&quot;,&quot;firepower&quot;:0,&quot;range&quot;:0,&quot;ordinaryModifier&quot;:3,&quot;type&quot;:0,&quot;mode&quot;:0,&quot;mass&quot;:0,&quot;hide&quot;:0,&quot;name&quot;:&quot;Test&quot;,&quot;goodSign&quot;:&quot;-&quot;,&quot;amazingSides&quot;:5,&quot;ordinaryString&quot;:&quot;1d2+3s&quot;,&quot;avail&quot;:0,&quot;goodModifier&quot;:6,&quot;amazingSign&quot;:&quot;-&quot;,&quot;amazingQuantity&quot;:4,&quot;cost&quot;:0,&quot;ordinarySides&quot;:2,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:0,&quot;skill&quot;:0,&quot;goodQuantity&quot;:4,&quot;goodSides&quot;:5,&quot;accuracy&quot;:0,&quot;actions&quot;:0,&quot;amazingString&quot;:&quot;4d5-6w&quot;,&quot;amazingModifier&quot;:6,&quot;clipcost&quot;:0}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>natural statistics</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Natural Statistics</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>racestatstics</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>raceStatstics</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>constitution</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Constitution</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rpe.macrogroups</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>rpe.macroGroups</key>
                        <value class="string">{&quot; &quot;:&quot;16, 1, 3&quot;,&quot;Item Management&quot;:&quot;11, 7, 9, 5, 13, 15, 12, 8, 10, 6&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>strength</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Strength</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>{&quot;test&quot;:{&quot;&quot;:&quot;&quot;,&quot;range&quot;:0,&quot;firepower&quot;:0,&quot;damage&quot;:0,&quot;avail&quot;:0,&quot;type&quot;:0,&quot;cost&quot;:0,&quot;mode&quot;:0,&quot;mass&quot;:0,&quot;clipsize&quot;:0,&quot;skill&quot;:0,&quot;hide&quot;:0,&quot;name&quot;:&quot;test&quot;,&quot;accuracy&quot;:0,&quot;actions&quot;:0,&quot;clipcost&quot;:0},&quot;shortbow&quot;:{&quot;&quot;:&quot;&quot;,&quot;range&quot;:&quot;20/40/100&quot;,&quot;firepower&quot;:&quot;o&quot;,&quot;damage&quot;:&quot;d4w/d4+2w/d4+3w&quot;,&quot;avail&quot;:&quot;com&quot;,&quot;type&quot;:&quot;li&quot;,&quot;cost&quot;:100,&quot;mode&quot;:&quot;f&quot;,&quot;mass&quot;:1,&quot;clipsize&quot;:10,&quot;skill&quot;:&quot;bow&quot;,&quot;hide&quot;:0,&quot;name&quot;:&quot;shortbow&quot;,&quot;accuracy&quot;:1,&quot;actions&quot;:3,&quot;clipcost&quot;:10}}</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>{&quot;Test&quot;:{&quot;&quot;:&quot;&quot;,&quot;range&quot;:0,&quot;firepower&quot;:0,&quot;damage&quot;:0,&quot;avail&quot;:0,&quot;type&quot;:0,&quot;cost&quot;:0,&quot;mode&quot;:0,&quot;mass&quot;:0,&quot;clipsize&quot;:0,&quot;skill&quot;:0,&quot;hide&quot;:0,&quot;name&quot;:&quot;Test&quot;,&quot;accuracy&quot;:0,&quot;actions&quot;:0,&quot;clipcost&quot;:0},&quot;Shortbow&quot;:{&quot;&quot;:&quot;&quot;,&quot;range&quot;:&quot;20/40/100&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;damage&quot;:&quot;d4w/d4+2w/d4+3w&quot;,&quot;avail&quot;:&quot;Com&quot;,&quot;type&quot;:&quot;Li&quot;,&quot;cost&quot;:100,&quot;mode&quot;:&quot;F&quot;,&quot;mass&quot;:1,&quot;clipsize&quot;:10,&quot;skill&quot;:&quot;Bow&quot;,&quot;hide&quot;:0,&quot;name&quot;:&quot;Shortbow&quot;,&quot;accuracy&quot;:1,&quot;actions&quot;:3,&quot;clipcost&quot;:10}}</key>
                        <value class="string">{&quot;Test&quot;:{&quot;&quot;:&quot;&quot;,&quot;goodString&quot;:&quot;4d5-6w&quot;,&quot;firepower&quot;:0,&quot;range&quot;:0,&quot;ordinaryModifier&quot;:3,&quot;type&quot;:0,&quot;mode&quot;:0,&quot;mass&quot;:0,&quot;hide&quot;:0,&quot;name&quot;:&quot;Test&quot;,&quot;goodSign&quot;:&quot;-&quot;,&quot;amazingSides&quot;:5,&quot;ordinaryString&quot;:&quot;1d2+3s&quot;,&quot;avail&quot;:0,&quot;goodModifier&quot;:6,&quot;amazingSign&quot;:&quot;-&quot;,&quot;amazingQuantity&quot;:4,&quot;cost&quot;:0,&quot;ordinarySides&quot;:2,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:0,&quot;skill&quot;:0,&quot;goodQuantity&quot;:4,&quot;goodSides&quot;:5,&quot;accuracy&quot;:0,&quot;actions&quot;:0,&quot;amazingString&quot;:&quot;4d5-6w&quot;,&quot;amazingModifier&quot;:6,&quot;clipcost&quot;:0},&quot;Shortbow&quot;:{&quot;&quot;:&quot;&quot;,&quot;range&quot;:&quot;20/40/100&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;damage&quot;:&quot;d4w/d4+2w/d4+3w&quot;,&quot;avail&quot;:&quot;Com&quot;,&quot;type&quot;:&quot;Li&quot;,&quot;cost&quot;:100,&quot;mode&quot;:&quot;F&quot;,&quot;mass&quot;:1,&quot;clipsize&quot;:10,&quot;skill&quot;:&quot;Bow&quot;,&quot;hide&quot;:0,&quot;name&quot;:&quot;Shortbow&quot;,&quot;accuracy&quot;:1,&quot;actions&quot;:3,&quot;clipcost&quot;:10}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>willpower</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Willpower</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skillslist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>SkillsList</key>
                        <value class="string">{&quot;skillListStrength&quot;:&quot;Armor Operation, Athletics, Heavy Weapons, Melee Weapons, Unarmed Attack&quot;,&quot;skillListDexterity&quot;:&quot;Acrobatics, Maniuplation, Ranged Weapons Modern, Ranged Weapons Primitive, Stealth, Vehicle Operation&quot;,&quot;skillListConstitution&quot;:&quot;Movement, Stamina, Survival&quot;,&quot;skillListIntelligence&quot;:&quot;Business, Computer Science, Demolitions, Knowledge, Law, Life Science, Medical Science, Navigation, Physical Science, Security, System Operation, Tactics, Invention&quot;,&quot;skillListWillpower&quot;:&quot;Administration, Animal Handling, Awareness, Creativity, Investigate, Resolve, Street Smart, Teach&quot;,&quot;skillListPersonality&quot;:&quot;Culture, Deception, Entertainment, Interaction, Leadership&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>personalitylist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>personalityList</key>
                        <value class="string">[&quot;Culture&quot;,&quot;Diplomacy&quot;,&quot;Etiquette&quot;,&quot;First Encounter&quot;,&quot;Deception&quot;,&quot;Bluff&quot;,&quot;Bribe&quot;,&quot;Gamble&quot;,&quot;Entertainment&quot;,&quot;Act&quot;,&quot;Dance&quot;,&quot;Musical Instrument&quot;,&quot;Sing&quot;,&quot;Interaction&quot;,&quot;Bargain&quot;,&quot;Charm&quot;,&quot;Interview&quot;,&quot;Intimidate&quot;,&quot;Seduce&quot;,&quot;Taunt&quot;,&quot;Leadership&quot;,&quot;Command&quot;,&quot;Inspire&quot;]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>intelligencelist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>intelligenceList</key>
                        <value class="string">[&quot;Business&quot;,&quot;Corporate&quot;,&quot;Illicit Business&quot;,&quot;Small Business&quot;,&quot;Computer Science&quot;,&quot;Hacking&quot;,&quot;Hardware&quot;,&quot;Programming&quot;,&quot;Demolitions&quot;,&quot;Disarm&quot;,&quot;Scratch Built&quot;,&quot;Set Explosives&quot;,&quot;Knowledge&quot;,&quot;Computer Operation&quot;,&quot;Deduce&quot;,&quot;First Aid&quot;,&quot;Law&quot;,&quot;Court Procedures&quot;,&quot;Law Enforcement&quot;,&quot;Life Science&quot;,&quot;Biology&quot;,&quot;Botany&quot;,&quot;Genetics&quot;,&quot;Xenology&quot;,&quot;Zoology&quot;,&quot;Medical Science&quot;,&quot;Forensics&quot;,&quot;Medical Knowledge&quot;,&quot;Psychology&quot;,&quot;Surgery&quot;,&quot;Treatment&quot;,&quot;Navigation&quot;,&quot;Astrogation Drivespace&quot;,&quot;Astrogation System&quot;,&quot;Navigation Surface&quot;,&quot;Physical Science&quot;,&quot;Astronomy&quot;,&quot;Chemistry&quot;,&quot;Physics&quot;,&quot;Planetology&quot;,&quot;Security&quot;,&quot;Protection Protocols&quot;,&quot;Security Devices&quot;,&quot;System Operation&quot;,&quot;Communications&quot;,&quot;Defenses&quot;,&quot;Engineering&quot;,&quot;Sensors&quot;,&quot;Weapons&quot;,&quot;Tactics&quot;,&quot;Infantry Tactics&quot;,&quot;Space Tactics&quot;,&quot;Vehicle Tactics&quot;,&quot;Technical Science&quot;,&quot;Invention&quot;,&quot;Juryrig&quot;,&quot;Repair&quot;,&quot;Technical Knowledge&quot;]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>stun</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Stun</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skills</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Skills</key>
                        <value class="string">{&quot;Armor Operation&quot;:{&quot;name&quot;:&quot;Armor Operation&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Strength&quot;},&quot;Combat Armor&quot;:{&quot;name&quot;:&quot;Combat Armor&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Armor Operation&quot;},&quot;Powered Armor&quot;:{&quot;name&quot;:&quot;Powered Armor&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Armor Operation&quot;},&quot;Athletics&quot;:{&quot;name&quot;:&quot;Athletics&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Strength&quot;},&quot;Climb&quot;:{&quot;name&quot;:&quot;Climb&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Athletics&quot;},&quot;Jump&quot;:{&quot;name&quot;:&quot;Jump&quot;,&quot;cost&quot;:1,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Athletics&quot;},&quot;Throw&quot;:{&quot;name&quot;:&quot;Throw&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Athletics&quot;},&quot;Heavy Weapons&quot;:{&quot;name&quot;:&quot;Heavy Weapons&quot;,&quot;cost&quot;:6,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Strength&quot;},&quot;Direct Fire&quot;:{&quot;name&quot;:&quot;Direct Fire&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Heavy Weapons&quot;},&quot;Indirect Fire&quot;:{&quot;name&quot;:&quot;Indirect Fire&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Heavy Weapons&quot;},&quot;Melee Weapons&quot;:{&quot;name&quot;:&quot;Melee Weapons&quot;,&quot;cost&quot;:6,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Strength&quot;},&quot;Blade&quot;:{&quot;name&quot;:&quot;Blade&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Melee Weapons&quot;},&quot;Bludgeon&quot;:{&quot;name&quot;:&quot;Bludgeon&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Melee Weapons&quot;},&quot;Powered Weapon&quot;:{&quot;name&quot;:&quot;Powered Weapon&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Melee Weapons&quot;},&quot;Unarmed Attack&quot;:{&quot;name&quot;:&quot;Unarmed Attack&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Strength&quot;},&quot;Brawl&quot;:{&quot;name&quot;:&quot;Brawl&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Unarmed Attack&quot;},&quot;Power Martial Arts&quot;:{&quot;name&quot;:&quot;Power Martial Arts&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Unarmed Attack&quot;},&quot;Acrobatics&quot;:{&quot;name&quot;:&quot;Acrobatics&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Dexterity&quot;},&quot;Daredevil&quot;:{&quot;name&quot;:&quot;Daredevil&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Acrobatics&quot;},&quot;Defensive Martial Arts&quot;:{&quot;name&quot;:&quot;Defensive Martial Arts&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Acrobatics&quot;},&quot;Dodge&quot;:{&quot;name&quot;:&quot;Dodge&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Acrobatics&quot;},&quot;Fall&quot;:{&quot;name&quot;:&quot;Fall&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Acrobatics&quot;},&quot;Flight&quot;:{&quot;name&quot;:&quot;Flight&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Acrobatics&quot;},&quot;ZeroG Training&quot;:{&quot;name&quot;:&quot;ZeroG Training&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;CT&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Acrobatics&quot;},&quot;Manipulation&quot;:{&quot;name&quot;:&quot;Manipulation&quot;,&quot;cost&quot;:6,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Dexterity&quot;},&quot;Lockpick&quot;:{&quot;name&quot;:&quot;Lockpick&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Manipulation&quot;},&quot;Pickpocket&quot;:{&quot;name&quot;:&quot;Pickpocket&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Manipulation&quot;},&quot;Prestidigitation&quot;:{&quot;name&quot;:&quot;Prestidigitation&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Manipulation&quot;},&quot;Ranged Weapons Modern&quot;:{&quot;name&quot;:&quot;Ranged Weapons Modern&quot;,&quot;cost&quot;:6,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Dexterity&quot;},&quot;Pistol&quot;:{&quot;name&quot;:&quot;Pistol&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Ranged Weapons Modern&quot;},&quot;Rifle&quot;:{&quot;name&quot;:&quot;Rifle&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Ranged Weapons Modern&quot;},&quot;SMG&quot;:{&quot;name&quot;:&quot;SMG&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Ranged Weapons Modern&quot;},&quot;Ranged Weapons Primitive&quot;:{&quot;name&quot;:&quot;Ranged Weapons Primitive&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Dexterity&quot;},&quot;Bow&quot;:{&quot;name&quot;:&quot;Bow&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Ranged Weapons Primitive&quot;},&quot;Crossbow&quot;:{&quot;name&quot;:&quot;Crossbow&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Ranged Weapons Primitive&quot;},&quot;Flintlock&quot;:{&quot;name&quot;:&quot;Flintlock&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Ranged Weapons Primitive&quot;},&quot;Sling&quot;:{&quot;name&quot;:&quot;Sling&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Ranged Weapons Primitive&quot;},&quot;Stealth&quot;:{&quot;name&quot;:&quot;Stealth&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Dexterity&quot;},&quot;Hide&quot;:{&quot;name&quot;:&quot;Hide&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Stealth&quot;},&quot;Shadow&quot;:{&quot;name&quot;:&quot;Shadow&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Stealth&quot;},&quot;Sneak&quot;:{&quot;name&quot;:&quot;Sneak&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Stealth&quot;},&quot;Vehicle Operation&quot;:{&quot;name&quot;:&quot;Vehicle Operation&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Dexterity&quot;},&quot;Air Vehicle&quot;:{&quot;name&quot;:&quot;Air Vehicle&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Vehicle Operation&quot;},&quot;Land Vehicle&quot;:{&quot;name&quot;:&quot;Land Vehicle&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Vehicle Operation&quot;},&quot;Space Vehicle&quot;:{&quot;name&quot;:&quot;Space Vehicle&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Vehicle Operation&quot;},&quot;Water Vehicle&quot;:{&quot;name&quot;:&quot;Water Vehicle&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Vehicle Operation&quot;},&quot;Movement&quot;:{&quot;name&quot;:&quot;Movement&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Constitution&quot;},&quot;Race&quot;:{&quot;name&quot;:&quot;Race&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Movement&quot;},&quot;Swim&quot;:{&quot;name&quot;:&quot;Swim&quot;,&quot;cost&quot;:1,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Movement&quot;},&quot;Trailblazing&quot;:{&quot;name&quot;:&quot;Trailblazing&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Movement&quot;},&quot;Stamina&quot;:{&quot;name&quot;:&quot;Stamina&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Constitution&quot;},&quot;Endurance&quot;:{&quot;name&quot;:&quot;Endurance&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Stamina&quot;},&quot;Resist Pain&quot;:{&quot;name&quot;:&quot;Resist Pain&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Stamina&quot;},&quot;Survival&quot;:{&quot;name&quot;:&quot;Survival&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Constitution&quot;},&quot;Survival Training&quot;:{&quot;name&quot;:&quot;Survival Training&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Survival&quot;},&quot;Business&quot;:{&quot;name&quot;:&quot;Business&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Corporate&quot;:{&quot;name&quot;:&quot;Corporate&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Business&quot;},&quot;Illicit Business&quot;:{&quot;name&quot;:&quot;Illicit Business&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Business&quot;},&quot;Small Business&quot;:{&quot;name&quot;:&quot;Small Business&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Business&quot;},&quot;Computer Science&quot;:{&quot;name&quot;:&quot;Computer Science&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Hacking&quot;:{&quot;name&quot;:&quot;Hacking&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Computer Science&quot;},&quot;Hardware&quot;:{&quot;name&quot;:&quot;Hardware&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Computer Science&quot;},&quot;Programming&quot;:{&quot;name&quot;:&quot;Programming&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Computer Science&quot;},&quot;Demolitions&quot;:{&quot;name&quot;:&quot;Demolitions&quot;,&quot;cost&quot;:6,&quot;profession&quot;:&quot;CT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Disarm&quot;:{&quot;name&quot;:&quot;Disarm&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Demolitions&quot;},&quot;Scratch Built&quot;:{&quot;name&quot;:&quot;Scratch Built&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Demolitions&quot;},&quot;Set Explosives&quot;:{&quot;name&quot;:&quot;Set Explosives&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;CT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Demolitions&quot;},&quot;Knowledge&quot;:{&quot;name&quot;:&quot;Knowledge&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Computer Operation&quot;:{&quot;name&quot;:&quot;Computer Operation&quot;,&quot;cost&quot;:1,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Knowledge&quot;},&quot;Deduce&quot;:{&quot;name&quot;:&quot;Deduce&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Knowledge&quot;},&quot;First Aid&quot;:{&quot;name&quot;:&quot;First Aid&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Knowledge&quot;},&quot;Law&quot;:{&quot;name&quot;:&quot;Law&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Court Procedures&quot;:{&quot;name&quot;:&quot;Court Procedures&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Law&quot;},&quot;Law Enforcement&quot;:{&quot;name&quot;:&quot;Law Enforcement&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Law&quot;},&quot;Life Science&quot;:{&quot;name&quot;:&quot;Life Science&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Biology&quot;:{&quot;name&quot;:&quot;Biology&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Life Science&quot;},&quot;Botany&quot;:{&quot;name&quot;:&quot;Botany&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Life Science&quot;},&quot;Genetics&quot;:{&quot;name&quot;:&quot;Genetics&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Life Science&quot;},&quot;Xenology&quot;:{&quot;name&quot;:&quot;Xenology&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Life Science&quot;},&quot;Zoology&quot;:{&quot;name&quot;:&quot;Zoology&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Life Science&quot;},&quot;Medical Science&quot;:{&quot;name&quot;:&quot;Medical Science&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Forensics&quot;:{&quot;name&quot;:&quot;Forensics&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Medical Sicence&quot;},&quot;Medical Knowledge&quot;:{&quot;name&quot;:&quot;Medical Knowledge&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Medical Sicence&quot;},&quot;Psychology&quot;:{&quot;name&quot;:&quot;Psychology&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Medical Sicence&quot;},&quot;Surgery&quot;:{&quot;name&quot;:&quot;Surgery&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Medical Sicence&quot;},&quot;Treatment&quot;:{&quot;name&quot;:&quot;Treatment&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Medical Sicence&quot;},&quot;Navigation&quot;:{&quot;name&quot;:&quot;Navigation&quot;,&quot;cost&quot;:6,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Astrogation Drivespace&quot;:{&quot;name&quot;:&quot;Astrogation Drivespace&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Navigation&quot;},&quot;Astrogation System&quot;:{&quot;name&quot;:&quot;Astrogation System&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Navigation&quot;},&quot;Navigation Surface&quot;:{&quot;name&quot;:&quot;Navigation Surface&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Navigation&quot;},&quot;Physical Science&quot;:{&quot;name&quot;:&quot;Physical Science&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Astronomy&quot;:{&quot;name&quot;:&quot;Astronomy&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Physical Science&quot;},&quot;Chemistry&quot;:{&quot;name&quot;:&quot;Chemistry&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Physical Science&quot;},&quot;Physics&quot;:{&quot;name&quot;:&quot;Physics&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Physical Science&quot;},&quot;Planetology&quot;:{&quot;name&quot;:&quot;Planetology&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Physical Science&quot;},&quot;Security&quot;:{&quot;name&quot;:&quot;Security&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Protection Protocols&quot;:{&quot;name&quot;:&quot;Protection Protocols&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;CF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Security&quot;},&quot;Security Devices&quot;:{&quot;name&quot;:&quot;Security Devices&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;FT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Security&quot;},&quot;System Operation&quot;:{&quot;name&quot;:&quot;System Operation&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Communications&quot;:{&quot;name&quot;:&quot;Communications&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;System Operation&quot;},&quot;Defenses&quot;:{&quot;name&quot;:&quot;Defenses&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;CT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;System Operation&quot;},&quot;Engineering&quot;:{&quot;name&quot;:&quot;Engineering&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;System Operation&quot;},&quot;Sensors&quot;:{&quot;name&quot;:&quot;Sensors&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;FT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;System Operation&quot;},&quot;Weapons&quot;:{&quot;name&quot;:&quot;Weapons&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;CT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;System Operation&quot;},&quot;Tactics&quot;:{&quot;name&quot;:&quot;Tactics&quot;,&quot;cost&quot;:6,&quot;profession&quot;:&quot;CT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Infantry Tactics&quot;:{&quot;name&quot;:&quot;Infantry Tactics&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Tactics&quot;},&quot;Space Tactics&quot;:{&quot;name&quot;:&quot;Space Tactics&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Tactics&quot;},&quot;Vehicle Tactics&quot;:{&quot;name&quot;:&quot;Vehicle Tactics&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;CT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Tactics&quot;},&quot;Technical Science&quot;:{&quot;name&quot;:&quot;Technical Science&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Tactics&quot;},&quot;Invention&quot;:{&quot;name&quot;:&quot;Invention&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Intelligence&quot;},&quot;Juryrig&quot;:{&quot;name&quot;:&quot;Juryrig&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Technical Science&quot;},&quot;Repair&quot;:{&quot;name&quot;:&quot;Repair&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Technical Science&quot;},&quot;Technical Knowledge&quot;:{&quot;name&quot;:&quot;Technical Knowledge&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;T&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Technical Science&quot;},&quot;Administration&quot;:{&quot;name&quot;:&quot;Administration&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Bureaucracy&quot;:{&quot;name&quot;:&quot;Bureaucracy&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Administration&quot;},&quot;Management&quot;:{&quot;name&quot;:&quot;Management&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Administration&quot;},&quot;Animal Handling&quot;:{&quot;name&quot;:&quot;Animal Handling&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Animal Riding&quot;:{&quot;name&quot;:&quot;Animal Riding&quot;,&quot;cost&quot;:1,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Animal Handling&quot;},&quot;Animal Training&quot;:{&quot;name&quot;:&quot;Animal Training&quot;,&quot;cost&quot;:1,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Animal Handling&quot;},&quot;Awareness&quot;:{&quot;name&quot;:&quot;Awareness&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Intuition&quot;:{&quot;name&quot;:&quot;Intuition&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Awareness&quot;},&quot;Perception&quot;:{&quot;name&quot;:&quot;Perception&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Awareness&quot;},&quot;Creativity&quot;:{&quot;name&quot;:&quot;Creativity&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Investigate&quot;:{&quot;name&quot;:&quot;Investigate&quot;,&quot;cost&quot;:7,&quot;profession&quot;:&quot;FT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Interrogate&quot;:{&quot;name&quot;:&quot;Interrogate&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;cf&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Investigate&quot;},&quot;Search&quot;:{&quot;name&quot;:&quot;Search&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;FT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Investigate&quot;},&quot;Track&quot;:{&quot;name&quot;:&quot;Track&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Investigate&quot;},&quot;Resolve&quot;:{&quot;name&quot;:&quot;Resolve&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Mental Resolve&quot;:{&quot;name&quot;:&quot;Mental Resolve&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Resolve&quot;},&quot;Physical Resolve&quot;:{&quot;name&quot;:&quot;Physical Resolve&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Resolve&quot;},&quot;Street Smart&quot;:{&quot;name&quot;:&quot;Street Smart&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Criminal Elements&quot;:{&quot;name&quot;:&quot;Criminal Elements&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Street Smart&quot;},&quot;Street Knowledge&quot;:{&quot;name&quot;:&quot;Street Knowledge&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;F&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Street Smart&quot;},&quot;Teach&quot;:{&quot;name&quot;:&quot;Teach&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;DT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Willpower&quot;},&quot;Culture&quot;:{&quot;name&quot;:&quot;Culture&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Personality&quot;},&quot;Diplomacy&quot;:{&quot;name&quot;:&quot;Diplomacy&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Culture&quot;},&quot;Etiquette&quot;:{&quot;name&quot;:&quot;Etiquette&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Culture&quot;},&quot;First Encounter&quot;:{&quot;name&quot;:&quot;First Encounter&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;D&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Culture&quot;},&quot;Deception&quot;:{&quot;name&quot;:&quot;Deception&quot;,&quot;cost&quot;:5,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Personality&quot;},&quot;Bluff&quot;:{&quot;name&quot;:&quot;Bluff&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Deception&quot;},&quot;Bribe&quot;:{&quot;name&quot;:&quot;Bribe&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Deception&quot;},&quot;Gamble&quot;:{&quot;name&quot;:&quot;Gamble&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Deception&quot;},&quot;Entertainment&quot;:{&quot;name&quot;:&quot;Entertainment&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Personality&quot;},&quot;Act&quot;:{&quot;name&quot;:&quot;Act&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Entertainment&quot;},&quot;Dance&quot;:{&quot;name&quot;:&quot;Dance&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Entertainment&quot;},&quot;Musical Instrument&quot;:{&quot;name&quot;:&quot;Musical Instrument&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Entertainment&quot;},&quot;Sing&quot;:{&quot;name&quot;:&quot;Sing&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Entertainment&quot;},&quot;Interaction&quot;:{&quot;name&quot;:&quot;Interaction&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Personality&quot;},&quot;Bargain&quot;:{&quot;name&quot;:&quot;Bargain&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DT&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Interaction&quot;},&quot;Charm&quot;:{&quot;name&quot;:&quot;Charm&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Interaction&quot;},&quot;Interview&quot;:{&quot;name&quot;:&quot;Interview&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Interaction&quot;},&quot;Intimidate&quot;:{&quot;name&quot;:&quot;Intimidate&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;C&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Interaction&quot;},&quot;Seduce&quot;:{&quot;name&quot;:&quot;Seduce&quot;,&quot;cost&quot;:3,&quot;profession&quot;:&quot;DF&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Interaction&quot;},&quot;Taunt&quot;:{&quot;name&quot;:&quot;Taunt&quot;,&quot;cost&quot;:2,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Interaction&quot;},&quot;Leadership&quot;:{&quot;name&quot;:&quot;Leadership&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Personality&quot;},&quot;Command&quot;:{&quot;name&quot;:&quot;Command&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;CD&quot;,&quot;untrained&quot;:&quot;Yes&quot;,&quot;broad&quot;:&quot;Leadership&quot;},&quot;Inspire&quot;:{&quot;name&quot;:&quot;Inspire&quot;,&quot;cost&quot;:4,&quot;profession&quot;:&quot;CD&quot;,&quot;untrained&quot;:&quot;No&quot;,&quot;broad&quot;:&quot;Leadership&quot;}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>phase actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Phase Actions</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>weapon</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Weapon</key>
                        <value class="string">{&quot;Pistol .38 Revolver&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;1d4+1w&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;ordinaryModifier&quot;:0,&quot;mediumRange&quot;:12,&quot;type&quot;:&quot;H&quot;,&quot;shortRange&quot;:6,&quot;mode&quot;:&quot;F&quot;,&quot;mass&quot;:1,&quot;hide&quot;:2,&quot;description&quot;:&quot;Pistol .38 Revolver&quot;,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;Pistol .38 Revolver&quot;,&quot;amazingSides&quot;:4,&quot;equipSlot&quot;:&quot;Either Hand&quot;,&quot;longRange&quot;:40,&quot;ordinaryString&quot;:&quot;1d4+0w&quot;,&quot;avail&quot;:&quot;Common&quot;,&quot;goodModifier&quot;:1,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:100,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:4,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:6,&quot;skill&quot;:&quot;Pistol&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:4,&quot;accuracy&quot;:0,&quot;actions&quot;:3,&quot;amazingString&quot;:&quot;1d4+0m&quot;,&quot;amazingModifier&quot;:0,&quot;clipcost&quot;:15,&quot;ordinaryType&quot;:&quot;Wound&quot;},&quot;Pistol .44 magnum&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;1d4+3w&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;ordinaryModifier&quot;:2,&quot;mediumRange&quot;:12,&quot;type&quot;:&quot;H&quot;,&quot;shortRange&quot;:6,&quot;mode&quot;:&quot;F&quot;,&quot;mass&quot;:1,&quot;hide&quot;:1,&quot;description&quot;:&quot;Pistol .44 magnum&quot;,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;Pistol .44 magnum&quot;,&quot;amazingSides&quot;:4,&quot;equipSlot&quot;:&quot;Either Hand&quot;,&quot;longRange&quot;:50,&quot;ordinaryString&quot;:&quot;1d4+2w&quot;,&quot;avail&quot;:&quot;Common&quot;,&quot;goodModifier&quot;:3,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:450,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:4,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:6,&quot;skill&quot;:&quot;Pistol&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:4,&quot;accuracy&quot;:0,&quot;actions&quot;:3,&quot;amazingString&quot;:&quot;1d4+2m&quot;,&quot;amazingModifier&quot;:2,&quot;clipcost&quot;:30,&quot;ordinaryType&quot;:&quot;Wound&quot;},&quot;Pistol 9mm&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;1d4+2w&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;ordinaryModifier&quot;:1,&quot;mediumRange&quot;:12,&quot;type&quot;:&quot;H&quot;,&quot;shortRange&quot;:6,&quot;mode&quot;:&quot;F&quot;,&quot;mass&quot;:1,&quot;hide&quot;:3,&quot;description&quot;:&quot;Pistol 9mm&quot;,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;Pistol 9mm&quot;,&quot;amazingSides&quot;:4,&quot;equipSlot&quot;:&quot;Either Hand&quot;,&quot;longRange&quot;:50,&quot;ordinaryString&quot;:&quot;1d4+1w&quot;,&quot;avail&quot;:&quot;Common&quot;,&quot;goodModifier&quot;:2,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:300,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:4,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:15,&quot;skill&quot;:&quot;Pistol&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:4,&quot;accuracy&quot;:0,&quot;actions&quot;:4,&quot;amazingString&quot;:&quot;1d4+0m&quot;,&quot;amazingModifier&quot;:0,&quot;clipcost&quot;:25,&quot;ordinaryType&quot;:&quot;Wound&quot;},&quot;Rifle 7.62mm&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;2d4+1w&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;ordinaryModifier&quot;:1,&quot;mediumRange&quot;:140,&quot;type&quot;:&quot;H&quot;,&quot;shortRange&quot;:70,&quot;mode&quot;:&quot;F&quot;,&quot;mass&quot;:4,&quot;hide&quot;:0,&quot;description&quot;:&quot;Rifle 7.62mm&quot;,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;Rifle 7.62mm&quot;,&quot;amazingSides&quot;:4,&quot;equipSlot&quot;:&quot;Two Hands&quot;,&quot;longRange&quot;:350,&quot;ordinaryString&quot;:&quot;1d6+1w&quot;,&quot;avail&quot;:&quot;Controlled&quot;,&quot;goodModifier&quot;:1,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:1000,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:6,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:10,&quot;skill&quot;:&quot;Rifle&quot;,&quot;goodQuantity&quot;:2,&quot;goodSides&quot;:4,&quot;accuracy&quot;:0,&quot;actions&quot;:3,&quot;amazingString&quot;:&quot;1d4+1m&quot;,&quot;amazingModifier&quot;:1,&quot;clipcost&quot;:50,&quot;ordinaryType&quot;:&quot;Wound&quot;},&quot;SMG 9mm&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;1d4+2w&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;ordinaryModifier&quot;:1,&quot;mediumRange&quot;:20,&quot;type&quot;:&quot;H&quot;,&quot;shortRange&quot;:10,&quot;mode&quot;:&quot;BA&quot;,&quot;mass&quot;:3,&quot;hide&quot;:1,&quot;description&quot;:&quot;SMG 9mm&quot;,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;SMG 9mm&quot;,&quot;amazingSides&quot;:4,&quot;equipSlot&quot;:&quot;Either Hand&quot;,&quot;longRange&quot;:80,&quot;ordinaryString&quot;:&quot;1d4+1w&quot;,&quot;avail&quot;:&quot;Controlled&quot;,&quot;goodModifier&quot;:2,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:1200,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:4,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:30,&quot;skill&quot;:&quot;SMG&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:4,&quot;accuracy&quot;:1,&quot;actions&quot;:4,&quot;amazingString&quot;:&quot;1d4+0m&quot;,&quot;amazingModifier&quot;:0,&quot;clipcost&quot;:50,&quot;ordinaryType&quot;:&quot;Wound&quot;},&quot;Combat Knife&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;1d6+1w&quot;,&quot;firepower&quot;:&quot;O&quot;,&quot;ordinaryModifier&quot;:0,&quot;mediumRange&quot;:1,&quot;type&quot;:&quot;L&quot;,&quot;shortRange&quot;:1,&quot;mode&quot;:&quot;P&quot;,&quot;mass&quot;:0,&quot;hide&quot;:3,&quot;description&quot;:&quot;A combat knife.&quot;,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;Combat Knife&quot;,&quot;amazingSides&quot;:4,&quot;equipSlot&quot;:&quot;Either Hand&quot;,&quot;longRange&quot;:1,&quot;ordinaryString&quot;:&quot;1d6+0w&quot;,&quot;avail&quot;:&quot;Common&quot;,&quot;goodModifier&quot;:1,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:100,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:6,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:0,&quot;skill&quot;:&quot;Blade&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:6,&quot;accuracy&quot;:0,&quot;actions&quot;:4,&quot;amazingString&quot;:&quot;1d4+0m&quot;,&quot;amazingModifier&quot;:0,&quot;clipcost&quot;:0,&quot;ordinaryType&quot;:&quot;Wound&quot;},&quot;Cannon&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;1d6+1w&quot;,&quot;firepower&quot;:&quot;Ordinary&quot;,&quot;ordinaryModifier&quot;:0,&quot;mediumRange&quot;:20,&quot;type&quot;:&quot;High&quot;,&quot;shortRange&quot;:10,&quot;mode&quot;:&quot;F&quot;,&quot;mass&quot;:100,&quot;hide&quot;:0,&quot;description&quot;:0,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;Cannon&quot;,&quot;amazingSides&quot;:6,&quot;equipSlot&quot;:&quot;Either Hand&quot;,&quot;longRange&quot;:30,&quot;ordinaryString&quot;:&quot;1d6+0w&quot;,&quot;avail&quot;:&quot;Military&quot;,&quot;goodModifier&quot;:1,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:0,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:6,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:10,&quot;skill&quot;:&quot;Direct Fire&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:6,&quot;accuracy&quot;:0,&quot;actions&quot;:4,&quot;amazingString&quot;:&quot;1d6+1m&quot;,&quot;amazingModifier&quot;:1,&quot;clipcost&quot;:0,&quot;ordinaryType&quot;:&quot;Wound&quot;},&quot;Assault Rifle&quot;:{&quot;&quot;:&quot;&quot;,&quot;amazingType&quot;:&quot;Mortal&quot;,&quot;goodString&quot;:&quot;1d6+3w&quot;,&quot;firepower&quot;:&quot;Ordinary&quot;,&quot;ordinaryModifier&quot;:2,&quot;mediumRange&quot;:120,&quot;type&quot;:&quot;High&quot;,&quot;shortRange&quot;:60,&quot;mode&quot;:&quot;FBA&quot;,&quot;mass&quot;:3,&quot;hide&quot;:0,&quot;description&quot;:&quot;Assault Rifle&quot;,&quot;goodSign&quot;:&quot;+&quot;,&quot;name&quot;:&quot;Assault Rifle&quot;,&quot;amazingSides&quot;:4,&quot;equipSlot&quot;:&quot;Two Hands&quot;,&quot;longRange&quot;:300,&quot;ordinaryString&quot;:&quot;1d4+2w&quot;,&quot;avail&quot;:&quot;Military&quot;,&quot;goodModifier&quot;:3,&quot;amazingSign&quot;:&quot;+&quot;,&quot;amazingQuantity&quot;:1,&quot;cost&quot;:1500,&quot;goodType&quot;:&quot;Wound&quot;,&quot;ordinarySides&quot;:4,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;PL&quot;:5,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:30,&quot;skill&quot;:&quot;Rifle&quot;,&quot;goodQuantity&quot;:1,&quot;goodSides&quot;:6,&quot;accuracy&quot;:0,&quot;actions&quot;:4,&quot;amazingString&quot;:&quot;1d4+1m&quot;,&quot;amazingModifier&quot;:1,&quot;clipcost&quot;:100,&quot;ordinaryType&quot;:&quot;Wound&quot;}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>wound</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Wound</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>fatigue</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Fatigue</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>personality</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Personality</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>mortal</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Mortal</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>last resorts</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Last Resorts</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>profession</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Profession</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skilldatabase</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>SkillDatabase</key>
                        <value class="string">{&quot;Armor Operation&quot;:[&quot;Combat Armor&quot;,&quot;Powered Armor&quot;],&quot;Athletics&quot;:[&quot;Climb&quot;,&quot;Jump&quot;,&quot;Throw&quot;],&quot;Heavy Weapons&quot;:[&quot;Direct Fire&quot;,&quot;Indirect Fire&quot;],&quot;Melee Weapons&quot;:[&quot;Blade&quot;,&quot;Bludgeon&quot;,&quot;Powered Weapon&quot;],&quot;Unarmed Attack&quot;:[&quot;Brawl&quot;,&quot;Power Martial Arts&quot;],&quot;Acrobatics&quot;:[&quot;Daredevil&quot;,&quot;Defensive Martial Arts&quot;,&quot;Dodge&quot;,&quot;Fall&quot;,&quot;Flight&quot;,&quot;ZeroG Training&quot;],&quot;Manipulation&quot;:[&quot;Lockpick&quot;,&quot;Pickpocket&quot;,&quot;Prestidigitation&quot;],&quot;Ranged Weapons Modern&quot;:[&quot;Pistol&quot;,&quot;Rifle&quot;,&quot;SMG&quot;],&quot;Ranged Weapons Primitive&quot;:[&quot;Bow&quot;,&quot;Crossbow&quot;,&quot;Flintlock&quot;,&quot;Sling&quot;],&quot;Stealth&quot;:[&quot;Hide&quot;,&quot;Shadow&quot;,&quot;Sneak&quot;],&quot;Vehicle Operation&quot;:[&quot;Air Vehicle&quot;,&quot;Land Vehicle&quot;,&quot;Space Vehicle&quot;,&quot;Water Vehicle&quot;],&quot;Movement&quot;:[&quot;Race&quot;,&quot;Swim&quot;,&quot;Trailblazing&quot;],&quot;Stamina&quot;:[&quot;Endurance&quot;,&quot;Resist Pain&quot;],&quot;Survival&quot;:[&quot;Survival Training&quot;],&quot;Business&quot;:[&quot;Corporate&quot;,&quot;Illicit Business&quot;,&quot;Small Business&quot;],&quot;Computer Science&quot;:[&quot;Hacking&quot;,&quot;Hardware&quot;,&quot;Programming&quot;],&quot;Demolitions&quot;:[&quot;Disarm&quot;,&quot;Scratch Built&quot;,&quot;Set Explosives&quot;],&quot;Knowledge&quot;:[&quot;Computer Operation&quot;,&quot;Deduce&quot;,&quot;First Aid&quot;],&quot;Law&quot;:[&quot;Court Procedures&quot;,&quot;Law Enforcement&quot;],&quot;Life Science&quot;:[&quot;Biology&quot;,&quot;Botany&quot;,&quot;Genetics&quot;,&quot;Xenology&quot;,&quot;Zoology&quot;],&quot;Medical Science&quot;:&quot;&quot;,&quot;Navigation&quot;:[&quot;Astrogation Drivespace&quot;,&quot;Astrogation System&quot;,&quot;Navigation Surface&quot;],&quot;Physical Science&quot;:[&quot;Astronomy&quot;,&quot;Chemistry&quot;,&quot;Physics&quot;,&quot;Planetology&quot;],&quot;Security&quot;:[&quot;Protection Protocols&quot;,&quot;Security Devices&quot;],&quot;System Operation&quot;:[&quot;Communications&quot;,&quot;Defenses&quot;,&quot;Engineering&quot;,&quot;Sensors&quot;,&quot;Weapons&quot;],&quot;Tactics&quot;:[&quot;Infantry Tactics&quot;,&quot;Space Tactics&quot;,&quot;Vehicle Tactics&quot;,&quot;Technical Science&quot;],&quot;Invention&quot;:&quot;&quot;,&quot;Administration&quot;:[&quot;Bureaucracy&quot;,&quot;Management&quot;],&quot;Animal Handling&quot;:[&quot;Animal Riding&quot;,&quot;Animal Training&quot;],&quot;Awareness&quot;:[&quot;Intuition&quot;,&quot;Perception&quot;],&quot;Creativity&quot;:&quot;&quot;,&quot;Investigate&quot;:[&quot;Interrogate&quot;,&quot;Search&quot;,&quot;Track&quot;],&quot;Resolve&quot;:[&quot;Mental Resolve&quot;,&quot;Physical Resolve&quot;],&quot;Street Smart&quot;:[&quot;Criminal Elements&quot;,&quot;Street Knowledge&quot;],&quot;Teach&quot;:&quot;&quot;,&quot;Culture&quot;:[&quot;Diplomacy&quot;,&quot;Etiquette&quot;,&quot;First Encounter&quot;],&quot;Deception&quot;:[&quot;Bluff&quot;,&quot;Bribe&quot;,&quot;Gamble&quot;],&quot;Entertainment&quot;:[&quot;Act&quot;,&quot;Dance&quot;,&quot;Musical Instrument&quot;,&quot;Sing&quot;],&quot;Interaction&quot;:[&quot;Bargain&quot;,&quot;Charm&quot;,&quot;Interview&quot;,&quot;Intimidate&quot;,&quot;Seduce&quot;,&quot;Taunt&quot;],&quot;Leadership&quot;:[&quot;Command&quot;,&quot;Inspire&quot;]}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rpe.options</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>rpe.options</key>
                        <value class="string">{&quot;editMode&quot;:0,&quot;reSort&quot;:0,&quot;cleanComment&quot;:0,&quot;saveLast&quot;:0,&quot;loadLastOnStart&quot;:0,&quot;formWidth&quot;:130,&quot;formHeight&quot;:18,&quot;openDialog&quot;:0,&quot;reLoad&quot;:0,&quot;saveTA&quot;:0,&quot;notepadFormat&quot;:0,&quot;macroSelect&quot;:0,&quot;stdButtons&quot;:0}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>{&quot;&quot;:&quot;&quot;}</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>{&quot;&quot;:&quot;&quot;}</key>
                        <value class="string">{&quot;&quot;:&quot;&quot;,&quot;Test&quot;:{&quot;&quot;:&quot;&quot;,&quot;goodString&quot;:&quot;4d5-6w&quot;,&quot;firepower&quot;:0,&quot;range&quot;:0,&quot;ordinaryModifier&quot;:3,&quot;type&quot;:0,&quot;mode&quot;:0,&quot;mass&quot;:0,&quot;hide&quot;:0,&quot;name&quot;:&quot;Test&quot;,&quot;goodSign&quot;:&quot;-&quot;,&quot;amazingSides&quot;:5,&quot;ordinaryString&quot;:&quot;1d2+3s&quot;,&quot;avail&quot;:0,&quot;goodModifier&quot;:6,&quot;amazingSign&quot;:&quot;-&quot;,&quot;amazingQuantity&quot;:4,&quot;cost&quot;:0,&quot;ordinarySides&quot;:2,&quot;ordinarySign&quot;:&quot;+&quot;,&quot;ordinaryQuantity&quot;:1,&quot;clipsize&quot;:0,&quot;skill&quot;:0,&quot;goodQuantity&quot;:4,&quot;goodSides&quot;:5,&quot;accuracy&quot;:0,&quot;actions&quot;:0,&quot;amazingString&quot;:&quot;4d5-6w&quot;,&quot;amazingModifier&quot;:6,&quot;clipcost&quot;:0}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>dexteritylist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>dexterityList</key>
                        <value class="string">[&quot;Acrobatics&quot;,&quot;Daredevil&quot;,&quot;Defensive Martial Arts&quot;,&quot;Dodge&quot;,&quot;Fall&quot;,&quot;Flight&quot;,&quot;ZeroG Training&quot;,&quot;Manipulation&quot;,&quot;Lockpick&quot;,&quot;Pickpocket&quot;,&quot;Prestidigitation&quot;,&quot;Ranged Weapons Modern&quot;,&quot;Pistol&quot;,&quot;Rifle&quot;,&quot;SMG&quot;,&quot;Ranged Weapons Primitive&quot;,&quot;Bow&quot;,&quot;Crossbow&quot;,&quot;Flintlock&quot;,&quot;Sling&quot;,&quot;Stealth&quot;,&quot;Hide&quot;,&quot;Shadow&quot;,&quot;Sneak&quot;,&quot;Vehicle Operation&quot;,&quot;Air Vehicle&quot;,&quot;Land Vehicle&quot;,&quot;Space Vehicle&quot;,&quot;Water Vehicle&quot;]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>race</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Race</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>raceminmax</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>raceMinMax</key>
                        <value class="string">{&quot;Fraal&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:9,&quot;raceWilMax&quot;:16,&quot;racePerMax&quot;:15,&quot;raceStrMin&quot;:4,&quot;raceStrMax&quot;:11,&quot;raceConMax&quot;:10,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:9,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:15,&quot;raceDexMax&quot;:11},&quot;Human&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:4,&quot;raceWilMax&quot;:14,&quot;racePerMax&quot;:14,&quot;raceStrMin&quot;:4,&quot;raceStrMax&quot;:14,&quot;raceConMax&quot;:14,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:4,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:14,&quot;raceDexMax&quot;:14},&quot;Mechalus&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:6,&quot;raceWilMax&quot;:12,&quot;racePerMax&quot;:12,&quot;raceStrMin&quot;:8,&quot;raceStrMax&quot;:14,&quot;raceConMax&quot;:14,&quot;raceConMin&quot;:6,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:7,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:15,&quot;raceDexMax&quot;:14},&quot;Sesheyan&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:9,&quot;raceWilMax&quot;:15,&quot;racePerMax&quot;:12,&quot;raceStrMin&quot;:6,&quot;raceStrMax&quot;:12,&quot;raceConMax&quot;:10,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:4,&quot;raceDexMin&quot;:7,&quot;raceIntMax&quot;:12,&quot;raceDexMax&quot;:15},&quot;T&apos;sa&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:4,&quot;raceWilMax&quot;:12,&quot;racePerMax&quot;:13,&quot;raceStrMin&quot;:4,&quot;raceStrMax&quot;:11,&quot;raceConMax&quot;:10,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:8,&quot;raceDexMin&quot;:9,&quot;raceIntMax&quot;:14,&quot;raceDexMax&quot;:16},&quot;Weren&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:4,&quot;raceWilMax&quot;:12,&quot;racePerMax&quot;:12,&quot;raceStrMin&quot;:9,&quot;raceStrMax&quot;:16,&quot;raceConMax&quot;:16,&quot;raceConMin&quot;:8,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:4,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:13,&quot;raceDexMax&quot;:12}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>constitutionlist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>constitutionList</key>
                        <value class="string">[&quot;Movement&quot;,&quot;Race&quot;,&quot;Swim&quot;,&quot;Trailblazing&quot;,&quot;Stamina&quot;,&quot;Endurance&quot;,&quot;Resist Pain&quot;,&quot;Survival&quot;,&quot;Survival Training&quot;]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>armors</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Armors</key>
                        <value class="string">{&quot;Test&quot;:{&quot;&quot;:&quot;&quot;,&quot;EnSign&quot;:&quot;-&quot;,&quot;HiModifier&quot;:6,&quot;HiQuantity&quot;:4,&quot;EnString&quot;:&quot;4d5-6&quot;,&quot;EnModifier&quot;:6,&quot;avail&quot;:&quot;Com&quot;,&quot;LiSign&quot;:&quot;+&quot;,&quot;EnSides&quot;:5,&quot;EnQuantity&quot;:4,&quot;HiSides&quot;:5,&quot;HiSign&quot;:&quot;-&quot;,&quot;cost&quot;:0,&quot;mass&quot;:0,&quot;LiQuantity&quot;:1,&quot;skill&quot;:&quot;Armor Operation&quot;,&quot;hide&quot;:0,&quot;HiString&quot;:&quot;4d5-6&quot;,&quot;actionPenalty&quot;:0,&quot;name&quot;:&quot;Test&quot;,&quot;LiSides&quot;:2,&quot;LiModifier&quot;:3,&quot;toughness&quot;:&quot;O&quot;,&quot;LiString&quot;:&quot;1d2+3&quot;}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>pistol</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Pistol</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>rpe.allindexes</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>rpe.allIndexes</key>
                        <value class="string">16, 1, 3, 11, 7, 9, 5, 13, 15, 12, 8, 10, 6</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>intelligence</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Intelligence</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>dexterity</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Dexterity</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>modern ranged weapons</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Modern Ranged Weapons</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>armor</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Armor</key>
                        <value class="string">{&quot;Riot Helmet&quot;:{&quot;&quot;:&quot;&quot;,&quot;equipSlot&quot;:&quot;Helmet&quot;,&quot;HiModifier&quot;:1,&quot;EnModifier&quot;:0,&quot;avail&quot;:&quot;Military&quot;,&quot;cost&quot;:200,&quot;mass&quot;:2,&quot;PL&quot;:5,&quot;skill&quot;:&quot;Armor Operation&quot;,&quot;hide&quot;:0,&quot;actionPenalty&quot;:1,&quot;description&quot;:&quot;A riot helmet&quot;,&quot;name&quot;:&quot;Riot Helmet&quot;,&quot;LiModifier&quot;:1,&quot;toughness&quot;:&quot;O&quot;},&quot;Riot Shield&quot;:{&quot;&quot;:&quot;&quot;,&quot;equipSlot&quot;:&quot;Shield&quot;,&quot;HiModifier&quot;:1,&quot;EnModifier&quot;:1,&quot;avail&quot;:&quot;Military&quot;,&quot;cost&quot;:5000,&quot;mass&quot;:10,&quot;PL&quot;:5,&quot;skill&quot;:1,&quot;hide&quot;:0,&quot;actionPenalty&quot;:2,&quot;description&quot;:&quot;A riot shield&quot;,&quot;name&quot;:&quot;Riot Shield&quot;,&quot;LiModifier&quot;:1,&quot;toughness&quot;:&quot;O&quot;},&quot;Assault Gear&quot;:{&quot;&quot;:&quot;&quot;,&quot;HiQuantity&quot;:1,&quot;EnString&quot;:&quot;1d6-1&quot;,&quot;LiSign&quot;:&quot;-&quot;,&quot;mass&quot;:10,&quot;LiQuantity&quot;:1,&quot;hide&quot;:0,&quot;description&quot;:&quot;Assault Gear&quot;,&quot;actionPenalty&quot;:3,&quot;HiString&quot;:&quot;1d6-1&quot;,&quot;name&quot;:&quot;Assault Gear&quot;,&quot;LiSides&quot;:6,&quot;reduction&quot;:&quot;1d6-1/1d6-1/1d6-1&quot;,&quot;toughness&quot;:&quot;O&quot;,&quot;equipSlot&quot;:&quot;Chest&quot;,&quot;HiModifier&quot;:1,&quot;EnSign&quot;:&quot;-&quot;,&quot;EnModifier&quot;:1,&quot;avail&quot;:&quot;Controlled&quot;,&quot;HiSides&quot;:6,&quot;EnQuantity&quot;:1,&quot;EnSides&quot;:6,&quot;cost&quot;:1500,&quot;HiSign&quot;:&quot;-&quot;,&quot;PL&quot;:5,&quot;skill&quot;:&quot;Combat Armor&quot;,&quot;LiModifier&quot;:1,&quot;LiString&quot;:&quot;1d6-1&quot;},&quot;Battle Vest&quot;:{&quot;&quot;:&quot;&quot;,&quot;HiQuantity&quot;:1,&quot;EnString&quot;:&quot;1d6-2&quot;,&quot;LiSign&quot;:&quot;-&quot;,&quot;mass&quot;:5,&quot;LiQuantity&quot;:1,&quot;hide&quot;:3,&quot;description&quot;:&quot;A Kevlar vest&quot;,&quot;actionPenalty&quot;:1,&quot;HiString&quot;:&quot;1d6-2&quot;,&quot;name&quot;:&quot;Battle Vest&quot;,&quot;LiSides&quot;:6,&quot;reduction&quot;:&quot;1d6-3/1d6-2/1d6-2&quot;,&quot;toughness&quot;:&quot;O&quot;,&quot;equipSlot&quot;:&quot;Chest&quot;,&quot;HiModifier&quot;:2,&quot;EnSign&quot;:&quot;-&quot;,&quot;EnModifier&quot;:2,&quot;avail&quot;:&quot;Controlled&quot;,&quot;HiSides&quot;:6,&quot;EnQuantity&quot;:1,&quot;EnSides&quot;:6,&quot;cost&quot;:600,&quot;HiSign&quot;:&quot;-&quot;,&quot;PL&quot;:5,&quot;skill&quot;:&quot;Combat Armor&quot;,&quot;LiModifier&quot;:3,&quot;LiString&quot;:&quot;1d6-3&quot;}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>action check</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Action Check</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>willpowerlist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>willpowerList</key>
                        <value class="string">[&quot;Administration&quot;,&quot;Bureaucracy&quot;,&quot;Management&quot;,&quot;Animal Handling&quot;,&quot;Animal Riding&quot;,&quot;Animal Training&quot;,&quot;Awareness&quot;,&quot;Intuition&quot;,&quot;Perception&quot;,&quot;Creativity&quot;,&quot;Investigate&quot;,&quot;Interrogate&quot;,&quot;Search&quot;,&quot;Track&quot;,&quot;Resolve&quot;,&quot;Mental Resolve&quot;,&quot;Physical Resolve&quot;,&quot;Street Smart&quot;,&quot;Criminal Elements&quot;,&quot;Street Knowledge&quot;,&quot;Teach&quot;]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>free actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Free Actions</key>
                        <value class="string">1</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>skillnamelist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>SkillNameList</key>
                        <value class="string">Armor Operation,Combat Armor,Powered Armor,Athletics,Climb,Jump,Throw,Heavy Weapons,Direct Fire,Indirect Fire,Melee Weapons,Blade,Bludgeon,Powered Weapon,Unarmed Attack,Brawl,Power Martial Arts,Acrobatics,Daredevil,Defensive Martial Arts,Dodge,Fall,Flight,ZeroG Training,Maniuplation,Lockpick,Pickpocket,Prestidigitation,Ranged Weapons Modern,Pistol,Rifle,SMG,Ranged Weapons Primitive,Bow,Crossbow,Flintlock,Sling,Stealth,Hide,Shadow,Sneak,Vehicle Operation,Air Vehicle,Land Vehicle,Space Vehicle,Water Vehicle,Movement,Race,Swim,Trailblazing,Stamina,Endurance,Resist Pain,Survival,Survival Training,Business,Corporate,Illicit Business,Small Business,Computer Science,Hacking,Hardware,Programming,Demolitions,Disarm,Scratch Built,Set Explosives,Knowledge,Computer Operation,Deduce,First Aid,Law,Court Procedures,Law Enforcement,Life Science,Biology,Botany,Genetics,Xenology,Zoology,Medical Science,Forensics,Medical Knowledge,Psychology,Surgery,Treatment,Navigation,Astrogation Drivespace,Astrogation System,Navigation Surface,Physical Science,Astronomy,Chemistry,Physics,Planetology,Security,Protection Protocols,Security Devices,System Operation,Communications,Defenses,Engineering,Sensors,Weapons,Tactics,Infantry Tactics,Space Tactics,Vehicle Tactics,Technical Science,Invention,Juryrig,Repair,Technical Knowledge,Administration,Bureaucracy,Management,Animal Handling,Animal Riding,Animal Training,Awareness,Intuition,Perception,Creativity,Investigate,Interrogate,Search,Track,Resolve,Mental Resolve,Physical Resolve,Street Smart,Criminal Elements,Street Knowledge,Teach,Culture,Diplomacy,Etiquette,First Encounter,Deception,Bluff,Bribe,Gamble,Entertainment,Act,Dance,Musical Instrument,Sing,Interaction,Bargain,Charm,Interview,Intimidate,Seduce,Taunt,Leadership,Command,Inspire</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>strengthlist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>strengthList</key>
                        <value class="string">[&quot;Armor Operation&quot;,&quot;Combat Armor&quot;,&quot;Powered Armor&quot;,&quot;Athletics&quot;,&quot;Climb&quot;,&quot;Jump&quot;,&quot;Throw&quot;,&quot;Heavy Weapons&quot;,&quot;Direct Fire&quot;,&quot;Indirect Fire&quot;,&quot;Melee Weapons&quot;,&quot;Blade&quot;,&quot;Bludgeon&quot;,&quot;Powered Weapon&quot;,&quot;Unarmed Attack&quot;,&quot;Brawl&quot;,&quot;Power Martial Arts&quot;]</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>race minmax</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Race MinMax</key>
                        <value class="string">{&quot;Fraal&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:9,&quot;raceWilMax&quot;:16,&quot;racePerMax&quot;:15,&quot;raceStrMin&quot;:4,&quot;raceStrMax&quot;:11,&quot;raceConMax&quot;:10,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:9,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:15,&quot;raceDexMax&quot;:11},&quot;Human&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:4,&quot;raceWilMax&quot;:14,&quot;racePerMax&quot;:14,&quot;raceStrMin&quot;:4,&quot;raceStrMax&quot;:14,&quot;raceConMax&quot;:14,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:4,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:14,&quot;raceDexMax&quot;:14},&quot;Mechalus&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:6,&quot;raceWilMax&quot;:12,&quot;racePerMax&quot;:12,&quot;raceStrMin&quot;:8,&quot;raceStrMax&quot;:14,&quot;raceConMax&quot;:14,&quot;raceConMin&quot;:6,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:7,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:15,&quot;raceDexMax&quot;:14},&quot;Sesheyan&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:9,&quot;raceWilMax&quot;:15,&quot;racePerMax&quot;:12,&quot;raceStrMin&quot;:6,&quot;raceStrMax&quot;:12,&quot;raceConMax&quot;:10,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:4,&quot;raceDexMin&quot;:7,&quot;raceIntMax&quot;:12,&quot;raceDexMax&quot;:15},&quot;T&apos;sa&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:4,&quot;raceWilMax&quot;:12,&quot;racePerMax&quot;:13,&quot;raceStrMin&quot;:4,&quot;raceStrMax&quot;:11,&quot;raceConMax&quot;:10,&quot;raceConMin&quot;:4,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:8,&quot;raceDexMin&quot;:9,&quot;raceIntMax&quot;:14,&quot;raceDexMax&quot;:16},&quot;Weren&quot;:{&quot;&quot;:&quot;&quot;,&quot;raceWilMin&quot;:4,&quot;raceWilMax&quot;:12,&quot;racePerMax&quot;:12,&quot;raceStrMin&quot;:9,&quot;raceStrMax&quot;:16,&quot;raceConMax&quot;:16,&quot;raceConMin&quot;:8,&quot;racePerMin&quot;:4,&quot;raceIntMin&quot;:4,&quot;raceDexMin&quot;:4,&quot;raceIntMax&quot;:13,&quot;raceDexMax&quot;:12}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>broadskillslist</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>BroadSkillsList</key>
                        <value class="string">{&quot;skillListStrength&quot;:&quot;Armor Operation, Athletics, Heavy Weapons, Melee Weapons, Unarmed Attack&quot;,&quot;skillListDexterity&quot;:&quot;Acrobatics, Manipulation, Ranged Weapons Modern, Ranged Weapons Primitive, Stealth, Vehicle Operation&quot;,&quot;skillListConstitution&quot;:&quot;Movement, Stamina, Survival&quot;,&quot;skillListIntelligence&quot;:&quot;Business, Computer Science, Demolitions, Knowledge, Law, Life Science, Medical Science, Navigation, Physical Science, Security, System Operation, Tactics, Invention&quot;,&quot;skillListWillpower&quot;:&quot;Administration, Animal Handling, Awareness, Creativity, Investigate, Resolve, Street Smart, Teach&quot;,&quot;skillListPersonality&quot;:&quot;Culture, Deception, Entertainment, Interaction, Leadership&quot;}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>movement</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Movement</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>weapons</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Weapons</key>
                        <value class="string"></value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>items</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Items</key>
                        <value class="string">{&quot;Clothing and Accessories&quot;:{&quot;Hat&quot;:{&quot;&quot;:&quot;&quot;,&quot;PL&quot;:5,&quot;mass&quot;:0,&quot;description&quot;:0,&quot;name&quot;:&quot;Hat&quot;,&quot;cost&quot;:200}},&quot;Communications&quot;:{&quot;Radio&quot;:{&quot;&quot;:&quot;&quot;,&quot;PL&quot;:5,&quot;mass&quot;:0,&quot;description&quot;:0,&quot;name&quot;:&quot;Radio&quot;,&quot;cost&quot;:0}},&quot;Medical Gear&quot;:{&quot;Scalpel&quot;:{&quot;&quot;:&quot;&quot;,&quot;PL&quot;:5,&quot;mass&quot;:0,&quot;description&quot;:0,&quot;name&quot;:&quot;Scalpel&quot;,&quot;cost&quot;:0}},&quot;Professional Equipment&quot;:{&quot;Hoist&quot;:{&quot;&quot;:&quot;&quot;,&quot;PL&quot;:5,&quot;mass&quot;:0,&quot;description&quot;:0,&quot;name&quot;:&quot;Hoist&quot;,&quot;cost&quot;:0}},&quot;Sensors&quot;:{&quot;Motion Sensor&quot;:{&quot;&quot;:&quot;&quot;,&quot;PL&quot;:5,&quot;mass&quot;:0,&quot;description&quot;:0,&quot;name&quot;:&quot;Motion Sensor&quot;,&quot;cost&quot;:0}},&quot;Miscellaneous&quot;:{&quot;Jammy Dodgers&quot;:{&quot;&quot;:&quot;&quot;,&quot;PL&quot;:5,&quot;mass&quot;:0,&quot;description&quot;:0,&quot;name&quot;:&quot;Jammy Dodgers&quot;,&quot;cost&quot;:0}},&quot;Survival&quot;:{&quot;Candle&quot;:{&quot;&quot;:&quot;&quot;,&quot;PL&quot;:5,&quot;mass&quot;:0,&quot;description&quot;:0,&quot;name&quot;:&quot;Candle&quot;,&quot;cost&quot;:0}}}</value>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                    <entry>
                      <string>actions</string>
                      <net.rptools.CaseInsensitiveHashMap_-KeyValue>
                        <key>Actions</key>
                        <outer-class reference="../../../.."/>
                      </net.rptools.CaseInsensitiveHashMap_-KeyValue>
                    </entry>
                  </store>
                </propertyMapCI>
                <macroPropertiesMap>
                  <entry>
                    <int>1</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>1</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>
[h: raceStrMin = 4] [h: raceStrMax = 11]
[h: raceDexMin = 4] [h: raceDexMax = 11]
[h: raceConMin = 4] [h: raceConMax = 10]
[h: raceIntMin = 9] [h: raceIntMax = 15]
[h: raceWilMin = 9] [h: raceWilMax = 16]
[h: racePerMin = 4] [h: racePerMax = 15]

[h: fraal = StrPropFromVars(&quot;raceStrMin,raceStrMax,raceDexMin,raceDexMax,raceConMin,raceConMax,raceIntMin,raceIntMax,raceWilMin,raceWilMax,racePerMin,racePerMax&quot;, &quot;UNSUFFIXED&quot;)]
[h: fraal = json.fromStrProp(fraal)]

[h: raceStrMin = 4] [h: raceStrMax = 14]
[h: raceDexMin = 4] [h: raceDexMax = 14]
[h: raceConMin = 4] [h: raceConMax = 14]
[h: raceIntMin = 4] [h: raceIntMax = 14]
[h: raceWilMin = 4] [h: raceWilMax = 14]
[h: racePerMin = 4] [h: racePerMax = 14]

[h: human = StrPropFromVars(&quot;raceStrMin,raceStrMax,raceDexMin,raceDexMax,raceConMin,raceConMax,raceIntMin,raceIntMax,raceWilMin,raceWilMax,racePerMin,racePerMax&quot;, &quot;UNSUFFIXED&quot;)]
[h: human = json.fromStrProp(human)]

[h: raceStrMin = 8] [h: raceStrMax = 14]
[h: raceDexMin = 4] [h: raceDexMax = 14]
[h: raceConMin = 6] [h: raceConMax = 14]
[h: raceIntMin = 7] [h: raceIntMax = 15]
[h: raceWilMin = 6] [h: raceWilMax = 12]
[h: racePerMin = 4] [h: racePerMax = 12]

[h: Mechalus = StrPropFromVars(&quot;raceStrMin,raceStrMax,raceDexMin,raceDexMax,raceConMin,raceConMax,raceIntMin,raceIntMax,raceWilMin,raceWilMax,racePerMin,racePerMax&quot;, &quot;UNSUFFIXED&quot;)]
[h: mechalus = json.fromStrProp(mechalus)]

[h: raceStrMin = 6] [h: raceStrMax = 12]
[h: raceDexMin = 7] [h: raceDexMax = 15]
[h: raceConMin = 4] [h: raceConMax = 10]
[h: raceIntMin = 4] [h: raceIntMax = 12]
[h: raceWilMin = 9] [h: raceWilMax = 15]
[h: racePerMin = 4] [h: racePerMax = 12]

[h: sesheyan = StrPropFromVars(&quot;raceStrMin,raceStrMax,raceDexMin,raceDexMax,raceConMin,raceConMax,raceIntMin,raceIntMax,raceWilMin,raceWilMax,racePerMin,racePerMax&quot;, &quot;UNSUFFIXED&quot;)]
[h: sesheyan = json.fromStrProp(sesheyan)]

[h: raceStrMin = 4] [h: raceStrMax = 11]
[h: raceDexMin = 9] [h: raceDexMax = 16]
[h: raceConMin = 4] [h: raceConMax = 10]
[h: raceIntMin = 8] [h: raceIntMax = 14]
[h: raceWilMin = 4] [h: raceWilMax = 12]
[h: racePerMin = 4] [h: racePerMax = 13]

[h: tsa = StrPropFromVars(&quot;raceStrMin,raceStrMax,raceDexMin,raceDexMax,raceConMin,raceConMax,raceIntMin,raceIntMax,raceWilMin,raceWilMax,racePerMin,racePerMax&quot;, &quot;UNSUFFIXED&quot;)]
[h: tsa = json.fromStrProp(tsa)]

[h: raceStrMin = 9] [h: raceStrMax = 16]
[h: raceDexMin = 4] [h: raceDexMax = 12]
[h: raceConMin = 8] [h: raceConMax = 16]
[h: raceIntMin = 4] [h: raceIntMax = 13]
[h: raceWilMin = 4] [h: raceWilMax = 12]
[h: racePerMin = 4] [h: racePerMax = 12]

[h: weren = StrPropFromVars(&quot;raceStrMin,raceStrMax,raceDexMin,raceDexMax,raceConMin,raceConMax,raceIntMin,raceIntMax,raceWilMin,raceWilMax,racePerMin,racePerMax&quot;, &quot;UNSUFFIXED&quot;)]
[h: weren = json.fromStrProp(weren)]

[h: raceMinMax = json.set(&quot;&quot;,&quot;Fraal&quot;,fraal,&quot;Human&quot;,human,&quot;Mechalus&quot;,mechalus,&quot;Sesheyan&quot;,sesheyan,&quot;T&apos;sa&quot;,tsa,&quot;Weren&quot;,weren)]
[h: setLibProperty(&quot;Race MinMax&quot;,raceMinMax,&quot;Lib:Library&quot;)]</command>
                      <label>Set Race Library</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>3</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>3</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: ArmorOperation = json.set(&quot;&quot;,&quot;name&quot;,&quot;Armor Operation&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Strength&quot;)][h: CombatArmor = json.set(&quot;&quot;,&quot;name&quot;,&quot;Combat Armor&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Armor Operation&quot;)][h: PoweredArmor = json.set(&quot;&quot;,&quot;name&quot;,&quot;Powered Armor&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Armor Operation&quot;)][h: Athletics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Athletics&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Strength&quot;)][h: Climb = json.set(&quot;&quot;,&quot;name&quot;,&quot;Climb&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Athletics&quot;)][h: Jump = json.set(&quot;&quot;,&quot;name&quot;,&quot;Jump&quot;,&quot;cost&quot;,1,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Athletics&quot;)][h: Throw = json.set(&quot;&quot;,&quot;name&quot;,&quot;Throw&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Athletics&quot;)][h: HeavyWeapons = json.set(&quot;&quot;,&quot;name&quot;,&quot;Heavy Weapons&quot;,&quot;cost&quot;,6,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Strength&quot;)][h: DirectFire = json.set(&quot;&quot;,&quot;name&quot;,&quot;Direct Fire&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Heavy Weapons&quot;)][h: IndirectFire = json.set(&quot;&quot;,&quot;name&quot;,&quot;Indirect Fire&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Heavy Weapons&quot;)][h: MeleeWeapons = json.set(&quot;&quot;,&quot;name&quot;,&quot;Melee Weapons&quot;,&quot;cost&quot;,6,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Strength&quot;)][h: Blade = json.set(&quot;&quot;,&quot;name&quot;,&quot;Blade&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Melee Weapons&quot;)][h: Bludgeon = json.set(&quot;&quot;,&quot;name&quot;,&quot;Bludgeon&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Melee Weapons&quot;)][h: PoweredWeapon = json.set(&quot;&quot;,&quot;name&quot;,&quot;Powered Weapon&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Melee Weapons&quot;)][h: UnarmedAttack = json.set(&quot;&quot;,&quot;name&quot;,&quot;Unarmed Attack&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Strength&quot;)][h: Brawl = json.set(&quot;&quot;,&quot;name&quot;,&quot;Brawl&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Unarmed Attack&quot;)][h: PowerMartialArts = json.set(&quot;&quot;,&quot;name&quot;,&quot;Power Martial Arts&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Unarmed Attack&quot;)][h: Acrobatics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Acrobatics&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Dexterity&quot;)][h: Daredevil = json.set(&quot;&quot;,&quot;name&quot;,&quot;Daredevil&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Acrobatics&quot;)][h: DefensiveMartialArts = json.set(&quot;&quot;,&quot;name&quot;,&quot;Defensive Martial Arts&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Acrobatics&quot;)][h: Dodge = json.set(&quot;&quot;,&quot;name&quot;,&quot;Dodge&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Acrobatics&quot;)][h: Fall = json.set(&quot;&quot;,&quot;name&quot;,&quot;Fall&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Acrobatics&quot;)][h: Flight = json.set(&quot;&quot;,&quot;name&quot;,&quot;Flight&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Acrobatics&quot;)][h: ZeroGTraining = json.set(&quot;&quot;,&quot;name&quot;,&quot;ZeroG Training&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;CT&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Acrobatics&quot;)][h: Manipulation = json.set(&quot;&quot;,&quot;name&quot;,&quot;Manipulation&quot;,&quot;cost&quot;,6,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Dexterity&quot;)][h: Lockpick = json.set(&quot;&quot;,&quot;name&quot;,&quot;Lockpick&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Manipulation&quot;)][h: Pickpocket = json.set(&quot;&quot;,&quot;name&quot;,&quot;Pickpocket&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Manipulation&quot;)][h: Prestidigitation = json.set(&quot;&quot;,&quot;name&quot;,&quot;Prestidigitation&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Manipulation&quot;)][h: RangedWeaponsModern = json.set(&quot;&quot;,&quot;name&quot;,&quot;Ranged Weapons Modern&quot;,&quot;cost&quot;,6,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Dexterity&quot;)][h: Pistol = json.set(&quot;&quot;,&quot;name&quot;,&quot;Pistol&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Ranged Weapons Modern&quot;)][h: Rifle = json.set(&quot;&quot;,&quot;name&quot;,&quot;Rifle&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Ranged Weapons Modern&quot;)][h: SMG = json.set(&quot;&quot;,&quot;name&quot;,&quot;SMG&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Ranged Weapons Modern&quot;)][h: RangedWeaponsPrimitive = json.set(&quot;&quot;,&quot;name&quot;,&quot;Ranged Weapons Primitive&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Dexterity&quot;)][h: Bow = json.set(&quot;&quot;,&quot;name&quot;,&quot;Bow&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Ranged Weapons Primitive&quot;)][h: Crossbow = json.set(&quot;&quot;,&quot;name&quot;,&quot;Crossbow&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Ranged Weapons Primitive&quot;)][h: Flintlock = json.set(&quot;&quot;,&quot;name&quot;,&quot;Flintlock&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Ranged Weapons Primitive&quot;)][h: Sling = json.set(&quot;&quot;,&quot;name&quot;,&quot;Sling&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Ranged Weapons Primitive&quot;)][h: Stealth = json.set(&quot;&quot;,&quot;name&quot;,&quot;Stealth&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Dexterity&quot;)][h: Hide = json.set(&quot;&quot;,&quot;name&quot;,&quot;Hide&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Stealth&quot;)][h: Shadow = json.set(&quot;&quot;,&quot;name&quot;,&quot;Shadow&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Stealth&quot;)][h: Sneak = json.set(&quot;&quot;,&quot;name&quot;,&quot;Sneak&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Stealth&quot;)][h: VehicleOperation = json.set(&quot;&quot;,&quot;name&quot;,&quot;Vehicle Operation&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Dexterity&quot;)][h: AirVehicle = json.set(&quot;&quot;,&quot;name&quot;,&quot;Air Vehicle&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Vehicle Operation&quot;)][h: LandVehicle = json.set(&quot;&quot;,&quot;name&quot;,&quot;Land Vehicle&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Vehicle Operation&quot;)][h: SpaceVehicle = json.set(&quot;&quot;,&quot;name&quot;,&quot;Space Vehicle&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Vehicle Operation&quot;)][h: WaterVehicle = json.set(&quot;&quot;,&quot;name&quot;,&quot;Water Vehicle&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Vehicle Operation&quot;)][h: Movement = json.set(&quot;&quot;,&quot;name&quot;,&quot;Movement&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Constitution&quot;)][h: Race = json.set(&quot;&quot;,&quot;name&quot;,&quot;Race&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Movement&quot;)][h: Swim = json.set(&quot;&quot;,&quot;name&quot;,&quot;Swim&quot;,&quot;cost&quot;,1,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Movement&quot;)][h: Trailblazing = json.set(&quot;&quot;,&quot;name&quot;,&quot;Trailblazing&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Movement&quot;)][h: Stamina = json.set(&quot;&quot;,&quot;name&quot;,&quot;Stamina&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Constitution&quot;)][h: Endurance = json.set(&quot;&quot;,&quot;name&quot;,&quot;Endurance&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Stamina&quot;)][h: ResistPain = json.set(&quot;&quot;,&quot;name&quot;,&quot;Resist Pain&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Stamina&quot;)][h: Survival = json.set(&quot;&quot;,&quot;name&quot;,&quot;Survival&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Constitution&quot;)][h: SurvivalTraining = json.set(&quot;&quot;,&quot;name&quot;,&quot;Survival Training&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Survival&quot;)][h: Business = json.set(&quot;&quot;,&quot;name&quot;,&quot;Business&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Corporate = json.set(&quot;&quot;,&quot;name&quot;,&quot;Corporate&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Business&quot;)][h: IllicitBusiness = json.set(&quot;&quot;,&quot;name&quot;,&quot;Illicit Business&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Business&quot;)][h: SmallBusiness = json.set(&quot;&quot;,&quot;name&quot;,&quot;Small Business&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Business&quot;)][h: ComputerScience = json.set(&quot;&quot;,&quot;name&quot;,&quot;Computer Science&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Hacking = json.set(&quot;&quot;,&quot;name&quot;,&quot;Hacking&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Computer Science&quot;)][h: Hardware = json.set(&quot;&quot;,&quot;name&quot;,&quot;Hardware&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Computer Science&quot;)][h: Programming = json.set(&quot;&quot;,&quot;name&quot;,&quot;Programming&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Computer Science&quot;)][h: Demolitions = json.set(&quot;&quot;,&quot;name&quot;,&quot;Demolitions&quot;,&quot;cost&quot;,6,&quot;profession&quot;,&quot;CT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Disarm = json.set(&quot;&quot;,&quot;name&quot;,&quot;Disarm&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Demolitions&quot;)][h: ScratchBuilt = json.set(&quot;&quot;,&quot;name&quot;,&quot;Scratch Built&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Demolitions&quot;)][h: SetExplosives = json.set(&quot;&quot;,&quot;name&quot;,&quot;Set Explosives&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;CT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Demolitions&quot;)][h: Knowledge = json.set(&quot;&quot;,&quot;name&quot;,&quot;Knowledge&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: ComputerOperation = json.set(&quot;&quot;,&quot;name&quot;,&quot;Computer Operation&quot;,&quot;cost&quot;,1,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Knowledge&quot;)][h: Deduce = json.set(&quot;&quot;,&quot;name&quot;,&quot;Deduce&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Knowledge&quot;)][h: FirstAid = json.set(&quot;&quot;,&quot;name&quot;,&quot;First Aid&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Knowledge&quot;)][h: Law = json.set(&quot;&quot;,&quot;name&quot;,&quot;Law&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: CourtProcedures = json.set(&quot;&quot;,&quot;name&quot;,&quot;Court Procedures&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Law&quot;)][h: LawEnforcement = json.set(&quot;&quot;,&quot;name&quot;,&quot;Law Enforcement&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Law&quot;)][h: LifeScience = json.set(&quot;&quot;,&quot;name&quot;,&quot;Life Science&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Biology = json.set(&quot;&quot;,&quot;name&quot;,&quot;Biology&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Life Science&quot;)][h: Botany = json.set(&quot;&quot;,&quot;name&quot;,&quot;Botany&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Life Science&quot;)][h: Genetics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Genetics&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Life Science&quot;)][h: Xenology = json.set(&quot;&quot;,&quot;name&quot;,&quot;Xenology&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Life Science&quot;)][h: Zoology = json.set(&quot;&quot;,&quot;name&quot;,&quot;Zoology&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Life Science&quot;)][h: MedicalScience = json.set(&quot;&quot;,&quot;name&quot;,&quot;Medical Science&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Forensics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Forensics&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Medical Sicence&quot;)][h: MedicalKnowledge = json.set(&quot;&quot;,&quot;name&quot;,&quot;Medical Knowledge&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Medical Sicence&quot;)][h: Psychology = json.set(&quot;&quot;,&quot;name&quot;,&quot;Psychology&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Medical Sicence&quot;)][h: Surgery = json.set(&quot;&quot;,&quot;name&quot;,&quot;Surgery&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Medical Sicence&quot;)][h: Treatment = json.set(&quot;&quot;,&quot;name&quot;,&quot;Treatment&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Medical Sicence&quot;)][h: Navigation = json.set(&quot;&quot;,&quot;name&quot;,&quot;Navigation&quot;,&quot;cost&quot;,6,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: AstrogationDrivespace = json.set(&quot;&quot;,&quot;name&quot;,&quot;Astrogation Drivespace&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Navigation&quot;)][h: AstrogationSystem = json.set(&quot;&quot;,&quot;name&quot;,&quot;Astrogation System&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Navigation&quot;)][h: NavigationSurface = json.set(&quot;&quot;,&quot;name&quot;,&quot;Navigation Surface&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Navigation&quot;)][h: PhysicalScience = json.set(&quot;&quot;,&quot;name&quot;,&quot;Physical Science&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Astronomy = json.set(&quot;&quot;,&quot;name&quot;,&quot;Astronomy&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Physical Science&quot;)][h: Chemistry = json.set(&quot;&quot;,&quot;name&quot;,&quot;Chemistry&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Physical Science&quot;)][h: Physics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Physics&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Physical Science&quot;)][h: Planetology = json.set(&quot;&quot;,&quot;name&quot;,&quot;Planetology&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Physical Science&quot;)][h: Security = json.set(&quot;&quot;,&quot;name&quot;,&quot;Security&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: ProtectionProtocols = json.set(&quot;&quot;,&quot;name&quot;,&quot;Protection Protocols&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;CF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Security&quot;)][h: SecurityDevices = json.set(&quot;&quot;,&quot;name&quot;,&quot;Security Devices&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;FT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Security&quot;)][h: SystemOperation = json.set(&quot;&quot;,&quot;name&quot;,&quot;System Operation&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Communications = json.set(&quot;&quot;,&quot;name&quot;,&quot;Communications&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;System Operation&quot;)][h: Defenses = json.set(&quot;&quot;,&quot;name&quot;,&quot;Defenses&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;CT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;System Operation&quot;)][h: Engineering = json.set(&quot;&quot;,&quot;name&quot;,&quot;Engineering&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;System Operation&quot;)][h: Sensors = json.set(&quot;&quot;,&quot;name&quot;,&quot;Sensors&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;FT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;System Operation&quot;)][h: Weapons = json.set(&quot;&quot;,&quot;name&quot;,&quot;Weapons&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;CT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;System Operation&quot;)][h: Tactics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Tactics&quot;,&quot;cost&quot;,6,&quot;profession&quot;,&quot;CT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: InfantryTactics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Infantry Tactics&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Tactics&quot;)][h: SpaceTactics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Space Tactics&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Tactics&quot;)][h: VehicleTactics = json.set(&quot;&quot;,&quot;name&quot;,&quot;Vehicle Tactics&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;CT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Tactics&quot;)][h: TechnicalScience = json.set(&quot;&quot;,&quot;name&quot;,&quot;Technical Science&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Tactics&quot;)][h: Invention = json.set(&quot;&quot;,&quot;name&quot;,&quot;Invention&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Intelligence&quot;)][h: Juryrig = json.set(&quot;&quot;,&quot;name&quot;,&quot;Juryrig&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Technical Science&quot;)][h: Repair = json.set(&quot;&quot;,&quot;name&quot;,&quot;Repair&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Technical Science&quot;)][h: TechnicalKnowledge = json.set(&quot;&quot;,&quot;name&quot;,&quot;Technical Knowledge&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;T&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Technical Science&quot;)][h: Administration = json.set(&quot;&quot;,&quot;name&quot;,&quot;Administration&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: Bureaucracy = json.set(&quot;&quot;,&quot;name&quot;,&quot;Bureaucracy&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Administration&quot;)][h: Management = json.set(&quot;&quot;,&quot;name&quot;,&quot;Management&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Administration&quot;)][h: AnimalHandling = json.set(&quot;&quot;,&quot;name&quot;,&quot;Animal Handling&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: AnimalRiding = json.set(&quot;&quot;,&quot;name&quot;,&quot;Animal Riding&quot;,&quot;cost&quot;,1,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Animal Handling&quot;)][h: AnimalTraining = json.set(&quot;&quot;,&quot;name&quot;,&quot;Animal Training&quot;,&quot;cost&quot;,1,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Animal Handling&quot;)][h: Awareness = json.set(&quot;&quot;,&quot;name&quot;,&quot;Awareness&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: Intuition = json.set(&quot;&quot;,&quot;name&quot;,&quot;Intuition&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Awareness&quot;)][h: Perception = json.set(&quot;&quot;,&quot;name&quot;,&quot;Perception&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Awareness&quot;)][h: Creativity = json.set(&quot;&quot;,&quot;name&quot;,&quot;Creativity&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: Investigate = json.set(&quot;&quot;,&quot;name&quot;,&quot;Investigate&quot;,&quot;cost&quot;,7,&quot;profession&quot;,&quot;FT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: Interrogate = json.set(&quot;&quot;,&quot;name&quot;,&quot;Interrogate&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;cf&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Investigate&quot;)][h: Search = json.set(&quot;&quot;,&quot;name&quot;,&quot;Search&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;FT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Investigate&quot;)][h: Track = json.set(&quot;&quot;,&quot;name&quot;,&quot;Track&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Investigate&quot;)][h: Resolve = json.set(&quot;&quot;,&quot;name&quot;,&quot;Resolve&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: MentalResolve = json.set(&quot;&quot;,&quot;name&quot;,&quot;Mental Resolve&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Resolve&quot;)][h: PhysicalResolve = json.set(&quot;&quot;,&quot;name&quot;,&quot;Physical Resolve&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Resolve&quot;)][h: StreetSmart = json.set(&quot;&quot;,&quot;name&quot;,&quot;Street Smart&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: CriminalElements = json.set(&quot;&quot;,&quot;name&quot;,&quot;Criminal Elements&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Street Smart&quot;)][h: StreetKnowledge = json.set(&quot;&quot;,&quot;name&quot;,&quot;Street Knowledge&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;F&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Street Smart&quot;)][h: Teach = json.set(&quot;&quot;,&quot;name&quot;,&quot;Teach&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;DT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Willpower&quot;)][h: Culture = json.set(&quot;&quot;,&quot;name&quot;,&quot;Culture&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Personality&quot;)][h: Diplomacy = json.set(&quot;&quot;,&quot;name&quot;,&quot;Diplomacy&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Culture&quot;)][h: Etiquette = json.set(&quot;&quot;,&quot;name&quot;,&quot;Etiquette&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Culture&quot;)][h: FirstEncounter = json.set(&quot;&quot;,&quot;name&quot;,&quot;First Encounter&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;D&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Culture&quot;)][h: Deception = json.set(&quot;&quot;,&quot;name&quot;,&quot;Deception&quot;,&quot;cost&quot;,5,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Personality&quot;)][h: Bluff = json.set(&quot;&quot;,&quot;name&quot;,&quot;Bluff&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Deception&quot;)][h: Bribe = json.set(&quot;&quot;,&quot;name&quot;,&quot;Bribe&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Deception&quot;)][h: Gamble = json.set(&quot;&quot;,&quot;name&quot;,&quot;Gamble&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Deception&quot;)][h: Entertainment = json.set(&quot;&quot;,&quot;name&quot;,&quot;Entertainment&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Personality&quot;)][h: Act = json.set(&quot;&quot;,&quot;name&quot;,&quot;Act&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Entertainment&quot;)][h: Dance = json.set(&quot;&quot;,&quot;name&quot;,&quot;Dance&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Entertainment&quot;)][h: MusicalInstrument = json.set(&quot;&quot;,&quot;name&quot;,&quot;Musical Instrument&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Entertainment&quot;)][h: Sing = json.set(&quot;&quot;,&quot;name&quot;,&quot;Sing&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Entertainment&quot;)][h: Interaction = json.set(&quot;&quot;,&quot;name&quot;,&quot;Interaction&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Personality&quot;)][h: Bargain = json.set(&quot;&quot;,&quot;name&quot;,&quot;Bargain&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DT&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Interaction&quot;)][h: Charm = json.set(&quot;&quot;,&quot;name&quot;,&quot;Charm&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Interaction&quot;)][h: Interview = json.set(&quot;&quot;,&quot;name&quot;,&quot;Interview&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Interaction&quot;)][h: Intimidate = json.set(&quot;&quot;,&quot;name&quot;,&quot;Intimidate&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;C&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Interaction&quot;)][h: Seduce = json.set(&quot;&quot;,&quot;name&quot;,&quot;Seduce&quot;,&quot;cost&quot;,3,&quot;profession&quot;,&quot;DF&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Interaction&quot;)][h: Taunt = json.set(&quot;&quot;,&quot;name&quot;,&quot;Taunt&quot;,&quot;cost&quot;,2,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Interaction&quot;)][h: Leadership = json.set(&quot;&quot;,&quot;name&quot;,&quot;Leadership&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Personality&quot;)][h: Command = json.set(&quot;&quot;,&quot;name&quot;,&quot;Command&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;CD&quot;,&quot;untrained&quot;,&quot;Yes&quot;,&quot;broad&quot;,&quot;Leadership&quot;)][h: Inspire = json.set(&quot;&quot;,&quot;name&quot;,&quot;Inspire&quot;,&quot;cost&quot;,4,&quot;profession&quot;,&quot;CD&quot;,&quot;untrained&quot;,&quot;No&quot;,&quot;broad&quot;,&quot;Leadership&quot;)]

[h: output =  json.set(&quot;&quot;,&quot;Armor Operation&quot;,ArmorOperation,&quot;Combat Armor&quot;,CombatArmor,&quot;Powered Armor&quot;,PoweredArmor,&quot;Athletics&quot;,Athletics,&quot;Climb&quot;,Climb,&quot;Jump&quot;,Jump,&quot;Throw&quot;,Throw,&quot;Heavy Weapons&quot;,HeavyWeapons,&quot;Direct Fire&quot;,DirectFire,&quot;Indirect Fire&quot;,IndirectFire,&quot;Melee Weapons&quot;,MeleeWeapons,&quot;Blade&quot;,Blade,&quot;Bludgeon&quot;,Bludgeon,&quot;Powered Weapon&quot;,PoweredWeapon,&quot;Unarmed Attack&quot;,UnarmedAttack,&quot;Brawl&quot;,Brawl,&quot;Power Martial Arts&quot;,PowerMartialArts,&quot;Acrobatics&quot;,Acrobatics,&quot;Daredevil&quot;,Daredevil,&quot;Defensive Martial Arts&quot;,DefensiveMartialArts,&quot;Dodge&quot;,Dodge,&quot;Fall&quot;,Fall,&quot;Flight&quot;,Flight,&quot;ZeroG Training&quot;,ZeroGTraining,&quot;Manipulation&quot;,Manipulation,&quot;Lockpick&quot;,Lockpick,&quot;Pickpocket&quot;,Pickpocket,&quot;Prestidigitation&quot;,Prestidigitation,&quot;Ranged Weapons Modern&quot;,RangedWeaponsModern,&quot;Pistol&quot;,Pistol,&quot;Rifle&quot;,Rifle,&quot;SMG&quot;,SMG,&quot;Ranged Weapons Primitive&quot;,RangedWeaponsPrimitive,&quot;Bow&quot;,Bow,&quot;Crossbow&quot;,Crossbow,&quot;Flintlock&quot;,Flintlock,&quot;Sling&quot;,Sling,&quot;Stealth&quot;,Stealth,&quot;Hide&quot;,Hide,&quot;Shadow&quot;,Shadow,&quot;Sneak&quot;,Sneak,&quot;Vehicle Operation&quot;,VehicleOperation,&quot;Air Vehicle&quot;,AirVehicle,&quot;Land Vehicle&quot;,LandVehicle,&quot;Space Vehicle&quot;,SpaceVehicle,&quot;Water Vehicle&quot;,WaterVehicle,&quot;Movement&quot;,Movement,&quot;Race&quot;,Race,&quot;Swim&quot;,Swim,&quot;Trailblazing&quot;,Trailblazing,&quot;Stamina&quot;,Stamina,&quot;Endurance&quot;,Endurance,&quot;Resist Pain&quot;,ResistPain,&quot;Survival&quot;,Survival,&quot;Survival Training&quot;,SurvivalTraining,&quot;Business&quot;,Business,&quot;Corporate&quot;,Corporate,&quot;Illicit Business&quot;,IllicitBusiness,&quot;Small Business&quot;,SmallBusiness,&quot;Computer Science&quot;,ComputerScience,&quot;Hacking&quot;,Hacking,&quot;Hardware&quot;,Hardware,&quot;Programming&quot;,Programming,&quot;Demolitions&quot;,Demolitions,&quot;Disarm&quot;,Disarm,&quot;Scratch Built&quot;,ScratchBuilt,&quot;Set Explosives&quot;,SetExplosives,&quot;Knowledge&quot;,Knowledge,&quot;Computer Operation&quot;,ComputerOperation,&quot;Deduce&quot;,Deduce,&quot;First Aid&quot;,FirstAid,&quot;Law&quot;,Law,&quot;Court Procedures&quot;,CourtProcedures,&quot;Law Enforcement&quot;,LawEnforcement,&quot;Life Science&quot;,LifeScience,&quot;Biology&quot;,Biology,&quot;Botany&quot;,Botany,&quot;Genetics&quot;,Genetics,&quot;Xenology&quot;,Xenology,&quot;Zoology&quot;,Zoology,&quot;Medical Science&quot;,MedicalScience,&quot;Forensics&quot;,Forensics,&quot;Medical Knowledge&quot;,MedicalKnowledge,&quot;Psychology&quot;,Psychology,&quot;Surgery&quot;,Surgery,&quot;Treatment&quot;,Treatment,&quot;Navigation&quot;,Navigation,&quot;Astrogation Drivespace&quot;,AstrogationDrivespace,&quot;Astrogation System&quot;,AstrogationSystem,&quot;Navigation Surface&quot;,NavigationSurface,&quot;Physical Science&quot;,PhysicalScience,&quot;Astronomy&quot;,Astronomy,&quot;Chemistry&quot;,Chemistry,&quot;Physics&quot;,Physics,&quot;Planetology&quot;,Planetology,&quot;Security&quot;,Security,&quot;Protection Protocols&quot;,ProtectionProtocols,&quot;Security Devices&quot;,SecurityDevices,&quot;System Operation&quot;,SystemOperation,&quot;Communications&quot;,Communications,&quot;Defenses&quot;,Defenses,&quot;Engineering&quot;,Engineering,&quot;Sensors&quot;,Sensors,&quot;Weapons&quot;,Weapons,&quot;Tactics&quot;,Tactics,&quot;Infantry Tactics&quot;,InfantryTactics,&quot;Space Tactics&quot;,SpaceTactics,&quot;Vehicle Tactics&quot;,VehicleTactics,&quot;Technical Science&quot;,TechnicalScience,&quot;Invention&quot;,Invention,&quot;Juryrig&quot;,Juryrig,&quot;Repair&quot;,Repair,&quot;Technical Knowledge&quot;,TechnicalKnowledge,&quot;Administration&quot;,Administration,&quot;Bureaucracy&quot;,Bureaucracy,&quot;Management&quot;,Management,&quot;Animal Handling&quot;,AnimalHandling,&quot;Animal Riding&quot;,AnimalRiding,&quot;Animal Training&quot;,AnimalTraining,&quot;Awareness&quot;,Awareness,&quot;Intuition&quot;,Intuition,&quot;Perception&quot;,Perception,&quot;Creativity&quot;,Creativity,&quot;Investigate&quot;,Investigate,&quot;Interrogate&quot;,Interrogate,&quot;Search&quot;,Search,&quot;Track&quot;,Track,&quot;Resolve&quot;,Resolve,&quot;Mental Resolve&quot;,MentalResolve,&quot;Physical Resolve&quot;,PhysicalResolve,&quot;Street Smart&quot;,StreetSmart,&quot;Criminal Elements&quot;,CriminalElements,&quot;Street Knowledge&quot;,StreetKnowledge,&quot;Teach&quot;,Teach,&quot;Culture&quot;,Culture,&quot;Diplomacy&quot;,Diplomacy,&quot;Etiquette&quot;,Etiquette,&quot;First Encounter&quot;,FirstEncounter,&quot;Deception&quot;,Deception,&quot;Bluff&quot;,Bluff,&quot;Bribe&quot;,Bribe,&quot;Gamble&quot;,Gamble,&quot;Entertainment&quot;,Entertainment,&quot;Act&quot;,Act,&quot;Dance&quot;,Dance,&quot;Musical Instrument&quot;,MusicalInstrument,&quot;Sing&quot;,Sing,&quot;Interaction&quot;,Interaction,&quot;Bargain&quot;,Bargain,&quot;Charm&quot;,Charm,&quot;Interview&quot;,Interview,&quot;Intimidate&quot;,Intimidate,&quot;Seduce&quot;,Seduce,&quot;Taunt&quot;,Taunt,&quot;Leadership&quot;,Leadership,&quot;Command&quot;,Command,&quot;Inspire&quot;,Inspire)]
[h: setLibProperty(&quot;Skills&quot;,output,&quot;Lib:Library&quot;)]
[h: strengthList = json.append(&quot;&quot;,&quot;Armor Operation&quot;,&quot;Combat Armor&quot;,&quot;Powered Armor&quot;,&quot;Athletics&quot;,&quot;Climb&quot;,&quot;Jump&quot;,&quot;Throw&quot;,&quot;Heavy Weapons&quot;,&quot;Direct Fire&quot;,&quot;Indirect Fire&quot;,&quot;Melee Weapons&quot;,&quot;Blade&quot;,&quot;Bludgeon&quot;,&quot;Powered Weapon&quot;,&quot;Unarmed Attack&quot;,&quot;Brawl&quot;,&quot;Power Martial Arts&quot;)]
[h: dexterityList = json.append(&quot;&quot;,&quot;Acrobatics&quot;,&quot;Daredevil&quot;,&quot;Defensive Martial Arts&quot;,&quot;Dodge&quot;,&quot;Fall&quot;,&quot;Flight&quot;,&quot;ZeroG Training&quot;,&quot;Manipulation&quot;,&quot;Lockpick&quot;,&quot;Pickpocket&quot;,&quot;Prestidigitation&quot;,&quot;Ranged Weapons Modern&quot;,&quot;Pistol&quot;,&quot;Rifle&quot;,&quot;SMG&quot;,&quot;Ranged Weapons Primitive&quot;,&quot;Bow&quot;,&quot;Crossbow&quot;,&quot;Flintlock&quot;,&quot;Sling&quot;,&quot;Stealth&quot;,&quot;Hide&quot;,&quot;Shadow&quot;,&quot;Sneak&quot;,&quot;Vehicle Operation&quot;,&quot;Air Vehicle&quot;,&quot;Land Vehicle&quot;,&quot;Space Vehicle&quot;,&quot;Water Vehicle&quot;)]
[h: constitutionList = json.append(&quot;&quot;,&quot;Movement&quot;,&quot;Race&quot;,&quot;Swim&quot;,&quot;Trailblazing&quot;,&quot;Stamina&quot;,&quot;Endurance&quot;,&quot;Resist Pain&quot;,&quot;Survival&quot;,&quot;Survival Training&quot;)]
[h: intelligenceList = json.append(&quot;&quot;,&quot;Business&quot;,&quot;Corporate&quot;,&quot;Illicit Business&quot;,&quot;Small Business&quot;,&quot;Computer Science&quot;,&quot;Hacking&quot;,&quot;Hardware&quot;,&quot;Programming&quot;,&quot;Demolitions&quot;,&quot;Disarm&quot;,&quot;Scratch Built&quot;,&quot;Set Explosives&quot;,&quot;Knowledge&quot;,&quot;Computer Operation&quot;,&quot;Deduce&quot;,&quot;First Aid&quot;,&quot;Law&quot;,&quot;Court Procedures&quot;,&quot;Law Enforcement&quot;,&quot;Life Science&quot;,&quot;Biology&quot;,&quot;Botany&quot;,&quot;Genetics&quot;,&quot;Xenology&quot;,&quot;Zoology&quot;,&quot;Medical Science&quot;,&quot;Forensics&quot;,&quot;Medical Knowledge&quot;,&quot;Psychology&quot;,&quot;Surgery&quot;,&quot;Treatment&quot;,&quot;Navigation&quot;,&quot;Astrogation Drivespace&quot;,&quot;Astrogation System&quot;,&quot;Navigation Surface&quot;,&quot;Physical Science&quot;,&quot;Astronomy&quot;,&quot;Chemistry&quot;,&quot;Physics&quot;,&quot;Planetology&quot;,&quot;Security&quot;,&quot;Protection Protocols&quot;,&quot;Security Devices&quot;,&quot;System Operation&quot;,&quot;Communications&quot;,&quot;Defenses&quot;,&quot;Engineering&quot;,&quot;Sensors&quot;,&quot;Weapons&quot;,&quot;Tactics&quot;,&quot;Infantry Tactics&quot;,&quot;Space Tactics&quot;,&quot;Vehicle Tactics&quot;,&quot;Technical Science&quot;,&quot;Invention&quot;,&quot;Juryrig&quot;,&quot;Repair&quot;,&quot;Technical Knowledge&quot;)]
[h: willpowerList =  json.append(&quot;&quot;,&quot;Administration&quot;,&quot;Bureaucracy&quot;,&quot;Management&quot;,&quot;Animal Handling&quot;,&quot;Animal Riding&quot;,&quot;Animal Training&quot;,&quot;Awareness&quot;,&quot;Intuition&quot;,&quot;Perception&quot;,&quot;Creativity&quot;,&quot;Investigate&quot;,&quot;Interrogate&quot;,&quot;Search&quot;,&quot;Track&quot;,&quot;Resolve&quot;,&quot;Mental Resolve&quot;,&quot;Physical Resolve&quot;,&quot;Street Smart&quot;,&quot;Criminal Elements&quot;,&quot;Street Knowledge&quot;,&quot;Teach&quot;)]
[h: personalityList =  json.append(&quot;&quot;,&quot;Culture&quot;,&quot;Diplomacy&quot;,&quot;Etiquette&quot;,&quot;First Encounter&quot;,&quot;Deception&quot;,&quot;Bluff&quot;,&quot;Bribe&quot;,&quot;Gamble&quot;,&quot;Entertainment&quot;,&quot;Act&quot;,&quot;Dance&quot;,&quot;Musical Instrument&quot;,&quot;Sing&quot;,&quot;Interaction&quot;,&quot;Bargain&quot;,&quot;Charm&quot;,&quot;Interview&quot;,&quot;Intimidate&quot;,&quot;Seduce&quot;,&quot;Taunt&quot;,&quot;Leadership&quot;,&quot;Command&quot;,&quot;Inspire&quot;)]
[h: setLibProperty(&quot;strengthList&quot;,strengthList,&quot;Lib:Library&quot;)]
[h: setLibProperty(&quot;dexterityList&quot;,dexterityList,&quot;Lib:Library&quot;)]
[h: setLibProperty(&quot;constitutionList&quot;,constitutionList,&quot;Lib:Library&quot;)]
[h: setLibProperty(&quot;intelligenceList&quot;,intelligenceList,&quot;Lib:Library&quot;)]
[h: setLibProperty(&quot;willpowerList&quot;,willpowerList,&quot;Lib:Library&quot;)]
[h: setLibProperty(&quot;personalityList&quot;,personalityList,&quot;Lib:Library&quot;)]</command>
                      <label>Set Skill Library</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>5</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>5</index>
                      <colorKey>white</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: abort(input(
&quot;name|Weapon Name|Name&quot;,
&quot;skill|Pistol|Controlling speciality skill&quot;,
&quot;accuracy|0|Accuracy Modifier&quot;,
&quot;mode|FBAPT|Modes (F)ull (B)urst (A)uto (P)ersonal (T)hrown&quot;,
&quot;range|1/2/3|Range short/medium/long&quot;,
&quot;type|Light, High, Energy|Damage type|LIST|Select = 0 VALUE = STRING&quot;,
&quot;firepower|Ordinary, Good, Amazing|Firepower|LIST|SELECT = 0 VALUE = STRING&quot;,
&quot;damage|1d2+3s/4d5-6w/7d8+0m|Damage e.g. 1d2+3s/4d5-6w/7d8+0m&quot;,
&quot;actions|0|Max actions per round&quot;,
&quot;clipsize|0|Clip size&quot;,
&quot;clipcost|0|Clip cost&quot;,
&quot;hide|0|Hide modifier, 0 = cannot be concealed&quot;,
&quot;mass|0|Mass&quot;,
&quot;avail|Common, Controlled, Military, Restricted|Availiability|LIST|Select = 0 VALUE = STRING&quot;,
&quot;cost|0|Cost to purchase&quot;,
&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = 5&quot;,
&quot;description|0|Description&quot;,
&quot;equipSlot|Either Hand,Two Hands|Equipment slot|LIST|Select = 0 VALUE = STRING&quot;
))]

[h, if(type == &quot;Light&quot;): type = &quot;L&quot;]
[h, if(type == &quot;High&quot;): type = &quot;H&quot;]
[h, if(type == &quot;Energy&quot;): type = &quot;E&quot;]
[h, if(firepower == &quot;Ordinary&quot;): firepower = &quot;O&quot;]
[h, if(firepower == &quot;Good&quot;): firepower = &quot;G&quot;]
[h, if(firepower == &quot;Amazing&quot;): firepower = &quot;A&quot;]

[h, if(name == &quot;Weapon Name&quot;), code: {[abort(0)]};{}]

[h: weaponArray = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]

[h, if (json.contains(weaponArray,name)), code: {
	[h: screen = input(&quot;confpick|No,Yes|&quot; + name + &quot; already exists in the database. Do you wish to overwrite?|radio|select = 0&quot;)]
	[h: abort(screen)]
	[h: abort(confpick)]
	};{
	}]
	
[h: parsedDamage = damageParser(damage)]
[h: returnStrProp = json.toStrProp(parsedDamage)]
[h: varsFromStrProp(returnStrProp)]

[h: rangeList = rangeParser(range)]
[h: varsFromStrProp(rangeList)]

[h: inputStrProp = strPropFromVars(&quot;name,skill,accuracy,mode,shortRange,mediumRange,longRange,type,firepower,actions,clipsize,clipcost,hide,mass,avail,cost,PL,description,equipSlot,ordinaryQuantity,ordinarySides,ordinarySign,ordinaryModifier,ordinaryType,ordinaryString,goodQuantity,goodSides,goodSign,goodModifier,goodType,goodString,amazingQuantity,amazingSides,amazingSign,amazingModifier,amazingType,amazingString&quot;,&quot;UNSUFFIXED&quot;)]
[h: inputJSON = json.fromStrProp(inputStrProp)]
[h: weaponArray = json.set(weaponArray,name,inputJson)]
[h: setLibProperty(&quot;Weapon&quot;,weaponArray,&quot;Lib:Library&quot;)]
[g, r: name + &quot; added to Library.&quot;]
</command>
                      <label>addWeapon</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>6</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>6</index>
                      <colorKey>black</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: weaponArray = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]
[h: inputList = json.toList(weaponArray)]
[h: screen = input(&quot;weaponChoice|&quot;+inputList+&quot;|Choose a Weapon to Delete|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]
[h: screen2 = input(&quot;confpick|No,Yes|&quot; + weaponChoice + &quot; will be permanently removed. Do you wish to continue?|radio|select = 0&quot;)]
[h: abort(screen2)]
[h: abort(confpick)]
[if(confpick == 1), code: {
	[h: weaponArray = json.remove(weaponArray,weaponChoice)]
	[h: setLibProperty(&quot;Weapon&quot;,weaponArray,&quot;Lib:Library&quot;)]
	[g, r: weaponChoice + &quot; removed from Library.&quot;]
	};{}]</command>
                      <label>removeWeapon</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>7</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>7</index>
                      <colorKey>white</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: abort(input(
&quot;name|Armor Name|Name (no commas)&quot;,
&quot;skill|None, Armor Operation, Combat Armor, Powered Armor|Controlling Skill|LIST|Select = 0 Value = String&quot;,
&quot;actionPenalty|0|Action Penalty&quot;,
&quot;toughness|Ordinary, Good, Amazing|Toughness|LIST|Select = 0 Value = String&quot;,
&quot;reduction|1d2+3/4d5-6/7d8+0|Damage Reduction Li/Hi/En e.g. 1d2+3/4d5-6/7d8+0&quot;,
&quot;hide|0|Hide modifier, 0 = cannot be concealed&quot;,
&quot;mass|0|Mass&quot;,
&quot;avail|Common, Controlled, Military, Restricted|Availiability|LIST|Select = 0 VALUE = STRING&quot;,
&quot;cost|0|Cost to purchase&quot;,
&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = 5&quot;,
&quot;description|0|Description&quot;,
&quot;equipSlot|Chest,Full|Equipment slot|LIST|Select = 0 Value = String&quot;
))]

[h, if(name == &quot;Armor Name&quot;), code: {[abort(0)]};{}]

[h: armorArray = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]

[h, if (json.contains(armorArray,name)), code: {
	[h: abort(input(&quot;confpick|No,Yes|&quot; + name + &quot; already exists in the database. Do you wish to overwrite?|radio|select = 0&quot;))]
	[h: abort(confpick)]
	};{
	}]

[h, macro(&quot;armorParser@Lib:bw&quot;) : reduction]
[h: returnStrProp = json.toStrProp(macro.return)]
[h: varsFromStrProp(returnStrProp)]


[h: inputStrProp = strPropFromVars(&quot;name,skill,actionPenalty,toughness,hide,mass,avail,cost,PL,equipSlot,description,reduction,LiQuantity,LiSides,LiSign,LiModifier,LiString,HiQuantity,HiSides,HiSign,HiModifier,HiString,EnQuantity,EnSides,EnSign,EnModifier,EnString&quot;,&quot;UNSUFFIXED&quot;)]
[h: inputJSON = json.fromStrProp(inputStrProp)]
[h: armorArray = json.set(armorArray,name,inputJson)]
[h: setLibProperty(&quot;Armor&quot;,armorArray,&quot;Lib:Library&quot;)]
[g, r: name + &quot; added to Library.&quot;]
</command>
                      <label>addArmorChest</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>8</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>8</index>
                      <colorKey>black</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: armorArray = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]
[h: inputList = json.toList(armorArray)]
[h: screen = input(&quot;armorChoice|&quot;+inputList+&quot;|Choose an Armor to Delete|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]
[h: screen2 = input(&quot;confpick|No,Yes|&quot; + armorChoice + &quot; will be permanently removed. Do you wish to continue?|radio|select = 0&quot;)]
[h: abort(screen2)]
[h: abort(confpick)]
[if(confpick == 1), code: {
	[h: armorArray = json.remove(armorArray,armorChoice)]
	[h: setLibProperty(&quot;Armor&quot;,armorArray,&quot;Lib:Library&quot;)]
	[g, r: armorChoice + &quot; removed from Library.&quot;]
	};{}]</command>
                      <label>removeArmor</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>9</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>9</index>
                      <colorKey>white</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: abort(input(
&quot;name|Item Name|Name (no commas)&quot;,
&quot;category|Clothing and Accessories,Communications,Medical Gear,Professional Equipment,Sensors,Miscellaneous,Survival|Category|LIST|select = 0 VALUE = STRING&quot;,
&quot;mass|0|Mass&quot;,
&quot;cost|0|Cost to purchase&quot;,
&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = 5&quot;,
&quot;description||Description&quot;
))]

[h, if(name == &quot;Item Name&quot;), code: {[abort(0)]};{}]

[h: categoryArray = getLibProperty(&quot;Items&quot;,&quot;Lib:Library&quot;)]
[h: itemArray = json.get(categoryArray,category)]
[h, if (json.contains(itemArray,name)), code: {
	[h: screen = input(&quot;confpick|No,Yes|&quot; + name + &quot; already exists in the database. Do you wish to overwrite?|radio|select = 0&quot;)]
	[h: abort(screen)]
	[h: abort(confpick)]
	};{
	}]

[h: inputStrProp = strPropFromVars(&quot;name,mass,cost,PL,description&quot;,&quot;UNSUFFIXED&quot;)]
[h: inputJSON = json.fromStrProp(inputStrProp)]
[h: itemArray = json.set(itemArray,name,inputJSON)]
[h: categoryArray= json.set(categoryArray,category,itemArray)]
[h: setLibProperty(&quot;Items&quot;,categoryArray,&quot;Lib:Library&quot;)]
[g, r: name + &quot; added to Library.&quot;]
</command>
                      <label>addItem</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>10</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>10</index>
                      <colorKey>black</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: categoryArray = getLibProperty(&quot;Items&quot;,&quot;Lib:Library&quot;)]
[h: categoryList = json.toList(categoryArray)]
[h: screen = input(&quot;categoryChoice|&quot;+categoryList+&quot;|Choose a Category|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]
[h: itemArray = json.get(categoryArray,categoryChoice)]
[h: itemList = json.toList(itemArray)]
[h: screen2 = input(&quot;itemChoice|&quot;+itemList+&quot;|Choose an Item to Delete|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen2)]
[h: screen3 = input(&quot;confpick|No,Yes|&quot; + itemChoice + &quot; will be permanently removed. Do you wish to continue?|radio|select = 0&quot;)]
[h: abort(screen3)]
[h: abort(confpick)]
[if(confpick == 1), code: {
	[h: itemArray = json.remove(itemArray,itemChoice)]
	[h: categoryArray = json.set(categoryArray,categoryChoice,itemArray)]
	[h: setLibProperty(&quot;Items&quot;,categoryArray,&quot;Lib:Library&quot;)]
	[g, r: itemChoice + &quot; removed from Library.&quot;]
	};{}]</command>
                      <label>removeItem</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>11</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>11</index>
                      <colorKey>white</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: abort(input(
&quot;name|Armor Name|Name (no commas)&quot;,
&quot;skill|None, Armor Operation, Combat Armor, Powered Armor|Controlling Skill|LIST|Select = 0 Value = String&quot;,
&quot;actionPenalty|0|Action Penalty&quot;,
&quot;toughness|Ordinary, Good, Amazing|Toughness|LIST|Select = 0 Value = String&quot;,
&quot;reduction|1/-1/0|Damage Reduction Li/Hi/En&quot;,
&quot;hide|0|Hide modifier, 0 = cannot be concealed&quot;,
&quot;mass|0|Mass&quot;,
&quot;avail|Common, Controlled, Military, Restricted|Availiability|LIST|Select = 0 VALUE = STRING&quot;,
&quot;cost|0|Cost to purchase&quot;,
&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = 5&quot;,
&quot;description|0|Description&quot;,
&quot;equipslot|Helmet,Shield,Accessory|Equipment slot|LIST|Select = 0 Value = String&quot;
))]

[h, if(name == &quot;Armor Name&quot;), code: {[abort(0)]};{}]

[h: armorArray = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]

[h, if (json.contains(armorArray,name)), code: {
	[h: screen = input(&quot;confpick|No,Yes|&quot; + name + &quot; already exists in the database. Do you wish to overwrite?|radio|select = 0&quot;)]
	[h: abort(screen)]
	[h: abort(confpick)]
	};{
	}]

	
[h: reductionList = stringToList(reduction,&quot;/&quot;)]
[h: LiModifier = listGet(reductionList,0)]
[h: HiModifier = listGet(reductionList,1)]
[h: EnModifier = listGet(reductionList,2)]


[h: inputStrProp = strPropFromVars(&quot;name,skill,actionPenalty,toughness,hide,mass,avail,cost,PL,equipSlot,description,LiModifier,HiModifier,EnModifier&quot;,&quot;UNSUFFIXED&quot;)]
[h: inputJSON = json.fromStrProp(inputStrProp)]
[h: armorArray = json.set(armorArray,name,inputJson)]
[h: setLibProperty(&quot;Armor&quot;,armorArray,&quot;Lib:Library&quot;)]
[g, r: name + &quot; added to Library.&quot;]
</command>
                      <label>addArmorAccessory</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>12</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>12</index>
                      <colorKey>gray</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: weaponArray = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]

[h: weaponList = json.toList(weaponArray)]
[h: screen = input(&quot;weaponChoice|&quot;+weaponList+&quot;|Choose a Weapon to Edit|LIST|select = 0 VALUE = STRING&quot;)]

[h: abort(screen)]

[h: weaponStrProp = json.toStrProp(json.get(weaponArray,weaponChoice))] 
[h: varsFromStrProp(weaponStrProp)]
[h, if(firepower == &quot;O&quot;): firepower = 0]
[h, if(firepower == &quot;G&quot;): firepower = 1]
[h, if(firepower == &quot;A&quot;): firepower = 2]
[h, if(type == &quot;L&quot;): typeIndex = 0]
[h, if(type == &quot;H&quot;): typeIndex = 1]
[h, if(type == &quot;E&quot;): typeIndex = 2]
[h, if(equipSlot == &quot;Either Hand&quot;): equipSlot = 0]
[h, if(equipSlot == &quot;Two Hands&quot;): equipSlot = 1]
[h, if(avail == &quot;Common&quot;): avail = 0]
[h, if(avail == &quot;Controlled&quot;): avail = 1]
[h, if(avail == &quot;Military&quot;): avail = 2]
[h, if(avail == &quot;Restricted&quot;): avail = 3]


[h: range = shortRange + &quot;/&quot; + mediumRange + &quot;/&quot; + longRange]
[h: damage = ordinaryString + &quot;/&quot; + goodString + &quot;/&quot; + amazingString]

[h: abort(input(
&quot;name|&quot;+name+&quot;|Name (no commas)&quot;,
&quot;skill|&quot;+skill+&quot;|Controlling speciality skill&quot;,
&quot;accuracy|&quot;+accuracy+&quot;|Accuracy Modifier&quot;,
&quot;mode|&quot;+mode+&quot;|Modes (F)ull (B)urst (A)uto (P)ersonal (T)hrown&quot;,
&quot;range|&quot;+range+&quot;|Range short/medium/long&quot;,
&quot;type|Light, High, Energy|Type|LIST|Select = &quot;+typeIndex+&quot; VALUE = STRING&quot;,
&quot;firepower|Ordinary, Good, Amazing|Firepower|LIST|Select = &quot;+firepower+&quot; VALUE = STRING&quot;,
&quot;damage|&quot;+ordinaryString+&quot;/&quot;+goodString+&quot;/&quot;+amazingString+&quot;|Damage e.g. 1d2+3s/4d5-6w/7d8+0m&quot;,
&quot;actions|&quot;+actions+&quot;|Max actions per round&quot;,
&quot;clipsize|&quot;+clipsize+&quot;|Clip size&quot;,
&quot;clipcost|&quot;+clipcost+&quot;|Clip cost&quot;,
&quot;hide|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed&quot;,
&quot;mass|&quot;+mass+&quot;|Mass&quot;,
&quot;avail|Common, Controlled, Military, Restricted|Availiability|LIST|Select = &quot;+avail+&quot; Value = String&quot;,
&quot;cost|&quot;+cost+&quot;|Cost to purchase&quot;,
&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = &quot; + PL,
&quot;description|&quot;+description+&quot;|Description&quot;,
&quot;equipSlot|Either Hand,Two Hands|Equipment slot|LIST|Select = &quot;+equipSlot+&quot; VALUE = STRING&quot;
))]


[h, if (json.contains(weaponArray,name)), code: {
	[h: screen = input(&quot;confpick|No,Yes|&quot; + name + &quot; will be overwritten, are you sure?|radio|select = 1&quot;)]
	[h: abort(screen)]
	[h: abort(confpick)]
	};{
	}]

[h: parsedDamage = damageParser(damage)]
[h: returnStrProp = json.toStrProp(parsedDamage)]
[h: varsFromStrProp(returnStrProp)]

[h: rangeList = rangeParser(range)]
[h: varsFromStrProp(rangeList)]
	
[h: weaponArray = json.remove(weaponArray,name)]	
	
[h: inputStrProp = strPropFromVars(&quot;name,skill,accuracy,mode,shortRange,mediumRange,longRange,type,firepower,actions,clipsize,clipcost,hide,mass,avail,cost,PL,description,equipSlot,ordinaryQuantity,ordinarySides,ordinarySign,ordinaryModifier,ordinaryType,ordinaryString,goodQuantity,goodSides,goodSign,goodModifier,goodType,goodString,amazingQuantity,amazingSides,amazingSign,amazingModifier,amazingType,amazingString&quot;,&quot;UNSUFFIXED&quot;)]

[h: inputJSON = json.fromStrProp(inputStrProp)]
[h: weaponArray = json.set(weaponArray,name,inputJson)]
[h: setLibProperty(&quot;Weapon&quot;,weaponArray,&quot;Lib:Library&quot;)]
[g, r: name + &quot; modified in Library.&quot;]
</command>
                      <label>modifyWeapon</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>13</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>13</index>
                      <colorKey>gray</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: armorArray = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]
[h: armorList = json.toList(armorArray)]

[h: screen = input(&quot;armorChoice|&quot;+armorList+&quot;|Choose the Armor to edit|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]

[h: armorStrProp = json.toStrProp(json.get(armorArray,armorChoice))] 
[h: varsFromStrProp(armorStrProp)]

[h, if(toughness == &quot;Ordinary&quot;): toughness = 0]
[h, if(toughness == &quot;Good&quot;): toughness = 1]
[h, if(toughness == &quot;Amazing&quot;): toughness = 2]
[h, if(skill == &quot;None&quot;): skill = 0]
[h, if(skill == &quot;Armor Operation&quot;): skill = 1]
[h, if(skill == &quot;Combat Armor&quot;): skill = 2]
[h, if(skill == &quot;Powered Armor&quot;): skill = 3]
[h, if(avail == &quot;Common&quot;): avail = 0]
[h, if(avail == &quot;Controlled&quot;): avail = 1]
[h, if(avail == &quot;Military&quot;): avail = 2]
[h, if(avail == &quot;Restricted&quot;): avail = 3]
[h, if(equipSlot == &quot;Helmet&quot;): equipSlot2 = 0]
[h, if(equipSlot == &quot;Shield&quot;): equipSlot2 = 1]
[h, if(equipSlot == &quot;Other&quot;): equipSlot2 = 2]
[h, if(equipSlot == &quot;Chest&quot;): equipSlot2 = 0]
[h, if(equipSlot == &quot;Full&quot;): equipSlot2 = 1]

[h, if((equipslot == &quot;Helmet&quot;)||(equipslot == &quot;Shield&quot;)||(equipslot == &quot;Other&quot;)), code :{
	[h: abort(input(
	&quot;name|&quot;+name+&quot;|Name (no commas)&quot;,
	&quot;skill|&quot;+skill+&quot;|Controlling skill (Armor Operation, Combat, Powered)&quot;,
	&quot;actionPenalty|&quot;+actionPenalty+&quot;|Action Penalty&quot;,
	&quot;toughness|Ordinary, Good, Amazing|Toughness|LIST|Select = &quot;+toughness+&quot; VALUE = STRING&quot;,
	&quot;reduction|&quot;+LiModifier+&quot;/&quot;+HiModifier+&quot;/&quot;+EnModifier+&quot;|Damage Reduction Li/Hi/En e.g.  1/-1/0&quot;,
	&quot;hide|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed&quot;,
	&quot;mass|&quot;+mass+&quot;|Mass&quot;,
	&quot;avail|Common, Controlled, Military, Restricted|Availiability|LIST|Select = &quot;+avail+&quot; Value = String&quot;,
	&quot;cost|&quot;+cost+&quot;|Cost to purchase&quot;,
	&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = &quot; + PL,
	&quot;description|&quot;+description+&quot;|Description&quot;,
	&quot;equipSlot|Helmet,Shield,Other|Equipment slot|LIST|Select = &quot;+equipSlot2+&quot; VALUE = STRING&quot;
	))]
	[h, if((equipslot == &quot;Helmet&quot;)||(equipslot == &quot;Shield&quot;)||(equipslot== &quot;Other&quot;)), code :{};{[h: assert(0,&quot;Equipment slot must be Helmet, Shield or Other&quot;,0)]}]

};{
	[h: abort(input(
	&quot;name|&quot;+name+&quot;|Name (no commas)&quot;,
	&quot;skill|None, Armor Operation, Combat Armor, Powered Armor|Controlling Skill|LIST|Select = &quot;+skill+&quot; Value = String&quot;,
	&quot;actionPenalty|&quot;+actionPenalty+&quot;|Action Penalty&quot;,
	&quot;toughness|Ordinary, Good, Amazing|Firepower|LIST|Select = &quot;+toughness+&quot; VALUE = STRING&quot;,
	&quot;reduction|&quot;+LiString+&quot;/&quot;+HiString+&quot;/&quot;+EnString+&quot;|Damage Reduction Li/Hi/En e.g.  1/-1/0&quot;,
	&quot;hide|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed&quot;,
	&quot;mass|&quot;+mass+&quot;|Mass&quot;,
	&quot;avail|Common, Controlled, Military, Restricted|Availiability|LIST|Select = &quot;+avail+&quot; Value = String&quot;,
	&quot;cost|&quot;+cost+&quot;|Cost to purchase&quot;,
	&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = &quot; + PL,
	&quot;description|&quot;+description+&quot;|Description&quot;,
	&quot;equipSlot|Chest,Full|Equipment slot|LIST|Select = &quot;+equipSlot2+&quot; VALUE = STRING&quot;
	))]
	[h, if((equipslot == &quot;Chest&quot;)||(equipslot == &quot;Full&quot;)), code :{};{[h: assert(0,&quot;Equipment slot must be Chest or Full&quot;,0)]}]

}]



[h, if (json.contains(armorArray,name)), code: {
	[h: screen = input(&quot;confpick|No,Yes|&quot; + name + &quot; will be overwritten, are you sure?|radio|select = 1&quot;)]
	[h: abort(screen)]
	[h: abort(confpick)]
	};{
	}]



[h, if((equipslot == &quot;Helmet&quot;)||(equipslot == &quot;Shield&quot;)||(equipslot == &quot;Other&quot;)), code :{
	[h: inputStrProp = strPropFromVars(&quot;name,skill,actionPenalty,toughness,hide,mass,avail,cost,PL,equipSlot,description,LiModifier,HiModifier,EnModifier&quot;,&quot;UNSUFFIXED&quot;)]
	};{
	[h, macro(&quot;armorParser@Lib:bw&quot;) : reduction]
	[h: returnStrProp = json.toStrProp(macro.return)]
	[h: varsFromStrProp(returnStrProp)]
	[h: inputStrProp = strPropFromVars(&quot;name,skill,actionPenalty,toughness,hide,mass,avail,cost,PL,equipSlot,description,reduction,LiQuantity,LiSides,LiSign,LiModifier,LiString,HiQuantity,HiSides,HiSign,HiModifier,HiString,EnQuantity,EnSides,EnSign,EnModifier,EnString&quot;,&quot;UNSUFFIXED&quot;)]
}]

[h: armorArray = json.remove(armorArray,name)]	

[h: inputJSON = json.fromStrProp(inputStrProp)]
[h: armorArray = json.set(armorArray,name,inputJson)]
[h: setLibProperty(&quot;Armor&quot;,armorArray,&quot;Lib:Library&quot;)]
[g, r: name + &quot; modified in Library.&quot;]</command>
                      <label>modifyArmor</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>15</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>15</index>
                      <colorKey>gray</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: categoryArray = getLibProperty(&quot;Items&quot;,&quot;Lib:Library&quot;)]
[h: categoryList = json.toList(categoryArray)]

[h: screen = input(&quot;categoryChoice|&quot;+categoryList+&quot;|Choose a Category|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]

[h: itemArray = json.get(categoryArray,categoryChoice)]
[h: itemList = json.toList(itemArray)]

[h: screen2 = input(&quot;itemChoice|&quot;+itemList+&quot;|Choose an Item to modify|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen2)]

[h: itemStrProp = json.toStrProp(json.get(itemArray,itemChoice))] 
[h: varsFromStrProp(itemStrProp)]

[h, if (categoryChoice == &quot;Clothing and Accessories&quot;), code : {[h: category = 0]};{}]
[h, if (categoryChoice == &quot;Communications&quot;), code : {[h: category = 1]};{}]
[h, if (categoryChoice == &quot;Medical Gear&quot;), code : {[h: category = 2]};{}]
[h, if (categoryChoice == &quot;Professional Equipment&quot;), code : {[h: category = 3]};{}]
[h, if (categoryChoice == &quot;Sensors&quot;), code : {[h: category = 4]};{}]
[h, if (categoryChoice == &quot;Miscellaneous&quot;), code : {[h: category = 5]};{}]
[h, if (categoryChoice == &quot;Survival&quot;), code : {[h: category = 6]};{}]

[h: abort(input(
&quot;name|&quot;+name+&quot;|Name (no commas)&quot;,
&quot;category|Clothing and Accessories,Communications,Medical Gear,Professional Equipment,Sensors,Miscellaneous,Survival|Category|LIST|select = &quot;+ category +&quot; VALUE = STRING&quot;,
&quot;mass|&quot;+mass+&quot;|Mass&quot;,
&quot;cost|&quot;+cost+&quot;|Cost to purchase&quot;,
&quot;PL|PL 0: Stone Age,PL 1: Bronze/Iron Age,PL 2: Middle Ages,PL 3: Age of Reason,PL 4: Industrial Age,PL 5: Information Age,PL 6: Fusion Age,PL 7: Gravity Age,PL 8: Energy Age|Progress Level|LIST|Select = &quot; + PL,
&quot;description|&quot;+description+&quot;|Description&quot;
))]


[h, if (json.contains(itemArray,name)), code: {
	[h: screen = input(&quot;confpick|No,Yes|&quot; + name + &quot; will be overwritten, are you sure?|radio|select = 1&quot;)]
	[h: abort(screen)]
	[h: abort(confpick)]
	};{
	}]

[h: itemArray = json.remove(itemArray,itemChoice)]

[h: inputStrProp = strPropFromVars(&quot;name,mass,cost,PL,description&quot;,&quot;UNSUFFIXED&quot;)]

[h: inputJSON = json.fromStrProp(inputStrProp)]

[h: itemArray = json.set(itemArray,name,inputJSON)]
[h: categoryArray = json.set(categoryArray,category,itemArray)]


[h: setLibProperty(&quot;Items&quot;,categoryArray,&quot;Lib:Library&quot;)]
[g, r: name + &quot; modified in Library.&quot;]
</command>
                      <label>modifyItem</label>
                      <group>Item Management</group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>white</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>16</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>16</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>	[h: screen = input(&quot;confpick|Abort,Continue|Warning this can take a long time?|radio|select = 0&quot;)]
	[h: abort(screen)]
	[h: abort(confpick)]

[h: &quot;&lt;!-- Preform Skill Lists --&gt;&quot;]

[h: skillLibrary = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]
[h: skillList = json.fields(skillLibrary)]
[h: attributeNames = &quot;Strength, Dexterity, Constitution, Intelligence, Willpower, Personality&quot;]

[h: skillListStrength = &quot;&quot;][h: skillListDexterity = &quot;&quot;][h: skillListConstitution = &quot;&quot;][h: skillListIntelligence = &quot;&quot;][h: skillListWillpower = &quot;&quot;][h: skillListPersonality = &quot;&quot;]

[h: listOfBroadSkills = &quot;&quot;][h: listOfSpecialistSkills = &quot;&quot;]

[h, foreach(skill,skillList), code :{

	[h: skillJSON = json.get(skillLibrary,skill)]
	[h: skillBroad = json.get(skillJSON,&quot;broad&quot;)]
	[h: containsQuantity = listContains(attributeNames,skillBroad)]
	[h, if((containsQuantity &gt; 0)&amp;&amp;(skillBroad == &quot;Strength&quot;)) : skillListStrength = listAppend(skillListStrength,skill)]
	[h, if((containsQuantity &gt; 0)&amp;&amp;(skillBroad == &quot;Dexterity&quot;)) : skillListDexterity = listAppend(skillListDexterity,skill)]
	[h, if((containsQuantity &gt; 0)&amp;&amp;(skillBroad == &quot;Constitution&quot;)) : skillListConstitution = listAppend(skillListConstitution,skill)]
	[h, if((containsQuantity &gt; 0)&amp;&amp;(skillBroad == &quot;Intelligence&quot;)) : skillListIntelligence = listAppend(skillListIntelligence,skill)]
	[h, if((containsQuantity &gt; 0)&amp;&amp;(skillBroad == &quot;Willpower&quot;)) : skillListWillpower = listAppend(skillListWillpower,skill)]
	[h, if((containsQuantity &gt; 0)&amp;&amp;(skillBroad == &quot;Personality&quot;)) : skillListPersonality = listAppend(skillListPersonality,skill)]
	
	[h, if(containsQuantity &gt; 0), code :{
		[h: listOfBroadSkills = listAppend(listOfBroadSkills,skill)]
		};{
		[h: listOfSpecialistSkills = listAppend(listOfSpecialistSkills,skill)]
		}]
}]

[h: skillDatabase = &quot;&quot;]

[h, foreach(broadSkill,listOfBroadSkills), code :{
	
	[h: specialistArray = &quot;&quot;]
	
	[h, foreach(skill,listOfSpecialistSkills), code:{
	
		[h: skillJSON = json.get(skillLibrary,skill)]
		[h: skillBroad = json.get(skillJSON,&quot;broad&quot;)] 
		
		[h, if(skillBroad == broadSkill): specialistArray = json.append(specialistArray,skill)]
	
	}]
	
	[h: skillDatabase = json.set(skillDatabase,broadSkill,specialistArray)]
	
}]


[h: output = json.set(&quot;&quot;,&quot;skillListStrength&quot;,skillListStrength,&quot;skillListDexterity&quot;,skillListDexterity,&quot;skillListConstitution&quot;,skillListConstitution,&quot;skillListIntelligence&quot;,skillListIntelligence,&quot;skillListWillpower&quot;,skillListWillpower,&quot;skillListPersonality&quot;,skillListPersonality)]

[h: setLibProperty(&quot;BroadSkillsList&quot;,output,&quot;Lib:Library&quot;)]

[h: setLibProperty(&quot;skillDatabase&quot;,skillDatabase,&quot;Lib:Library&quot;)]
	
	</command>
                      <label>Preform Skills List</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                  <entry>
                    <int>17</int>
                    <net.rptools.maptool.model.MacroButtonProperties>
                      <saveLocation>Token</saveLocation>
                      <index>17</index>
                      <colorKey>default</colorKey>
                      <hotKey>None</hotKey>
                      <command>[h: weaponNo1 = json.set(&quot;&quot;,&quot;PL&quot;,5,&quot;name&quot;,&quot;Pistol .38 Revolver&quot;,&quot;skill&quot;,&quot;Pistol&quot;,&quot;accuracy&quot;,0,&quot;mode&quot;,&quot;F&quot;,&quot;range&quot;,&quot;6/12/40&quot;,&quot;type&quot;,&quot;H&quot;,&quot;firepower&quot;,&quot;O&quot;,&quot;damageString&quot;,&quot;1d4+0w/1d4+1w/1d4+0m&quot;,&quot;actions&quot;,3,&quot;clipsize&quot;,6,&quot;clipcost&quot;,15,&quot;hide&quot;,2,&quot;mass&quot;,1,&quot;avail&quot;,&quot;Common&quot;,&quot;cost&quot;,100,&quot;equipSlot&quot;,&quot;Either Hand&quot;,&quot;description&quot;,&quot;Pistol .38 Revolver&quot;)][h: weaponNo2 = json.set(&quot;&quot;,&quot;PL&quot;,5,&quot;name&quot;,&quot;Pistol .44 magnum&quot;,&quot;skill&quot;,&quot;Pistol&quot;,&quot;accuracy&quot;,0,&quot;mode&quot;,&quot;F&quot;,&quot;range&quot;,&quot;6/12/50&quot;,&quot;type&quot;,&quot;H&quot;,&quot;firepower&quot;,&quot;O&quot;,&quot;damageString&quot;,&quot;1d4+2w/1d4+3w/1d4+2m&quot;,&quot;actions&quot;,3,&quot;clipsize&quot;,6,&quot;clipcost&quot;,30,&quot;hide&quot;,1,&quot;mass&quot;,1,&quot;avail&quot;,&quot;Common&quot;,&quot;cost&quot;,450,&quot;equipSlot&quot;,&quot;Either Hand&quot;,&quot;description&quot;,&quot;Pistol .44 magnum&quot;)][h: weaponNo3 = json.set(&quot;&quot;,&quot;PL&quot;,5,&quot;name&quot;,&quot;Pistol 9mm&quot;,&quot;skill&quot;,&quot;Pistol&quot;,&quot;accuracy&quot;,0,&quot;mode&quot;,&quot;F&quot;,&quot;range&quot;,&quot;6/12/50&quot;,&quot;type&quot;,&quot;H&quot;,&quot;firepower&quot;,&quot;O&quot;,&quot;damageString&quot;,&quot;1d4+1w/1d4+2w/1d4+0m&quot;,&quot;actions&quot;,4,&quot;clipsize&quot;,15,&quot;clipcost&quot;,25,&quot;hide&quot;,3,&quot;mass&quot;,1,&quot;avail&quot;,&quot;Common&quot;,&quot;cost&quot;,300,&quot;equipSlot&quot;,&quot;Either Hand&quot;,&quot;description&quot;,&quot;Pistol 9mm&quot;)][h: weaponNo4 = json.set(&quot;&quot;,&quot;PL&quot;,5,&quot;name&quot;,&quot;Rifle 7.62mm&quot;,&quot;skill&quot;,&quot;Rifle&quot;,&quot;accuracy&quot;,0,&quot;mode&quot;,&quot;F&quot;,&quot;range&quot;,&quot;70/140/350&quot;,&quot;type&quot;,&quot;H&quot;,&quot;firepower&quot;,&quot;O&quot;,&quot;damageString&quot;,&quot;1d6+1w/2d4+1w/1d4+1m&quot;,&quot;actions&quot;,3,&quot;clipsize&quot;,10,&quot;clipcost&quot;,50,&quot;hide&quot;,0,&quot;mass&quot;,4,&quot;avail&quot;,&quot;Controlled&quot;,&quot;cost&quot;,1000,&quot;equipSlot&quot;,&quot;Two Hands&quot;,&quot;description&quot;,&quot;Rifle 7.62mm&quot;)][h: weaponNo5 = json.set(&quot;&quot;,&quot;PL&quot;,5,&quot;name&quot;,&quot;Assault Rifle&quot;,&quot;skill&quot;,&quot;Rifle&quot;,&quot;accuracy&quot;,0,&quot;mode&quot;,&quot;FBA&quot;,&quot;range&quot;,&quot;60/120/300&quot;,&quot;type&quot;,&quot;H&quot;,&quot;firepower&quot;,&quot;O&quot;,&quot;damageString&quot;,&quot;1d4+2w/1d6+3w/1d4+1m&quot;,&quot;actions&quot;,4,&quot;clipsize&quot;,30,&quot;clipcost&quot;,100,&quot;hide&quot;,0,&quot;mass&quot;,3,&quot;avail&quot;,&quot;Military&quot;,&quot;cost&quot;,1500,&quot;equipSlot&quot;,&quot;Two Hands&quot;,&quot;description&quot;,&quot;Assault Rifle&quot;)][h: weaponNo6 = json.set(&quot;&quot;,&quot;PL&quot;,5,&quot;name&quot;,&quot;SMG 9mm&quot;,&quot;skill&quot;,&quot;SMG&quot;,&quot;accuracy&quot;,1,&quot;mode&quot;,&quot;BA&quot;,&quot;range&quot;,&quot;10/20/80&quot;,&quot;type&quot;,&quot;H&quot;,&quot;firepower&quot;,&quot;O&quot;,&quot;damageString&quot;,&quot;1d4+1w/1d4+2w/1d4+0m&quot;,&quot;actions&quot;,4,&quot;clipsize&quot;,30,&quot;clipcost&quot;,50,&quot;hide&quot;,1,&quot;mass&quot;,3,&quot;avail&quot;,&quot;Controlled&quot;,&quot;cost&quot;,1200,&quot;equipSlot&quot;,&quot;Either Hand&quot;,&quot;description&quot;,&quot;SMG 9mm&quot;)][h: database = json.append(&quot;&quot;,weaponNo1,weaponNo2,weaponNo3,weaponNo4,weaponNo5,weaponNo6)]





[h: databaseLength = json.length(database)]
[h: outputDatabase = &quot;&quot;]
[h, for(i,0,databaseLength), code :
	{
	[h: name = json.get(database,i)]
	[h: databaseEntry = json.get(database,i)]
	[h: databaseEntryStrProp = json.toStrProp(databaseEntry)]
	[h: varsFromStrProp(databaseEntryStrProp)]
	[h: rangeList = rangeParser(range)]
	[h: varsFromStrProp(rangeList)]
	[h: parsedDamage = damageParser(damageString)]
	[h: returnStrProp = json.toStrProp(parsedDamage)]
	[h: varsFromStrProp(returnStrProp)]
	[h: inputStrProp = strPropFromVars(&quot;name,skill,accuracy,mode,shortRange,mediumRange,longRange,type,firepower,actions,clipsize,clipcost,hide,mass,avail,cost,PL,description,equipSlot,ordinaryQuantity,ordinarySides,ordinarySign,ordinaryModifier,ordinaryType,ordinaryString,goodQuantity,goodSides,goodSign,goodModifier,goodType,goodString,amazingQuantity,amazingSides,amazingSign,amazingModifier,amazingType,amazingString&quot;,&quot;UNSUFFIXED&quot;)]
	[h: inputJSON = json.fromStrProp(inputStrProp)]
	[h: outputDatabase = json.set(outputDatabase, name, inputJSON)]
	}
]

[h: setLibProperty(&quot;Weapon&quot;,outputDatabase,&quot;Lib:Library&quot;)]</command>
                      <label>Set Default PL5 Weapon Database</label>
                      <group></group>
                      <sortby></sortby>
                      <autoExecute>true</autoExecute>
                      <includeLabel>false</includeLabel>
                      <applyToTokens>false</applyToTokens>
                      <fontColorKey>black</fontColorKey>
                      <fontSize>1.00em</fontSize>
                      <minWidth></minWidth>
                      <maxWidth></maxWidth>
                      <allowPlayerEdits>false</allowPlayerEdits>
                      <toolTip></toolTip>
                      <commonMacro>false</commonMacro>
                      <compareGroup>true</compareGroup>
                      <compareSortPrefix>true</compareSortPrefix>
                      <compareCommand>true</compareCommand>
                      <compareIncludeLabel>true</compareIncludeLabel>
                      <compareAutoExecute>true</compareAutoExecute>
                      <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
                    </net.rptools.maptool.model.MacroButtonProperties>
                  </entry>
                </macroPropertiesMap>
                <speechMap/>
              </net.rptools.maptool.model.Token>
            </entry>
          </tokenMap>
          <exposedAreaMeta>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBT2ZU5bbLAgAAgKAARg==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBT/UB3YsvAwAAgIgBRQ==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBT5P3yyAlFQAAAIgBAw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBULR8pznnDgAAAKAAEA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBT4xTXDwZKAAAAAgBDA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves reference="../../../../entry[3]/net.rptools.maptool.model.ExposedAreaMetaData/exposedAreaHistory/curves"/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBUCievTmmGAAAAKgAAA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves reference="../../../../entry[4]/net.rptools.maptool.model.ExposedAreaMetaData/exposedAreaHistory/curves"/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBULZ5uzl5FgAAAKgBEA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves reference="../../../../entry[4]/net.rptools.maptool.model.ExposedAreaMetaData/exposedAreaHistory/curves"/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgBT6CDqRLnBQAAAKgBAA==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.ExposedAreaMetaData>
                <exposedAreaHistory>
                  <curves reference="../../../../entry[3]/net.rptools.maptool.model.ExposedAreaMetaData/exposedAreaHistory/curves"/>
                </exposedAreaHistory>
              </net.rptools.maptool.model.ExposedAreaMetaData>
            </entry>
          </exposedAreaMeta>
          <tokenOrderedList class="linked-list">
            <net.rptools.maptool.model.Token reference="../../tokenMap/entry[3]/net.rptools.maptool.model.Token"/>
            <net.rptools.maptool.model.Token reference="../../tokenMap/entry[4]/net.rptools.maptool.model.Token"/>
            <net.rptools.maptool.model.Token reference="../../tokenMap/entry[2]/net.rptools.maptool.model.Token"/>
            <net.rptools.maptool.model.Token reference="../../tokenMap/entry/net.rptools.maptool.model.Token"/>
          </tokenOrderedList>
          <initiativeList>
            <tokens/>
            <current>-1</current>
            <round>-1</round>
            <zoneId>
              <baGUID>wKgBUDdjODpfTwAAACgBEA==</baGUID>
            </zoneId>
            <fullUpdate>false</fullUpdate>
            <hideNPC>false</hideNPC>
          </initiativeList>
          <exposedArea>
            <curves reference="../../exposedAreaMeta/entry[3]/net.rptools.maptool.model.ExposedAreaMetaData/exposedAreaHistory/curves"/>
          </exposedArea>
          <hasFog>false</hasFog>
          <fogPaint class="net.rptools.maptool.model.drawing.DrawableColorPaint">
            <color>-16777216</color>
          </fogPaint>
          <topology>
            <curves reference="../../exposedAreaMeta/entry[3]/net.rptools.maptool.model.ExposedAreaMetaData/exposedAreaHistory/curves"/>
          </topology>
          <topologyTerrain>
            <curves/>
          </topologyTerrain>
          <backgroundPaint class="net.rptools.maptool.model.drawing.DrawableTexturePaint">
            <assetId>
              <id>c93660c09e3d3f9aff04df49a6c594b4</id>
            </assetId>
            <scale>1.0</scale>
          </backgroundPaint>
          <mapAsset>
            <id>c93660c09e3d3f9aff04df49a6c594b4</id>
          </mapAsset>
          <boardPosition>
            <x>0</x>
            <y>0</y>
          </boardPosition>
          <drawBoard>true</drawBoard>
          <boardChanged>false</boardChanged>
          <name>Start Page</name>
          <isVisible>true</isVisible>
          <visionType>OFF</visionType>
          <tokenSelection>ALL</tokenSelection>
          <height>0</height>
          <width>0</width>
        </net.rptools.maptool.model.Zone>
      </entry>
    </zones>
    <name>Bone_White_Alternity-unofficial_v0_2_framework_MT1.9.3_resave</name>
    <campaignProperties>
      <tokenTypeMap>
        <entry>
          <string></string>
          <list>
            <net.rptools.maptool.model.TokenProperty>
              <name>Battle Vest</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
              <defaultValue>armorType=ordinary;lowImpactDie=6;lowImpactDieQuantity=1;lowImpactDieModifier=-3;highImpactDie=6;highImpactDieQuantity=1;highImpactDieModifier=-2;energyImpactDie=4;energyImpactDieQuantity=1;energyImpactDieModifier=-2;</defaultValue>
            </net.rptools.maptool.model.TokenProperty>
          </list>
        </entry>
        <entry>
          <string>Basic</string>
          <list>
            <net.rptools.maptool.model.TokenProperty>
              <name>Strength</name>
              <shortName>Str</shortName>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Dexterity</name>
              <shortName>Dex</shortName>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Constitution</name>
              <shortName>Con</shortName>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Intelligence</name>
              <shortName>Int</shortName>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Willpower</name>
              <shortName>Wil</shortName>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Personality</name>
              <shortName>Per</shortName>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Move</name>
              <highPriority>true</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Actions</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Actions </name>
              <highPriority>true</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
              <defaultValue>{getProperty(&quot;Actions&quot;)} / {json.get(getProperty(&quot;Natural Statistics&quot;),&quot;Actions Per Round&quot;)}</defaultValue>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Action Spent</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Stun</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Stun </name>
              <highPriority>true</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
              <defaultValue>{getProperty(&quot;Stun&quot;)} / {json.get(getProperty(&quot;Natural Statistics&quot;),&quot;Stun&quot;)}</defaultValue>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Wound</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Wound </name>
              <highPriority>true</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
              <defaultValue>{getProperty(&quot;Wound&quot;)} / {json.get(getProperty(&quot;Natural Statistics&quot;),&quot;Wound&quot;)}</defaultValue>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Mortal</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Mortal </name>
              <highPriority>true</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
              <defaultValue>{getProperty(&quot;Mortal&quot;)} / {json.get(getProperty(&quot;Natural Statistics&quot;),&quot;Mortal&quot;)}</defaultValue>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Fatigue</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Fatigue </name>
              <highPriority>true</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
              <defaultValue>{getProperty(&quot;Fatigue&quot;)} / {json.get(getProperty(&quot;Natural Statistics&quot;),&quot;Fatigue&quot;)}</defaultValue>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Modern Ranged Weapons</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Pistol</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Movement</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Profession</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Situation Bonus</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Race</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Action Check</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Natural Statistics</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Last Resort Info</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Last Resorts</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Inventory</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Money</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Equipment</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Skill Points</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Additional Broad Skills</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Skills</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Broad Skills</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Free Broad Skills</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Specialist Skills</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Achievement Points</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Level</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Refresh Character Sheet</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Unarmed Statistics</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Dual Action</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Disable Action</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Stun Recovering</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Rounds Since Stunned</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Rounds Since Stunned Check</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
          </list>
        </entry>
        <entry>
          <string>BW</string>
          <list>
            <net.rptools.maptool.model.TokenProperty>
              <name>Phase Actions</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>GM Settings</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Complex Skill Checks</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
          </list>
        </entry>
        <entry>
          <string>Library</string>
          <list>
            <net.rptools.maptool.model.TokenProperty>
              <name>raceMinMax</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Skills</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Weapon</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Armor</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Items</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>SkillDatabase</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>SkillNameList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>SkillsList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>strengthList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>dexterityList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>constitutionList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>intelligenceList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>willpowerList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>personalityList</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
            <net.rptools.maptool.model.TokenProperty>
              <name>Phase Actions</name>
              <highPriority>false</highPriority>
              <ownerOnly>false</ownerOnly>
              <gmOnly>false</gmOnly>
            </net.rptools.maptool.model.TokenProperty>
          </list>
        </entry>
      </tokenTypeMap>
      <remoteRepositoryList/>
      <lightSourcesMap class="tree-map">
        <entry>
          <string>D20</string>
          <map>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY3PCvh0CAAAAAKgCYw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>15.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                  <net.rptools.maptool.model.Light>
                    <paint class="net.rptools.maptool.model.drawing.DrawableColorPaint">
                      <color>-16777216</color>
                    </paint>
                    <facingOffset>0.0</facingOffset>
                    <radius>30.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>Lamp - 15</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCYyXCvh0BAAAAAKgCIQ==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>5.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                  <net.rptools.maptool.model.Light>
                    <paint class="net.rptools.maptool.model.drawing.DrawableColorPaint">
                      <color>-16777216</color>
                    </paint>
                    <facingOffset>0.0</facingOffset>
                    <radius>10.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>Candle - 5</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY3PCvh0FAAAAAKgCYw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>30.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                  <net.rptools.maptool.model.Light>
                    <paint class="net.rptools.maptool.model.drawing.DrawableColorPaint">
                      <color>-16777216</color>
                    </paint>
                    <facingOffset>0.0</facingOffset>
                    <radius>60.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>Lantern, Hooded - 30</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY3PCvh0EAAAAAKgCYw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>20.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                  <net.rptools.maptool.model.Light>
                    <paint class="net.rptools.maptool.model.drawing.DrawableColorPaint">
                      <color>-16777216</color>
                    </paint>
                    <facingOffset>0.0</facingOffset>
                    <radius>40.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>Everburning - 20</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY3PCvh0DAAAAAKgCYw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>20.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                  <net.rptools.maptool.model.Light>
                    <paint class="net.rptools.maptool.model.drawing.DrawableColorPaint">
                      <color>-16777216</color>
                    </paint>
                    <facingOffset>0.0</facingOffset>
                    <radius>40.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>Torch - 20</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY3PCvh0GAAAAAKgCYw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>30.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                  <net.rptools.maptool.model.Light>
                    <paint class="net.rptools.maptool.model.drawing.DrawableColorPaint">
                      <color>-16777216</color>
                    </paint>
                    <facingOffset>0.0</facingOffset>
                    <radius>60.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>Sunrod - 30</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
          </map>
        </entry>
        <entry>
          <string>Generic</string>
          <map>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY4PCvh0IAAAAAKgCAw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>15.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>15</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY4PCvh0HAAAAAKgCAw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>5.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>5</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY4PCvh0MAAAAAKgCAw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>60.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>60</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY4PCvh0LAAAAAKgCAw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>40.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>40</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY4PCvh0KAAAAAKgCAw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>30.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>30</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
            <entry>
              <net.rptools.maptool.model.GUID>
                <baGUID>wKgCY4PCvh0JAAAAAKgCAw==</baGUID>
              </net.rptools.maptool.model.GUID>
              <net.rptools.maptool.model.LightSource>
                <lightList class="linked-list">
                  <net.rptools.maptool.model.Light>
                    <facingOffset>0.0</facingOffset>
                    <radius>20.0</radius>
                    <arcAngle>90.0</arcAngle>
                    <shape>CIRCLE</shape>
                    <isGM>false</isGM>
                    <ownerOnly>false</ownerOnly>
                  </net.rptools.maptool.model.Light>
                </lightList>
                <name>20</name>
                <id reference="../../net.rptools.maptool.model.GUID"/>
                <type>NORMAL</type>
                <lumens>0</lumens>
                <scaleWithToken>false</scaleWithToken>
              </net.rptools.maptool.model.LightSource>
            </entry>
          </map>
        </entry>
      </lightSourcesMap>
      <lookupTableMap>
        <entry>
          <string>Weapons</string>
          <net.rptools.maptool.model.LookupTable>
            <entryList>
              <net.rptools.maptool.model.LookupTable_-LookupEntry>
                <min>1</min>
                <max>1</max>
                <value>ordinaryDamage=1d6; ordinaryType=stun; goodDamage=1d6+2; goodType=wound; amazingDamage=1d4+2; amazingType=critical</value>
              </net.rptools.maptool.model.LookupTable_-LookupEntry>
            </entryList>
            <name>Weapons</name>
            <defaultRoll>d1</defaultRoll>
            <visible>true</visible>
            <allowLookup>true</allowLookup>
          </net.rptools.maptool.model.LookupTable>
        </entry>
      </lookupTableMap>
      <sightTypeMap>
        <entry>
          <string>Lowlight</string>
          <net.rptools.maptool.model.SightType>
            <name>Lowlight</name>
            <multiplier>2.0</multiplier>
            <shape>CIRCLE</shape>
            <arc>90</arc>
            <distance>0.0</distance>
            <offset>0</offset>
            <scaleWithToken>false</scaleWithToken>
          </net.rptools.maptool.model.SightType>
        </entry>
        <entry>
          <string>Darkvision</string>
          <net.rptools.maptool.model.SightType>
            <name>Darkvision</name>
            <multiplier>1.0</multiplier>
            <personalLightSource>
              <lightList class="linked-list">
                <net.rptools.maptool.model.Light>
                  <facingOffset>0.0</facingOffset>
                  <radius>60.0</radius>
                  <arcAngle>90.0</arcAngle>
                  <shape>CIRCLE</shape>
                  <isGM>false</isGM>
                  <ownerOnly>false</ownerOnly>
                </net.rptools.maptool.model.Light>
              </lightList>
              <type>NORMAL</type>
              <lumens>0</lumens>
              <scaleWithToken>false</scaleWithToken>
            </personalLightSource>
            <shape>CIRCLE</shape>
            <arc>90</arc>
            <distance>62.5</distance>
            <offset>0</offset>
            <scaleWithToken>false</scaleWithToken>
          </net.rptools.maptool.model.SightType>
        </entry>
        <entry>
          <string>Normal Vision - Short Range</string>
          <net.rptools.maptool.model.SightType>
            <name>Normal Vision - Short Range</name>
            <multiplier>1.0</multiplier>
            <shape>CIRCLE</shape>
            <arc>90</arc>
            <distance>12.5</distance>
            <offset>0</offset>
            <scaleWithToken>false</scaleWithToken>
          </net.rptools.maptool.model.SightType>
        </entry>
        <entry>
          <string>Normal</string>
          <net.rptools.maptool.model.SightType>
            <name>Normal</name>
            <multiplier>1.0</multiplier>
            <shape>CIRCLE</shape>
            <arc>90</arc>
            <distance>0.0</distance>
            <offset>0</offset>
            <scaleWithToken>false</scaleWithToken>
          </net.rptools.maptool.model.SightType>
        </entry>
        <entry>
          <string>Conic Vision</string>
          <net.rptools.maptool.model.SightType>
            <name>Conic Vision</name>
            <multiplier>1.0</multiplier>
            <shape>CONE</shape>
            <arc>120</arc>
            <distance>0.0</distance>
            <offset>0</offset>
            <scaleWithToken>false</scaleWithToken>
          </net.rptools.maptool.model.SightType>
        </entry>
        <entry>
          <string>Square Vision</string>
          <net.rptools.maptool.model.SightType>
            <name>Square Vision</name>
            <multiplier>1.0</multiplier>
            <shape>SQUARE</shape>
            <arc>90</arc>
            <distance>0.0</distance>
            <offset>0</offset>
            <scaleWithToken>false</scaleWithToken>
          </net.rptools.maptool.model.SightType>
        </entry>
      </sightTypeMap>
      <defaultSightType>Normal</defaultSightType>
      <tokenStates class="linked-hash-map">
        <entry>
          <string>Unconcious (Stun)</string>
          <net.rptools.maptool.client.ui.token.CornerImageTokenOverlay>
            <name>Unconcious (Stun)</name>
            <order>0</order>
            <group></group>
            <mouseover>false</mouseover>
            <opacity>60</opacity>
            <showGM>true</showGM>
            <showOwner>true</showOwner>
            <showOthers>true</showOthers>
            <assetId>
              <id>bee83921826592d3eb29c436dc966f80</id>
            </assetId>
            <corner>NORTH_WEST</corner>
          </net.rptools.maptool.client.ui.token.CornerImageTokenOverlay>
        </entry>
        <entry>
          <string>Unconcious (Wound)</string>
          <net.rptools.maptool.client.ui.token.CornerImageTokenOverlay>
            <name>Unconcious (Wound)</name>
            <order>1</order>
            <group></group>
            <mouseover>false</mouseover>
            <opacity>80</opacity>
            <showGM>true</showGM>
            <showOwner>true</showOwner>
            <showOthers>true</showOthers>
            <assetId>
              <id>5c6bc8b5ec0f5ea9b423d02ced7435d5</id>
            </assetId>
            <corner>NORTH_WEST</corner>
          </net.rptools.maptool.client.ui.token.CornerImageTokenOverlay>
        </entry>
        <entry>
          <string>Dead</string>
          <net.rptools.maptool.client.ui.token.ImageTokenOverlay>
            <name>Dead</name>
            <order>2</order>
            <group></group>
            <mouseover>false</mouseover>
            <opacity>80</opacity>
            <showGM>true</showGM>
            <showOwner>true</showOwner>
            <showOthers>true</showOthers>
            <assetId>
              <id>70bca92c7929cd14e1df42802e0bc713</id>
            </assetId>
          </net.rptools.maptool.client.ui.token.ImageTokenOverlay>
        </entry>
        <entry>
          <string>Prone</string>
          <net.rptools.maptool.client.ui.token.CornerImageTokenOverlay>
            <name>Prone</name>
            <order>3</order>
            <group></group>
            <mouseover>false</mouseover>
            <opacity>100</opacity>
            <showGM>true</showGM>
            <showOwner>true</showOwner>
            <showOthers>true</showOthers>
            <assetId>
              <id>1e5ad7e9f752426714a5e49f738bfa03</id>
            </assetId>
            <corner>SOUTH_EAST</corner>
          </net.rptools.maptool.client.ui.token.CornerImageTokenOverlay>
        </entry>
      </tokenStates>
      <tokenBars class="linked-hash-map">
        <entry>
          <string>Mortal</string>
          <net.rptools.maptool.client.ui.token.DrawnBarTokenOverlay>
            <name>Mortal</name>
            <order>0</order>
            <mouseover>true</mouseover>
            <opacity>100</opacity>
            <showGM>true</showGM>
            <showOwner>true</showOwner>
            <showOthers>true</showOthers>
            <increments>1</increments>
            <side>TOP</side>
            <barColor>
              <red>255</red>
              <green>0</green>
              <blue>0</blue>
              <alpha>255</alpha>
            </barColor>
            <thickness>6</thickness>
          </net.rptools.maptool.client.ui.token.DrawnBarTokenOverlay>
        </entry>
        <entry>
          <string>Wound</string>
          <net.rptools.maptool.client.ui.token.DrawnBarTokenOverlay>
            <name>Wound</name>
            <order>1</order>
            <mouseover>true</mouseover>
            <opacity>100</opacity>
            <showGM>true</showGM>
            <showOwner>true</showOwner>
            <showOthers>true</showOthers>
            <increments>1</increments>
            <side>TOP</side>
            <barColor>
              <red>255</red>
              <green>255</green>
              <blue>0</blue>
              <alpha>255</alpha>
            </barColor>
            <thickness>4</thickness>
          </net.rptools.maptool.client.ui.token.DrawnBarTokenOverlay>
        </entry>
        <entry>
          <string>Stun</string>
          <net.rptools.maptool.client.ui.token.DrawnBarTokenOverlay>
            <name>Stun</name>
            <order>2</order>
            <mouseover>true</mouseover>
            <opacity>100</opacity>
            <showGM>true</showGM>
            <showOwner>true</showOwner>
            <showOthers>true</showOthers>
            <increments>1</increments>
            <side>TOP</side>
            <barColor>
              <red>0</red>
              <green>204</green>
              <blue>204</blue>
              <alpha>255</alpha>
            </barColor>
            <thickness>2</thickness>
          </net.rptools.maptool.client.ui.token.DrawnBarTokenOverlay>
        </entry>
      </tokenBars>
      <characterSheets>
        <entry>
          <string>Basic</string>
          <string>net/rptools/maptool/client/ui/forms/basicCharacterSheet.xml</string>
        </entry>
      </characterSheets>
      <initiativeOwnerPermissions>false</initiativeOwnerPermissions>
      <initiativeMovementLock>true</initiativeMovementLock>
      <initiativeUseReverseSort>false</initiativeUseReverseSort>
      <initiativePanelButtonsDisabled>false</initiativePanelButtonsDisabled>
    </campaignProperties>
    <macroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>63</index>
        <colorKey>fuchsia</colorKey>
        <hotKey>None</hotKey>
        <command>[macro (&quot;Add Skills@Lib:bw&quot;): &quot;&quot;]</command>
        <label>Add Skills</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>57</index>
        <colorKey>navy</colorKey>
        <hotKey>None</hotKey>
        <command>[h, if(getInitiativeRound() &gt;= 0): assert(0,&quot;Cannot swap equipment during combat.&quot;,0)]

[h: selectOwned()]

[h: abort(input(
&quot;locationChoice|Main Hand,Off Hand,Head,Chest,Accessory|Choose where you wish to equip|LIST|Select = 0 VALUE = STRING&quot;
))]

[h: &quot;&lt;!-- If Equipment Property is Empty, format. --&gt;&quot;]

[h: equipmentIsEmpty = isPropertyEmpty(&quot;Equipment&quot;,playerTokenID)]
[h, if(equipmentIsEmpty), code :{
	[h: equipmentInput = json.set(&quot;&quot;,&quot;Head&quot;,&quot;&quot;,&quot;Head Type&quot;,&quot;&quot;,&quot;Chest&quot;,&quot;&quot;,&quot;Chest Type&quot;,&quot;&quot;,&quot;Main Hand&quot;,&quot;&quot;,&quot;Main Hand Type&quot;,&quot;&quot;,&quot;Off Hand&quot;,&quot;&quot;,&quot;Off Hand Type&quot;,&quot;&quot;,&quot;Accessory&quot;,&quot;&quot;,&quot;Accessory Type&quot;,&quot;&quot;)]
	[h: setProperty(&quot;Equipment&quot;,equipmentInput,playerTokenID)]
	};{
	[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
	
	[h, if(json.isEmpty(equipmentLookup)), code :{
		[h: equipmentInput = json.set(&quot;&quot;,&quot;Head&quot;,&quot;&quot;,&quot;Head Type&quot;,&quot;&quot;,&quot;Chest&quot;,&quot;&quot;,&quot;Chest Type&quot;,&quot;&quot;,&quot;Main Hand&quot;,&quot;&quot;,&quot;Main Hand Type&quot;,&quot;&quot;,&quot;Off Hand&quot;,&quot;&quot;,&quot;Off Hand Type&quot;,&quot;&quot;,&quot;Accessory&quot;,&quot;&quot;,&quot;Accessory Type&quot;,&quot;&quot;)]
		[h: setProperty(&quot;Equipment&quot;,equipmentInput,playerTokenID)]
		};{
		[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
		}
	]
	}
]



[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
[h: nameOfEquippedInLocation = json.get(equipmentLookup,locationChoice)]
[h: typeOfEquippedInLocation = json.get(equipmentLookup,locationChoice + &quot; Type&quot;)]

[h: &quot;&lt;!-- If there&apos;s something in the locationChoice --&gt;&quot;]

[h, if(nameOfEquippedInLocation != &quot;&quot;), code :{

	[h: &quot;&lt;!-- Prompt and process unequip if Yes else abort --&gt;&quot;]

	[h: abort(input(&quot;unequipChoice|No,Yes|Do you wish to unequip &quot; + nameOfEquippedInLocation + &quot;?|radio|select = 1&quot;))]
	[h: abort(unequipChoice)]
	
	[h: &quot;&lt;!-- Get equipped item slot type --&gt;&quot;]
	
	[h: equippedItemLookup = json.get(getLibProperty(typeOfEquippedInLocation,&quot;Lib:Library&quot;),nameOfEquippedInLocation)]
	[h: equippedItemEquipSlot = json.get(equippedItemLookup,&quot;equipSlot&quot;)]
	
	[h: &quot;&lt;!-- If Full, make list - Helmet, Chest --&gt;&quot;]
	
	[h, if(equippedItemEquipSlot == &quot;Full&quot;), code :{
		[h: equippedItemEquipSlot = &quot;Helmet, Chest&quot;]
	};{}]
	
	[h: &quot;&lt;!-- For each slot the unequipping item occupies make equipOutput empty --&gt;&quot;]
	[h, if (equippedItemEquipSlot == &quot;Full&quot;): equippedItemEquipSlots = &quot;Helmet, Chest&quot;]
	[h, if (equippedItemEquipSlot == &quot;Chest&quot;): equippedItemEquipSlots = &quot;Chest&quot;]
	[h, if (equippedItemEquipSlot == &quot;Main Hand&quot;): equippedItemEquipSlots = &quot;Main Hand&quot;]
	[h, if ((equippedItemEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Main Hand&quot;)): equippedItemEquipSlots = &quot;Main Hand&quot;]
	[h, if ((equippedItemEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Off Hand&quot;)): equippedItemEquipSlots = &quot;Off Hand&quot;]
	[h, if (equippedItemEquipSlot == &quot;Two Hands&quot;): equippedItemEquipSlots = &quot;Main Hand, Off Hand&quot;]
	[h, if (equippedItemEquipSlot == &quot;Helmet&quot;): equippedItemEquipSlots = &quot;Head&quot;]
	[h, if (equippedItemEquipSlot == &quot;Shield&quot;): equippedItemEquipSlots = &quot;Off Hand&quot;]
	[h: equipOutput = equipmentLookup]
	[h, foreach(slot,equippedItemEquipSlots), code :{
		[h: equipOutput = json.set(equipOutput,slot,&quot;&quot;)]
		[h: equipOutput = json.set(equipOutput,slot + &quot; Type&quot;,&quot;&quot;)]		
	}]
	
	
	[h: &quot;&lt;!-- Save unequipped input as property --&gt;&quot;]
	
	[h: setProperty(&quot;Equipment&quot;,equipOutput,playerTokenID)]

	[h: &quot;&lt;!-- Apply unequipped item to Inventory --&gt;&quot;]
	
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputItem = json.get(inputInventory,nameOfEquippedInLocation)]
	
	[h: &quot;&lt;!-- If none of the unequipping item in Inventory, set quantity to 1 and apply, otherwise +1 and apply --&gt;&quot;]
	
	[h: empty = json.isEmpty(inputItem)]
	[h, if(empty == 1), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,nameOfEquippedInLocation,&quot;Quantity&quot;,1,&quot;Type&quot;,typeOfEquippedInLocation)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputitemQuantity = json.get(inputitem,&quot;Quantity&quot;)]
		[h: outputitemQuantity = inputitemQuantity + 1]
		[h: outputitem = json.set(inputitem,&quot;Name&quot;,nameOfEquippedInLocation,&quot;Quantity&quot;,outputitemQuantity,&quot;Type&quot;,typeOfEquippedInLocation)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation,outputitem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]
		
	[h: &quot;&lt;!-- Broadcast Player unequipped Item --&gt;&quot;]
	
	[h: broadcast(playerTokenName + &quot; unequipped &quot; + nameOfEquippedInLocation + &quot;.&quot;)]
	
};{}]

[h: &quot;&lt;!-- Get lookup jsons --&gt;&quot;]

[h: inventoryLookup = getProperty(&quot;Inventory&quot;,playerTokenID)]
[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
[h: weaponLookup = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]
[h: armorLookup = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]

[h: inventoryList = json.toList(inventoryLookup)]
[h: inventoryList2 = &quot;&quot;]

[h: &apos;&lt;!-- Remove items which are not in library database --&gt;&apos;]
[h, foreach(item,inventoryList), code :{
	[h: var1 = json.get(inventoryLookup,item)]
	[h: itemType = json.get(var1,&quot;Type&quot;)]
	[h, if (itemType == &quot;Weapon&quot;): relevantLookup = weaponLookup]
	[h, if (itemType == &quot;Armor&quot;): relevantLookup = armorLookup]
	[h: contains = json.contains(relevantLookup,item)]
	[h, if (contains): inventoryList2 = listAppend(inventoryList2,item)]
	[h, if (! contains), code :{
		[h: inventoryLookup = json.remove(inventoryLookup,item)]
		};{
		}
	]

	}
]

[h: equippableInSlotInventoryList = &quot;&quot;]

[h: &quot;&lt;!-- For each item in the token&apos;s inventory --&gt;&quot;]

[h, foreach(item,inventoryList2), code: {
	
	[h: &quot;&lt;!-- Get correct lookup json --&gt;&quot;]
	[h: var1 = json.get(inventoryLookup,item)]
	[h: itemType = json.get(var1,&quot;Type&quot;)]
	[h, if (itemType == &quot;Weapon&quot;): relevantLookup = weaponLookup]
	[h, if (itemType == &quot;Armor&quot;): relevantLookup = armorLookup]
	[h, if (itemType == &quot;Item&quot;), code :{
		[h: var2 = json.set(&quot;&quot;,&quot;equipSlot&quot;,&quot;None&quot;)]
		[h: relevantLookup = json.set(&quot;&quot;,item,var2)]
	};{}]
	
	[h: &quot;&lt;!-- Get slot(s) each item can be equipped in --&gt;&quot;]
	[h: relevantItem = json.get(relevantLookup,item)]
	[h: equippableItemSlots = json.get(relevantItem,&quot;equipSlot&quot;)]
	[h, if (equippableItemSlots == &quot;Full&quot;): itemSlots = &quot;Helmet, Chest&quot;]
	[h, if (equippableItemSlots == &quot;Chest&quot;): itemSlots = &quot;Chest&quot;]
	[h, if (equippableItemSlots == &quot;Main Hand&quot;): itemSlots = &quot;Main Hand&quot;]
	[h, if (equippableItemSlots == &quot;Either Hand&quot;): itemSlots = &quot;Main Hand, Off Hand&quot;]
	[h, if (equippableItemSlots == &quot;Two Hands&quot;): itemSlots = &quot;Main Hand, Off Hand&quot;]
	[h, if (equippableItemSlots == &quot;Helmet&quot;): itemSlots = &quot;Head&quot;]
	[h, if (equippableItemSlots == &quot;Shield&quot;): itemSlots = &quot;Off Hand&quot;]
	
	[h: &quot;&lt;!-- For each slot the item can be equipped in, if it matches locationChoice, add to list equippableInSlotInventoryList --&gt;&quot;]
	[h, foreach (slot,itemSlots), code :{
		[h: doesEquippableInSlotInventoryListContainItemAlready = listContains(equippableInSlotInventoryList, item)]
		[h, if ((slot == locationChoice)&amp;&amp;(doesEquippableInSlotInventoryListContainItemAlready == 0)): equippableInSlotInventoryList = listAppend(equippableInSlotInventoryList,item)]
	}]
}]

[h: &quot;&lt;!-- If list empty, assert.  Add none list item --&gt;&quot;]

[h, if(equippableInSlotInventoryList == &quot;&quot;): assert(0,&quot;You have no items eligible to equip in &quot; + locationChoice + &quot;.&quot;,0)]
[h: equippableInSlotInventoryList = listAppend(equippableInSlotInventoryList,&quot;None&quot;)]

[h: &quot;&lt;!-- Prompt player for correct equip choice from equippableInSlotInventoryList --&gt;&quot;]

[h: abort(input(
&quot;itemChoice|&quot;+equippableInSlotInventoryList+&quot;|Choose an item to equip in &quot;+locationChoice+&quot;|LIST|Select = 0 VALUE = STRING&quot;
))]

[h: &quot;&lt;!-- Fudge Vars for None --&gt;&quot;]

[h, if (itemChoice == &quot;None&quot;), code :{
	[h: equippableItemSlots = &quot;None&quot;]
	[h: inventoryLookup = json.set(inventoryLookup,&quot;None&quot;,json.set(&quot;&quot;,&quot;Type&quot;,&quot;None&quot;))]
	};{}]

[h: &quot;&lt;!-- Equip item in all slots it takes up --&gt;&quot;]
[h: &quot;&lt;!-- Preform item slots of itemChoice --&gt;&quot;]

[h: var3 = json.get(inventoryLookup,itemChoice)]
[h: itemType = json.get(var3,&quot;Type&quot;)]
[h, if (itemType == &quot;Weapon&quot;): relevantLookup = weaponLookup]
[h, if (itemType == &quot;Armor&quot;): relevantLookup = armorLookup]
[h, if (itemType == &quot;Item&quot;): assert(0,&quot;Item type should not have equip slot&quot;,1)]

[h: &quot;&lt;!-- If item is not None, get equipable slots--&gt;&quot;]

[h, if (itemType != &quot;None&quot;), code :{
	[h: relevantItem = json.get(relevantLookup,itemChoice)]
	[h: equippableItemSlots = json.get(relevantItem,&quot;equipSlot&quot;)]
	};{
}]
	
[h, if (equippableItemSlots == &quot;Full&quot;): itemSlots2 = &quot;Helmet, Chest&quot;]
[h, if (equippableItemSlots == &quot;Chest&quot;): itemSlots2 = &quot;Chest&quot;]
[h, if (equippableItemSlots == &quot;Main Hand&quot;): itemSlots2 = &quot;Main Hand&quot;]
[h, if ((equippableItemSlots == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Main Hand&quot;)): itemSlots2 = &quot;Main Hand&quot;]
[h, if ((equippableItemSlots == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Off Hand&quot;)): itemSlots2 = &quot;Off Hand&quot;]
[h, if (equippableItemSlots == &quot;Two Hands&quot;): itemSlots2 = &quot;Main Hand, Off Hand&quot;]
[h, if (equippableItemSlots == &quot;Helmet&quot;): itemSlots2 = &quot;Head&quot;]
[h, if (equippableItemSlots == &quot;Shield&quot;): itemSlots2 = &quot;Off Hand&quot;]
[h, if (equippableItemSlots == &quot;None&quot;): itemSlots2 = locationChoice]

[h: &quot;&lt;!-- For each slot the equipping item takes up --&gt;&quot;]
[h: &quot;&lt;!-- Make sure each slot is empty before equip --&gt;&quot;]
[h: &quot;&lt;!-- If two handed weapon, prompt unequip in other hand if not empty --&gt;&quot;]

[h: otherHand = &quot;&quot;]
[h, if((equippableItemSlots == &quot;Two Hands&quot;)&amp;&amp;(locationChoice == &quot;Main Hand&quot;)): otherHand = &quot;Off Hand&quot;]
[h, if((equippableItemSlots == &quot;Two Hands&quot;)&amp;&amp;(locationChoice == &quot;Off Hand&quot;)): otherHand = &quot;Main Hand&quot;]

[h: equipmentLookup2 = getProperty(&quot;Equipment&quot;,playerTokenID)]
[h: nameOfEquippedInLocation2 = json.get(equipmentLookup2,otherHand)]
[h: typeOfEquippedInLocation2 = json.get(equipmentLookup2,otherHand + &quot; Type&quot;)]

[h: &quot;&lt;!-- If there&apos;s something in the otherHand --&gt;&quot;]

[h, if((nameOfEquippedInLocation2 != &quot;&quot;)&amp;&amp;(otherHand != &quot;&quot;)), code :{

	[h: abort(input(&quot;unequipChoice|No,Yes|You will need to also unequip &quot; + nameOfEquippedInLocation2 + &quot; from your &quot; + otherHand + &quot; to equip &quot;+ itemChoice +&quot;. Unequip?|radio|select = 1&quot;))]
	[h: abort(unequipChoice)]
	
	[h: &quot;&lt;!-- Get equipped item slot type --&gt;&quot;]
	
	[h: equippedItemLookup = json.get(getLibProperty(typeOfEquippedInLocation2,&quot;Lib:Library&quot;),nameOfEquippedInLocation2)]
	[h: equippedItemEquipSlot = json.get(equippedItemLookup,&quot;equipSlot&quot;)]

	[h: &quot;&lt;!-- Save unequipped input as property --&gt;&quot;]
	
	[h: equipOutput = json.set(equipOutput,otherHand,&quot;&quot;)]
	[h: equipOutput = json.set(equipOutput,otherHand + &quot; Type&quot;,&quot;&quot;)]	
	
	[h: setProperty(&quot;Equipment&quot;,equipOutput,playerTokenID)]

	[h: &quot;&lt;!-- Apply unequipped item to Inventory --&gt;&quot;]
	
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputItem = json.get(inputInventory,nameOfEquippedInLocation2)]
	
	[h: &quot;&lt;!-- If none of the unequipping item in Inventory, set quantity to 1 and apply, otherwise +1 and apply --&gt;&quot;]
	
	[h: empty = json.isEmpty(inputItem)]
	[h, if(empty == 1), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,nameOfEquippedInLocation2,&quot;Quantity&quot;,1,&quot;Type&quot;,typeOfEquippedInLocation2)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation2,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputitemQuantity = json.get(inputitem,&quot;Quantity&quot;)]
		[h: outputitemQuantity = inputitemQuantity + 1]
		[h: outputitem = json.set(inputitem,&quot;Name&quot;,nameOfEquippedInLocation2,&quot;Quantity&quot;,outputitemQuantity,&quot;Type&quot;,typeOfEquippedInLocation2)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation2,outputitem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]
		
	[h: &quot;&lt;!-- Broadcast Player unequipped Item --&gt;&quot;]
	
	[h: broadcast(playerTokenName + &quot; unequipped &quot; + nameOfEquippedInLocation2 + &quot;.&quot;)]
	
	};{}
]

[h: &quot;&lt;!-- Refresh lookups due to updates --&gt;&quot;]
	
[h: inventoryLookup = getProperty(&quot;Inventory&quot;,playerTokenID)]
[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]	

[h, foreach (slot,itemSlots2), code :{
	[h: slotName =  json.get(equipmentLookup,slot)]
	[h: jsonIsEmpty = json.isEmpty(slotName)]
	[h, if(! jsonIsEmpty): assert(0,&quot;Expected empty equipment slot contains an item&quot;,1)]
	}]

[h: &quot;&lt;!-- Insert item into equipment slots for output --&gt;&quot;]	
[h, if(itemChoice == &quot;None&quot;): itemType = &quot;&quot;]
[h, if(itemChoice == &quot;None&quot;): itemChoice = &quot;&quot;]
[h: equipmentOutput = equipmentLookup]	

[h, foreach (slot,itemSlots2), code :{
	[h: equipmentOutput = json.set(equipmentOutput,slot,itemChoice,slot + &quot; Type&quot;,itemType)]
	}]
	
[h: &quot;&lt;!-- Update token equipment property with equipmentOutput as value --&gt;&quot;]	

[h: setProperty(&quot;Equipment&quot;,equipmentOutput,playerTokenID)]
[h, if(itemChoice == &quot;&quot;): itemChoice = &quot;nothing&quot;]
[h, if(equippableItemSlots == &quot;Two Hands&quot;), code :{
	[h: broadcast(playerTokenName + &quot; equipped &quot; + itemChoice + &quot; in both hands.&quot; , &quot;gm, getPlayerName()&quot;)]
	};{
	[h: broadcast(playerTokenName + &quot; equipped &quot; + itemChoice + &quot; in their &quot; + locationChoice + &quot; slot.&quot;, &quot;gm, getPlayerName()&quot;)]
	}
]</command>
        <label>Equip</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>silver</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>177</index>
        <colorKey>red</colorKey>
        <hotKey>F2</hotKey>
        <command>	
	[h: &apos;&lt;!-- Abort if target token has no owner or more than one target --&gt;&apos;]
	[h: selected = getSelected()]
	[h, if (listCount(selected) &gt; 1): assert(0,&quot;You must target only one token&quot;,0)]
	[h: selectedOwner = getOwners(&quot;,&quot;,selected)]
	[h, if (listCount(selectedOwner) &lt; 1): assert(0,&quot;Target token must be assigned an owner&quot;,0)]
	[h, if (listCount(selectedOwner) &gt; 1): assert(0,&quot;Target token must only be assigned ONE owner&quot;,0)]
	[h: initiativeOwners = getOwners(&quot;,&quot;,getInitiativeToken())]
	[h, if (listCount(initiativeOwners) &lt; 1): assert(0,&quot;Target token must be assigned an owner&quot;,0)]
	[h, if (listCount(initiativeOwners) &gt; 1): assert(0,&quot;Target token must only be assigned ONE owner&quot;,0)]
	
	[h: &quot;&lt;!-- Initialise Variables --&gt;&quot;]
	
	[h: selectedStrModifier = 0]
	[h: selectedDexModifier = 0]
	
	[h: &quot;&lt;!-- End Initialise Variables --&gt;&quot;]
	
	[h: initiative = getInitiativeToken()]
	
	[h: freeActions = getGMSetting(&quot;freeActions&quot;)]
	[h: initiativeActions = getProperty(&quot;Actions&quot;,initiative)]
	[h: actionSpent = getProperty(&quot;Action Spent&quot;,initiative)]
	[h, if((freeActions == 0)&amp;&amp;(initiativeActions &lt;= 0)), code :{[h: assert(0,&quot;Initiative Token has no actions remaining&quot;,0)]};{}]
	[h, if((freeActions == 0)&amp;&amp;(actionSpent)), code :{[h: assert(0,&quot;You have used your action this phase&quot;,0)]};{}]
	
	[h: selected = getSelected()]
	[h, if (listCount(selected) &gt; 1), code :{
		[h: broadcast (&quot;You can only select one token to target&quot;,getPlayerName())]
		[h: abort(0)]};{}]
		
	[h, if (listCount(selected) &lt; 1): abort(0)]
	
	[h: assert(! getPropVar(&quot;Disable Action&quot;,initiative,0), getName(initiative) + &quot; is currently performing an action.&quot;,0)]
		
	[h: selectedName = getName(selected)]
	[h: initiativeName = getName(initiative)]
	[h, if(initiative == selected): assert(0, &quot;You can`t shoot yourself!&quot;, 0)]
	
	[h: mainHandType = &quot;&quot;]
	[h: offHandType = &quot;&quot;]

	[h: &quot;&lt;!-- Input box for weapons --&gt;&quot;]
	
	[h: tokenEquipment = getProperty(&quot;Equipment&quot;,initiative)]
	[h: mainHandName = json.get(tokenEquipment,&quot;Main Hand&quot;)]
	[h: offHandName = json.get(tokenEquipment,&quot;Off Hand&quot;)]
	[h, if (json.isEmpty(mainHandName)): tokenEquipment = json.set(tokenEquipment,&quot;Main Hand&quot;,&quot;Unarmed&quot;,&quot;Main Hand Type&quot;,&quot;Unarmed&quot;)]
	[h, if (json.isEmpty(offHandName)): tokenEquipment = json.set(tokenEquipment,&quot;Off Hand&quot;,&quot;Unarmed&quot;,&quot;Off Hand Type&quot;,&quot;Unarmed&quot;)]
	[h: weaponDatabase = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]
	[h: armorDatabase = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]
	[h: mainHandType = json.get(tokenEquipment,&quot;Main Hand Type&quot;)]
	[h: offHandType = json.get(tokenEquipment,&quot;Off Hand Type&quot;)]
	
	[h, if(mainHandType == &quot;Weapon&quot;), code :{
		[h: mainHandStats = json.get(weaponDatabase,mainHandName)]
		[h: mainHandEquipSlot = json.get(mainHandStats,&quot;equipSlot&quot;)]
		};{
		}
	]
	[h, if(mainHandType == &quot;Armor&quot;), code :{
		[h: mainHandStats = json.get(armorDatabase,mainHandName)]
		[h: mainHandEquipSlot = json.get(mainHandStats,&quot;equipSlot&quot;)]
		};{
		}
	]
	[h: race = getProperty(&quot;Race&quot;,initiative)]
	[h, if(mainHandType == &quot;Unarmed&quot;), code :
		{
		[h: mainHandStats = getProperty(&quot;Unarmed Stats&quot;,initiative)]
		[h: mainHandEquipSlot = &quot;Either Hand&quot;]
		}		
	]
	
	[h, if(mainHandType == &quot;Unarmed&quot;), code :
		{
		[h:	mainHandStats =  getProperty(&quot;Unarmed Statistics&quot;,initiative)]
		[h: mainHandEquipSlot = &quot;Either Hand&quot;]
		}
	]		
	[h, if(offHandType == &quot;Unarmed&quot;), code :
		{
		[h:	offHandStats =  getProperty(&quot;Unarmed Statistics&quot;,initiative)]
		[h: offHandEquipSlot = &quot;Either Hand&quot;]
		}
	]
	
	[h, if(mainHandEquipSlot == &quot;Two Hands&quot;): offHandStats = mainHandStats]
	
	[h, if((mainHandEquipSlot == &quot;Either Hand&quot;)||(mainHandEquipSlot == &quot;Shield&quot;)), code :{
		
		[h: offHandType = json.get(tokenEquipment,&quot;Off Hand Type&quot;)]
		[h, if(offHandType == &quot;Weapon&quot;), code :{
			[h: offHandStats = json.get(weaponDatabase,offHandName)]
			[h: offHandEquipSlot = json.get(offHandStats,&quot;equipSlot&quot;)]
			};{
			}
		]
		[h, if(offHandType == &quot;Armor&quot;),code :{
			[h: offHandStats = json.get(armorDatabase,offHandName)]
			[h: offHandEquipSlot = json.get(offHandStats,&quot;equipSlot&quot;)]
			};{
			}
		]
		[h: offHandWeaponSats = json.get(weaponDatabase,offHandName)]
		};{
		}
	]
	
	[h, if(mainHandEquipSlot == &quot;Two Hands&quot;): offHandEquipSlot = &quot;Two Hands&quot;]
	
	[h, if((mainHandType == &quot;Weapon&quot;)&amp;&amp;(mainHandEquipSlot == &quot;Two Hands&quot;)): weaponName = mainHandName]
	[h, if((mainHandType==&quot;Weapon&quot;)&amp;&amp;(mainHandEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(offHandType == &quot;Weapon&quot;)&amp;&amp;(offHandEquipSlot == &quot;Either Hand&quot;)): weaponName = mainHandName + &quot; &amp; &quot; + offHandName]
	[h, if((mainHandType == &quot;Weapon&quot;)&amp;&amp;(mainHandEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(offHandType == &quot;Shield&quot;)): weaponName = mainHandName]
	[h, if((offHandType == &quot;Weapon&quot;)&amp;&amp;(offHandEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(mainHandType == &quot;Shield&quot;)): weaponName = offHandName]

	[h: dualWielding = if
		(
			
			((mainHandEquipSlot == &quot;Unarmed&quot;)||(mainHandEquipSlot == &quot;Either Hand&quot;))
			&amp;&amp;
			((offHandEquipSlot == &quot;Unarmed&quot;)||(offHandEquipSlot == &quot;Either Hand&quot;))
			
		,1,0)
	]
	
	[h, if(mainHandEquipSlot == &quot;Two Hands&quot;): dualWielding = 0]
	
	[h: mainModes = json.get(mainHandStats,&quot;mode&quot;)]
	[h: mainModeList = &quot;&quot;]
	[h, if (indexOf(mainModes,&quot;F&quot;) != -1): mainModeList = listAppend(mainModeList,&quot;Fire&quot;)]
	[h, if (indexOf(mainModes,&quot;B&quot;) != -1): mainModeList = listAppend(mainModeList,&quot;Burst&quot;)]
	[h, if (indexOf(mainModes,&quot;A&quot;) != -1): mainModeList = listAppend(mainModeList,&quot;Automatic&quot;)]
	[h, if (indexOf(mainModes,&quot;P&quot;) != -1): mainModeList = listAppend(mainModeList,&quot;Personal&quot;)]
	[h, if (indexOf(mainModes,&quot;T&quot;) != -1): mainModeList = listAppend(mainModeList,&quot;Thrown&quot;)]
	
	[h: offModes = json.get(offHandStats,&quot;mode&quot;)]
	[h: offModeList = &quot;&quot;]
	[h, if (indexOf(offModes,&quot;F&quot;) != -1): offModeList = listAppend(offModeList,&quot;Fire&quot;)]
	[h, if (indexOf(offModes,&quot;B&quot;) != -1): offModeList = listAppend(offModeList,&quot;Burst&quot;)]
	[h, if (indexOf(offModes,&quot;A&quot;) != -1): offModeList = listAppend(offModeList,&quot;Automatic&quot;)]
	[h, if (indexOf(offModes,&quot;P&quot;) != -1): offModeList = listAppend(offModeList,&quot;Personal&quot;)]
	[h, if (indexOf(offModes,&quot;T&quot;) != -1): offModeList = listAppend(offModeList,&quot;Thrown&quot;)]
	
	[h, if(listCount(mainModeList) &gt; 1 &amp;&amp; ! dualWielding), code:
		{
		[h: mainModeChoiceString = &quot;|Attack mode|LABEL&quot;]
		};{
		[h: mainModeChoiceString = &quot;|Attack mode|LABEL&quot;]
		[h: selectedMode = mainModeList]
		}
	]

	[h, if(listCount(offModeList) &gt; 1 &amp;&amp; ! dualWielding), code:
		{
		[h: offModeChoiceString = &quot;|Select attack mode|LIST|Select = 0 Value = String&quot;]
		};{
		[h: offModeChoiceString = &quot;|Attack mode|LABEL&quot;]
		[h: selectedMode = offModeList]
		}
	]
	
	[h: dualActionModifier = getPropVar(&quot;Dual Action&quot;,initiative,0)]
	
	[h, if((mainHandEquipSlot == &quot;Two Hands&quot;)&amp;&amp;(dualActionModifier != 0)): assert(0,&quot;You cannot attack twice in the same round with the same weapon&quot;,0)]
	
	[h, if(mainHandName == &quot;&quot;): mainHandName = &quot;Unarmed&quot;]
	[h, if(offHandName == &quot;&quot;): offHandName = &quot;Unarmed&quot;]
	
	[h, if((mainHandEquipSlot != &quot;Two Hands&quot;)&amp;&amp;(dualActionModifier == 0)): inputWeaponName = &quot;junkVar|&quot;+mainHandName+&quot; / &quot;+offHandName+&quot;|Weapons|LABEL&quot;]
	[h, if((mainHandEquipSlot != &quot;Two Hands&quot;)&amp;&amp;(dualActionModifier == 2)): inputWeaponName = &quot;junkVar|&quot;+mainHandName+&quot;|Main Hand Weapon|LABEL&quot;]
	[h, if((mainHandEquipSlot != &quot;Two Hands&quot;)&amp;&amp;(dualActionModifier == 4)): inputWeaponName = &quot;junkVar|&quot;+offHandName+&quot;|Off Hand Weapon|LABEL&quot;]
	[h, if(mainHandEquipSlot == &quot;Two Hands&quot;): inputWeaponName = &quot;junkVar|&quot;+mainHandName+&quot;|Weapon|LABEL&quot;]
	
	[h: obliqueToggle = if(mainHandEquipSlot == &quot;Two Hands&quot;,&quot;&quot;,&quot; / &quot;)]
	[h, if(mainModeList == &quot;&quot;): mainModeListString = &quot;Personal&quot;; mainModeListString = mainModeList]
	[h, if(offModeList == &quot;&quot;): offModeListString = &quot;Personal&quot;; offModeListString = offModeList]
	[h: offModeList = if(mainHandEquipSlot == &quot;Two Hands&quot;,&quot;&quot;,offModeList)]
	[h: lastAction = 1]
	[h: weaponSelection = 0]

	[h: jsonCombined = &quot;&quot;]
	[h, if(mainHandEquipSlot == &quot;Two Hands&quot;), code:
		{[h: jsonCombined = json.fromList(mainModeListString + &quot;,&quot; + offModeListString)]
		[h: combinedListString = json.toList(json.unique(jsonCombined))]
		};{
		[h: combinedListString = mainModeListString + obliqueToggle + offModeListString]
		}
	]
	
	[h, if(dualActionModifier == 0), code :
		{
		[h, if(initiativeActions &gt; 1), code :
			{
			[h: abort(input(
				&quot;junkVar|&quot;+selectedName+&quot;|Current target|LABEL&quot;,
				inputWeaponName,
				&quot;selectedMode|&quot;+ combinedListString + mainModeChoiceString,
				&quot;dualActionModifier|0|Perform two actions at once?|CHECK&quot;
				))
			]
			};{
			[h: abort(input(
				&quot;junkVar|&quot;+selectedName+&quot;|Current target|LABEL&quot;,
				inputWeaponName,
				&quot;selectedMode|&quot;+ combinedListString + mainModeChoiceString
				))
			]
			}
		]
		};{
		[h: abort(input(
			&quot;junkVar|&quot;+selectedName+&quot;|Current target|LABEL&quot;,
			inputWeaponName,
			&quot;selectedMode|&quot;+mainModeList + mainModeChoiceString,
			&quot;junkVar|&lt;html&gt;&lt;b&gt;Second Action (+&quot;+dualActionModifier+&quot;)&lt;/b&gt;&lt;/html&gt;|&lt;html&gt;&lt;b&gt;Performing two actions at once&lt;/b&gt;&lt;/html&gt;|LABEL&quot;
		))]
		}
	]
	
	[h, if(mainHandName == offHandName): chooseWeaponList = mainHandName; chooseWeaponList = mainHandName + &quot;,&quot; + offHandName]
	
	[h, if((dualActionModifier == 0)&amp;&amp;(dualWielding)): abort(input(
			&quot;weaponSelection|&quot;+chooseWeaponList+&quot;|Choose weapon|LIST|Select = 0&quot;
		))
	]
	
	[h, if(weaponSelection == 0): chosenWeaponName = mainHandName]
	[h, if(weaponSelection == 0): modeList = mainModeList]
	[h, if(weaponSelection == 1): chosenWeaponName = offHandName]
	[h, if(weaponSelection == 1): modeList = offModeList]
	[h: modeListCount = listCount(modeList)]
	
	[h, if(modeListCount &gt; 1): abort(input(
			&quot;selectedMode|&quot;+modeList+&quot;|Choose mode|LIST|Select = 0 VALUE = STRING&quot;
		)); selectedMode = modeList
	]
	
	
	[h, if(chosenWeaponName == &quot;Unarmed&quot;): shortRange = 1]
	[h, if(chosenWeaponName == &quot;Unarmed&quot;): mediumRange = 1]
	[h, if(chosenWeaponName == &quot;Unarmed&quot;): longRange = 1]
	[h, if(chosenWeaponName == &quot;Unarmed&quot;): selectedMode = &quot;Personal&quot;]
	
	[h, if((dualActionModifier != 0)&amp;&amp;(dualWielding)): weaponSelection = 0]
	
	
	[h, if(dualActionModifier == 1), code :
		{
		[h: weaponSelectionList = &quot;&quot;]
		[h, if(mainHandType != &quot;Armor&quot;): weaponSelectionList = listAppend(weaponSelectionList,mainHandName)]
		[h, if(offHandType != &quot;Armor&quot;): weaponSelectionList = listAppend(weaponSelectionList,offHandName)]
		[h: abort(input(
			&quot;dualActionModifier|Primary (+2),Secondary (+4)|Primary or secondary action|LIST|Select = 0&quot;,
			&quot;weaponSelection|&quot;+weaponSelectionList+&quot;|Choose weapon|LIST|Select = 0&quot;
		))]
		[h: dualActionModifier = (dualActionModifier + 1) * 2]
		[h: lastAction = 0]
		};{
		}
	]
	
	[h, if(weaponSelection), code :
		{
		[h: abort(input(
			&quot;selectedMode|&quot;+offModeList + offModeChoiceString,
		))]
		};{
		[h: abort(input(
			&quot;selectedMode|&quot;+mainModeList + mainModeChoiceString,
		))]
		}
	]
	
	
	[h, if(weaponSelection): weaponStats = offHandStats; weaponStats = mainHandStats]

	[h: &quot;&lt;!-- Lookup weapon damage and armor. --&gt;&quot;]
	
	[h: weaponStatsStrProp = json.toStrProp(weaponStats)]
	[h: varsFromStrProp(weaponStatsStrProp)]
	
	[h: selectedEquipment = getProperty(&quot;Equipment&quot;,selected)]
	[h: selectedChestName = json.get(selectedEquipment,&quot;Chest&quot;)]
	[h: selectedHelmetName = json.get(selectedEquipment,&quot;Head&quot;)]
	[h: selectedMainHandType = json.get(selectedEquipment,&quot;Main Hand Type&quot;)]
	[h: selectedOffHandType = json.get(selectedEquipment,&quot;Off Hand Type&quot;)]
	
	[h, if(selectedMainHandType == &quot;Shield&quot;): mainHandShieldName = json.get(selectedEquipment,&quot;Main Hand&quot;); mainHandShieldName = &quot;&quot;]	
	[h, if(selectedOffHandType == &quot;Shield&quot;): offHandShieldName = json.get(selectedEquipment,&quot;Off Hand&quot;); offHandShieldName = &quot;&quot;]
	
	[h: selectedChestJSON = json.get(armorDatabase,selectedChestName)]
	[h: selectedHelmetJSON = json.get(armorDatabase,selectedHelmetName)]
	[h, if(offHandShieldName != &quot;&quot;): mainHandShieldJSON = json.get(armorDatabase,mainHandShieldName); mainHandShieldJSON = &quot;&quot;]
	[h, if(offHandShieldName != &quot;&quot;): offHandShieldJSON = json.get(armorDatabse,mainHandShieldName); offHandShieldJSON = &quot;&quot;]


	[h: &quot;&lt;!-- get Dex Resist Modifier (DRM) of selecteds (targets) Dexterity --&gt;&quot;]
	
	[h: selectedDex = getProperty(&quot;Dexterity&quot;,selected)]
	[h: getMod(selectedDex)]
	[h: selectedDexModifier = macro.return]
	

	[h: &quot;&lt;!-- get Dex and Strength of initiative --&gt;&quot;]

	[h: initiativeDex = getProperty(&quot;Dexterity&quot;,initiative)]
	[h: initiativeStr = getProperty(&quot;Strength&quot;,initiative)]
	[h: getMod(initiativeDex)]
	[h: initiativeDexModifier = macro.return]

	[h: &quot;&lt;!-- get Range Modifier of weapon --&gt;&quot;]

	[h: shotDistance = getDistance(selected,1,initiative,&quot;NO_GRID&quot;)]

	[h, if (shotDistance &lt;= shortRange), code: {[h:range = &quot;short&quot;]};{}]
	[h, if (shotDistance &gt; shortRange &amp;&amp; shotDistance &lt;= mediumRange), code: { [h:range = &quot;medium&quot;]};{}]
	[h, if (shotDistance &gt; mediumRange &amp;&amp; shotDistance &lt;= longRange), code: { [h:range = &quot;long&quot;]};{}]
	[h, if (shotDistance &gt; longRange), code: {assert(0,&quot;Shot distance exceeds max range of weapon (&quot; + weaponRangeLong + &quot;)&quot;,1)};{}]
	[h, if (shotDistance &lt;= 1), code :{[h: range = &quot;melee&quot;]};{}]
	[h, if ((shotDistance &gt; 1)&amp;&amp;(selectedMode == &quot;Personal&quot;)): assert(0,&quot;You are not in range&quot;,0)]
	[h, if (chosenWeaponName == &quot;Unarmed&quot;): range = &quot;Unarmed&quot;]
	[h, if (chosenWeaponName == &quot;Unarmed&quot;): type = &quot;L&quot;]
	[h, if (chosenWeaponName == &quot;Unarmed&quot;), code:
		{
		[h: knownSkills = getProperty(&quot;Skills&quot;,initiative)]
		[h: unarmedAttack = json.get(json.get(knownSkills,&quot;Unarmed Attack&quot;),&quot;Rank&quot;)]
		[h: brawl = json.get(json.get(knownSkills,&quot;Brawl&quot;),&quot;Rank&quot;)]
		[h: powerMartialArts = json.get(json.get(knownSkills,&quot;Power Martial Arts&quot;),&quot;Rank&quot;)]
		[h, if((brawl &gt;= unarmedAttack)||(powerMartialArts &gt;= unarmedAttack)), code:
			{
			[h, if(powerMartialArts &gt;= brawl): skill = &quot;Power Martial Arts&quot; ; skill = &quot;Brawl&quot;]
			};{
			[h: skill = &quot;Unarmed Attack&quot;]
			}
		]
		};{
		}
	]
	
	[h, switch(range), code :
	case &quot;melee&quot; : {
		[h, if (skill == &quot;Primitive&quot;), code: { [h:rangeModifier = 0]};{}]
		[h, if (skill == &quot;Pistol&quot;), code: { [h:rangeModifier = 0]};{}]
		[h, if (skill == &quot;Rifle&quot;), code: { [h:rangeModifier = 1]};{}]
		[h, if (skill == &quot;SMG&quot;), code: { [h:rangeModifier = 0]};{}]
		[h, if (skill == &quot;Direct Fire&quot;), code: { [h:rangeModifier = 1]};{}]
		[h, if (skill == &quot;Indirect Fire&quot;), code: { [h:rangeModifier = 4]};{}]
		};
	case &quot;short&quot; : {
		[h, if (skill == &quot;Primitive&quot;), code: { [h:rangeModifier = -1]};{}]
		[h, if (skill == &quot;Pistol&quot;), code: { [h:rangeModifier = -1]};{}]
		[h, if (skill == &quot;Rifle&quot;), code: { [h:rangeModifier = -1]};{}]
		[h, if (skill == &quot;SMG&quot;), code: { [h:rangeModifier = -1]};{}]
		[h, if (skill == &quot;Direct Fire&quot;), code: { [h:rangeModifier = -1]};{}]
		[h, if (skill == &quot;Indirect Fire&quot;), code: { [h:rangeModifier = 2]};{}]
		};
	case &quot;medium&quot; : {
		[h, if (skill == &quot;Primitive&quot;), code: { [h:rangeModifier = 1]};{}]
		[h, if (skill == &quot;Pistol&quot;), code: { [h:rangeModifier = 1]};{}]
		[h, if (skill == &quot;Rifle&quot;), code: { [h:rangeModifier = 0]};{}]
		[h, if (skill == &quot;SMG&quot;), code: { [h:rangeModifier = 1]};{}]
		[h, if (skill == &quot;Direct Fire&quot;), code: { [h:rangeModifier = 0]};{}]
		[h, if (skill == &quot;Indirect Fire&quot;), code: { [h:rangeModifier = -2]};{}]
		};
	case &quot;long&quot; : {
		[h, if (skill == &quot;Primitive&quot;), code: { [h:rangeModifier = 2]};{}]
		[h, if (skill == &quot;Pistol&quot;), code: { [h:rangeModifier = 3]};{}]
		[h, if (skill == &quot;Rifle&quot;), code: { [h:rangeModifier = 1]};{}]
		[h, if (skill == &quot;SMG&quot;), code: { [h:rangeModifier = 3]};{}]
		[h, if (skill == &quot;Direct Fire&quot;), code: { [h:rangeModifier = 1]};{}]
		[h, if (skill == &quot;Indirect Fire&quot;), code: { [h:rangeModifier = 0]};{}]
		};
	case &quot;Unarmed&quot; : {
		[h: rangeModifier = 0]
		};
	default: {
	   [h: assert(0, &quot;switch(range) invalid input&quot;, 1)]
	   }]
	 
	[h, if(selectedMode == &quot;Personal&quot;): rangeModifier = 0]
	   
	[h: &quot;&lt;!-- Get burst bonus / autofire penality --&gt;&quot;]
	
	[h: modeModifier = 0]
	[h, if (selectedMode == &quot;Fire&quot;): modeModifier = 0]
	[h, if (selectedMode == &quot;Burst&quot;): modeModifier = -1]
	[h, if (selectedMode == &quot;Automatic&quot;): modeModifier = 1]
	   
	[h: &quot;&lt;!-- Get movement penalty of shooter --&gt;&quot;]

	[h: initiativeMovement = getProperty(&quot;Movement&quot;,initiative)]
	[h: initiativeDeclaredMovement = getStrProp(initiativeMovement,&quot;declared&quot;)]
	[h, if (initiativeDeclaredMovement == &quot;Walk&quot;), code: { [h:initiativeMovementModifier = 0]};{}]
	[h, if (initiativeDeclaredMovement == &quot;Run&quot;), code: { [h:initiativeMovementModifier = 2]};{}]
	[h, if (initiativeDeclaredMovement == &quot;Sprint&quot;), code: { [h:initiativeMovementModifier = 3]};{}]
	   
	[h: &quot;&lt;!-- Get flanking bonus of shot --&gt;&quot;]
	
	[h: flankingOutput = json.set(&quot;&quot;,&quot;target&quot;,selected,&quot;origin&quot;,initiative)]
	[h, macro(&quot;GetFlank@Lib:bw&quot;): flankingOutput]
	[h: flankingInput = macro.return]
	[h: angleOnTarget = json.get(flankingInput,&quot;angleOnTarget&quot;)]
	[h: originFace = json.get(flankingInput,&quot;originFace&quot;)]

	[h, if (angleOnTarget == 0), code: {[h: flankModifier = 0]};{}]
	[h, if (angleOnTarget == 90), code: {[h: flankModifier = -1]};{}]
	[h, if (angleOnTarget == 270), code: {[h: flankModifier = -1]};{}]
	[h, if (angleOnTarget == 180), code: {[h: flankModifier = -2]};{}]
	
	[h: &quot;&lt;!-- Get cover penalty of target --&gt;&quot;]
	
	[h: areaOffsets = &apos;[ {x:0, y:0}]&apos;]
	[h: getTokensArea = json.set(&quot;&quot;, &quot;offsets&quot;, areaOffsets, &quot;token&quot;, selected)]
	[h: getTokensConditions = json.set(&quot;&quot;, &quot;area&quot;,getTokensArea,&quot;layer&quot;,&quot;Background&quot;)]
	[h, token(selected): backgroundTokenIDs = getTokens(&quot;,&quot;, getTokensConditions)]
	[h: coverModifier = 0]
	[h, foreach(backgroundTokenID,backgroundTokenIDs), code :
		{
		[h: backgroundTokenName = getName(backgroundTokenID)]
		[h, if(backgroundTokenName == &quot;Light Cover&quot;): coverModifier = max(coverModifier, 1)]
		[h, if(backgroundTokenName == &quot;Medium Cover&quot;): coverModifier = max(coverModifier, 2)]
		[h, if(backgroundTokenName == &quot;Heavy Cover&quot;): coverModifier = max(coverModifier, 3)]
		}
	]
	

	[h: &quot;&lt;!-- Get prone status and modifiers --&gt;&quot;]
	
	[h, if(getState(&quot;Prone&quot;, selected)): proneSelectedModifier = 2; proneSelectedModifier = 0]
	[h, if(getState(&quot;Dead&quot;, selected)): proneSelectedModifier = 2; proneSelectedModifier = proneSelectedModifier]
	[h, if(getState(&quot;Prone&quot;, initiative)): proneInitiativeModifier = 2; proneInitiativeModifier = 0]
	
	[h: &quot;&lt;!-- Get combat spec situation bonus (if any) --&gt;&quot;]
	
	[h: situationBonus = getPropVar(&quot;Situation Bonus&quot;, initiative, &quot;&quot;)]
	[h, if (situationBonus == &quot;&quot;): situationModifier = 0; situationModifier = json.get(json.get(getProperty(&quot;Skills&quot;,initiative),situationBonus),&quot;Rank&quot;)]
	[h, if (situationModifier &gt; 0): situationModifier = -1]
	
	
	[h: &quot;&lt;!-- Roll ranged attack using totalShotModifier --&gt;&quot;]
	
	[h, if((selectedMode == &quot;Fire&quot;)||(selectedMode == &quot;Burst&quot;)), code :
		{
		
		[h: totalShotModifier = number(selectedDexModifier) + rangeModifier + initiativeMovementModifier + flankModifier + modeModifier + coverModifier + proneSelectedModifier + proneInitiativeModifier + dualActionModifier + situationModifier]
		
		[h: alternityRoll(totalShotModifier)]

		[h: &quot;&lt;!-- Output array into local variables --&gt;&quot;]
		
		[h: controlDieRoll = json.get(macro.return, &quot;controlDieRoll&quot;)]
		[h: situationDieRoll = json.get(macro.return, &quot;situationDieRoll&quot;)]
		[h: situationDieStep = json.get(macro.return, &quot;situationDieStep&quot;)]
		[h: situationDieText = json.get(macro.return, &quot;situationDieText&quot;)]
		[h: stepSymbol = json.get(macro.return, &quot;stepSymbol&quot;)]

		[h: &quot;&lt;!-- Add situation die roll to control die roll --&gt;&quot;]

		[h, if(stepSymbol == &quot;+&quot;): combinedRoll = controlDieRoll + situationDieRoll]
		[h, if(stepSymbol == &quot;-&quot;): combinedRoll = controlDieRoll - situationDieRoll]

		[h: &quot;&lt;!-- Work out requirements for attack --&gt;&quot;]
		
		[h: knownSkills = getProperty(&quot;Skills&quot;,initiative)]
		[h: weaponSkillRank = json.get(json.get(knownSkills,skill),&quot;Rank&quot;)]
		[h, if((skill == &quot;Direct Fire&quot;)||(skill == &quot;Indirect Fire&quot;)): ordinarySuccess = initiativeStr + weaponSkillRank; ordinarySuccess = initiativeDex + weaponSkillRank]
		[h: goodSuccess = floor(ordinarySuccess / 2)]
		[h: amazingSuccess = floor(goodSuccess / 2)]

		[h: &quot;&lt;!-- name success type in variable success --&gt;&quot;]
		
		[h, if (combinedRoll &lt;= ordinarySuccess): success = &quot;Ordinary Success&quot;]
		[h, if (combinedRoll &lt;= goodSuccess): success = &quot;Good Success&quot;]
		[h, if (combinedRoll &lt;= amazingSuccess): success = &quot;Amazing Success&quot;]
		[h, if (combinedRoll &gt; ordinarySuccess): success = &quot;Failure&quot;]
		[h, if (controlDieRoll == 20): success = &quot;Critical Failure&quot;]
		[h, if (controlDieRoll == 1): success = &quot;Automatic Success&quot;]

		[h: &quot;&lt;!-- Post relevant information to chat --&gt;&quot;]

		[h: outputText = &quot;&lt;i&gt;&quot; + getName(initiative) + &quot;&lt;/i&gt; shoots &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt; with a &quot; + mainHandName +&quot;. &quot; +  controlDieRoll + &quot;[d20] &quot; + stepSymbol + &quot; &quot; + situationDieRoll + situationDieText + &quot; = &lt;b&gt;&quot; + combinedRoll + &quot;&lt;/b&gt; (Required &quot; + ordinarySuccess + &quot;/&quot; + goodSuccess + &quot;/&quot; + amazingSuccess + &quot;).&quot;]
		
		};{}
	]
	
	[h, if (selectedMode == &quot;Automatic&quot;), code : 
		{
		
		[h: totalShotModifier = number(selectedDexModifier) + rangeModifier + initiativeMovementModifier + flankModifier + modeModifier + coverModifier + proneSelectedModifier + proneInitiativeModifier + dualActionModifier + situationModifier]
		
		[h: automaticObject = automaticRoll(totalShotModifier)]
		[h: automaticStrProp = json.toStrProp(automaticObject)]
		[h: varsFromStrProp(automaticStrProp)]
		
		[h, if(firstShotSymbol == &quot;+&quot;): firstCombinedRoll = controlDieRoll + firstShotRoll]
		[h, if(firstShotSymbol == &quot;-&quot;): firstCombinedRoll = controlDieRoll - firstShotRoll]
		[h, if(secondShotSymbol == &quot;+&quot;): secondCombinedRoll = controlDieRoll + secondShotRoll]
		[h, if(secondShotSymbol == &quot;-&quot;): secondCombinedRoll = controlDieRoll - secondShotRoll]
		[h, if(thirdShotSymbol == &quot;+&quot;): thirdCombinedRoll = controlDieRoll + thirdShotRoll]
		[h, if(thirdShotSymbol == &quot;-&quot;): thirdCombinedRoll = controlDieRoll - thirdShotRoll]

		[h: knownSkills = getProperty(&quot;Skills&quot;,initiative)]
		[h: weaponSkillRank = json.get(json.get(knownSkills,skill),&quot;Rank&quot;)]
		[h, if((skill == &quot;Direct Fire&quot;)||(skill == &quot;Indirect Fire&quot;)): ordinarySuccess = initiativeStr + weaponSkillRank; ordinarySuccess = initiativeDex + weaponSkillRank]
		[h: goodSuccess = floor(ordinarySuccess / 2)]
		[h: amazingSuccess = floor(goodSuccess / 2)]

		
		[h, if (firstCombinedRoll &lt;= ordinarySuccess): success0 = &quot;Ordinary Success&quot;]
		[h, if (firstCombinedRoll &lt;= goodSuccess): success0 = &quot;Good Success&quot;]
		[h, if (firstCombinedRoll &lt;= amazingSuccess): success0 = &quot;Amazing Success&quot;]
		[h, if (firstCombinedRoll &gt; ordinarySuccess): success0 = &quot;Failure&quot;]
		[h, if (controlDieRoll == 20): success0 = &quot;Critical Failure&quot;]
		[h, if (controlDieRoll == 1): success0 = &quot;Automatic Success&quot;]
		[h, if ((success0 == &quot;Failure&quot;)||(success0 == &quot;Critical Failure&quot;)), code:{
			[h: firstStringAppend = &quot;   Miss!&quot;]
			[h: shotHit0 = 0]
			};{
			[h: firstStringAppend = &quot;&quot;]
			[h: shotHit0 = 1]
			}
		]
			


		[h, if (secondCombinedRoll &lt;= ordinarySuccess): success1 = &quot;Ordinary Success&quot;]
		[h, if (secondCombinedRoll &lt;= goodSuccess): success1 = &quot;Good Success&quot;]
		[h, if (secondCombinedRoll &lt;= amazingSuccess): success1 = &quot;Amazing Success&quot;]
		[h, if (secondCombinedRoll &gt; ordinarySuccess): success1 = &quot;Failure&quot;]
		[h, if (controlDieRoll == 20): success1 = &quot;Critical Failure&quot;]
		[h, if (controlDieRoll == 1): success1 = &quot;Automatic Success&quot;]
		[h, if ((success1 == &quot;Failure&quot;)||(success1 == &quot;Critical Failure&quot;)), code:{
			[h: secondStringAppend = &quot;   Miss!&quot;]
			[h: shotHit1 = 0]
			};{
			[h: secondStringAppend = &quot;&quot;]
			[h: shotHit1 = 1]
			}
		]
		

		[h, if (thirdCombinedRoll &lt;= ordinarySuccess): success2 = &quot;Ordinary Success&quot;]
		[h, if (thirdCombinedRoll &lt;= goodSuccess): success2 = &quot;Good Success&quot;]
		[h, if (thirdCombinedRoll &lt;= amazingSuccess): success2 = &quot;Amazing Success&quot;]
		[h, if (thirdCombinedRoll &gt; ordinarySuccess): success2 = &quot;Failure&quot;]
		[h, if (controlDieRoll == 20): success2 = &quot;Critical Failure&quot;]
		[h, if (controlDieRoll == 1): success2 = &quot;Automatic Success&quot;]
		[h, if ((success2 == &quot;Failure&quot;)||(success2 == &quot;Critical Failure&quot;)), code:{
			[h: thirdStringAppend = &quot;   Miss!&quot;]
			[h: shotHit2 = 0]
			};{
			[h: thirdStringAppend = &quot;&quot;]
			[h: shotHit2 = 1]
			}
		]
	
		[h: outputText = strformat(&quot;&lt;i&gt;%{initiativeName}&lt;/i&gt; shoots &lt;i&gt;%{selectedName}&lt;/i&gt; with a %{mainHandName} with automatic fire. (Required %{ordinarySuccess}/%{goodSuccess}/%{amazingSuccess})&lt;br&gt;&quot;)]
		[h: outputText = outputText + strformat(&quot;Shot 1: &lt;b&gt;%{controlDieRoll}&lt;/b&gt; [d20] %{firstShotSymbol} &lt;b&gt;%{firstShotRoll}&lt;/b&gt;[%{firstShotText}] = &lt;b&gt;%{firstCombinedRoll}&lt;/b&gt;%{firstStringAppend}&lt;br&gt;&quot;)]
		[h: outputText = outputText + strformat(&quot;Shot 2: &lt;b&gt;%{controlDieRoll}&lt;/b&gt; [d20] %{secondShotSymbol} &lt;b&gt;%{secondShotRoll}&lt;/b&gt;[%{secondShotText}] = &lt;b&gt;%{secondCombinedRoll}&lt;/b&gt;%{secondStringAppend}&lt;br&gt;&quot;)]
		[h: outputText = outputText + strformat(&quot;Shot 3: &lt;b&gt;%{controlDieRoll}&lt;/b&gt; [d20] %{thirdShotSymbol} &lt;b&gt;%{thirdShotRoll}&lt;/b&gt;[%{thirdShotText}] = &lt;b&gt;%{thirdCombinedRoll}&lt;/b&gt;%{thirdStringAppend}&lt;br&gt;&quot;)]
		
		[h: broadcast(outputText)]
		
		};{}
	]
	
	[h, if(selectedMode == &quot;Personal&quot;), code:
		{
		[h: selectedStr = getProperty(&quot;Strength&quot;,selected)]
		[h: getMod(selectedStr)]
		[h: selectedStrModifier = macro.return]
		
		[h: coverModifier = 0]
		
		[h: totalShotModifier = selectedStrModifier + rangeModifier + initiativeMovementModifier + flankModifier + modeModifier + coverModifier + proneSelectedModifier + proneInitiativeModifier + dualActionModifier + situationModifier]
		
		[h: alternityRoll(totalShotModifier)]
		
		[h: &quot;&lt;!-- Output array into local variables --&gt;&quot;]
		
		[h: controlDieRoll = json.get(macro.return, &quot;controlDieRoll&quot;)]
		[h: situationDieRoll = json.get(macro.return, &quot;situationDieRoll&quot;)]
		[h: situationDieStep = json.get(macro.return, &quot;situationDieStep&quot;)]
		[h: situationDieText = json.get(macro.return, &quot;situationDieText&quot;)]
		[h: stepSymbol = json.get(macro.return, &quot;stepSymbol&quot;)]
		
		[h: &quot;&lt;!-- Add situation die roll to control die roll --&gt;&quot;]

		[h, if(stepSymbol == &quot;+&quot;): combinedRoll = controlDieRoll + situationDieRoll]
		[h, if(stepSymbol == &quot;-&quot;): combinedRoll = controlDieRoll - situationDieRoll]
		
		[h: &quot;&lt;!-- Work out success requirements for attack --&gt;&quot;]
		[h: knownSkills = getProperty(&quot;Skills&quot;,initiative)]
		[h: a = json.get(knownSkills,skill)]
		[h: weaponSkillRank = json.get(json.get(knownSkills,skill),&quot;Rank&quot;)]
		[h: ordinarySuccess = initiativeStr + weaponSkillRank]
		[h: goodSuccess = floor(ordinarySuccess / 2)]
		[h: amazingSuccess = floor(goodSuccess / 2)]
		
		[h: &quot;&lt;!-- name success type in variable success --&gt;&quot;]
		
		[h, if (combinedRoll &lt;= ordinarySuccess): success = &quot;Ordinary Success&quot;]
		[h, if (combinedRoll &lt;= goodSuccess): success = &quot;Good Success&quot;]
		[h, if (combinedRoll &lt;= amazingSuccess): success = &quot;Amazing Success&quot;]
		[h, if (combinedRoll &gt; ordinarySuccess): success = &quot;Failure&quot;]
		[h, if (controlDieRoll == 20): success = &quot;Critical Failure&quot;]
		[h, if (controlDieRoll == 1): success = &quot;Automatic Success&quot;]

		[h: &quot;&lt;!-- Post relevant information to chat --&gt;&quot;]
		
		[h: outputText = &quot;&lt;i&gt;&quot; + getName(initiative) + &quot;&lt;/i&gt; attacks &lt;i&gt;&quot; + getName(selected) + &quot;&lt;/i&gt; with &quot; + mainHandName + &quot;.&lt;br&gt;&lt;span style=&apos;background:#EEEEEE&apos; title=&apos; [d20]&apos;&gt;&quot; + controlDieRoll + &quot;&lt;/span&gt; &quot; + stepSymbol +&quot; &quot;+ tooltipFromObject(
			json.set(&quot;&quot;,&quot;Target Strength&quot;,selectedStrModifier,&quot;Range&quot;,rangeModifier,&quot;Attacker Movement Penalty&quot;,initiativeMovementModifier,&quot;Flank Bonus&quot;,flankModifier,&quot;Firing Mode&quot;,modeModifier,&quot;Cover Penalty&quot;,coverModifier,&quot;Defender Prone&quot;,proneSelectedModifier,&quot;Attacker Prone&quot;,proneInitiativeModifier,&quot;Dual Action Penalty&quot;,dualActionModifier,&quot;Combat Spec Bonus&quot;,situationModifier),
			situationDieRoll,
			&quot;Total Step Modifier&quot;,
			json.set(&quot;&quot;,&quot;Situation Die &quot;+stepSymbol+&quot;[&quot;+situationDieText+&quot;]&quot;,stepSymbol+situationDieRoll+&quot;&quot;)
			)
		+ &quot; = &quot; + 
		tooltipFromObject(
			json.set(&quot;&quot;,&quot;Controlling Skill&quot;,skill,&quot;Strength&quot;,initiativeStr,&quot;Rank&quot;,&quot;+ &quot;+weaponSkillRank,&quot;Ordinary Success&quot;,&quot;= &quot;+ordinarySuccess,&quot;Good Success&quot;,&quot;(&quot;+goodSuccess+&quot;)&quot;,&quot;Amazing Success&quot;,&quot;(&quot;+amazingSuccess+&quot;)&quot;,&quot;&lt;b&gt;Combined Roll&lt;/b&gt;&quot;,combinedRoll),
			&quot;&lt;b&gt;&quot;+success+&quot;&lt;/b&gt;&quot;,
			&quot;&quot;,
			json.set(&quot;&quot;,&quot;Success&quot;,success)
			)
		]
		
		};{
		}		
		
	]
	
	
	[h, if(selectedMode != &quot;Automatic&quot;), code :
		{
		[h, if (success == &quot;Critical Failure&quot;): successNum = 0]
		[h, if (success == &quot;Failure&quot;): successNum = 0]
		[h, if (success == &quot;Ordinary Success&quot;): successNum = 1]
		[h, if (success == &quot;Good Success&quot;): successNum = 2]
		[h, if (success == &quot;Amazing Success&quot;): successNum = 3]
		[h, if (success == &quot;Automatic Success&quot;): successNum = 3]
		
		[h: profession = getProperty(&quot;Profession&quot;,initiative)]
		[h: lastResorts = getProperty(&quot;Last Resorts&quot;,initiative)]
		
		[h: initiativeLastResortsChosen = 0]
		[h, if((lastResorts &gt; 0)&amp;&amp;(profession != &quot;Free Agent&quot;)&amp;&amp;(successNum != 3)), code :
			{
			[h: screen = input(&quot;initiativeLastResortsChosen|No,Yes|Use a Last Resort? &quot;+lastResorts+&quot; remaining|radio|select = 1&quot;,
			&quot;junkVar|&quot;+success+&quot;|Current Success|LABEL&quot;)]
			[h, if(screen == 0): initiativeLastResortsChosen = 0]
			};{
			}
		]

		[h, if((lastResorts &gt;= 2)&amp;&amp;(profession == &quot;Free Agent&quot;)&amp;&amp;(successNum &lt;= 1)), code :
			{
			[h: screen = input(&quot;initiativeLastResortsChosen|No,Yes (1),Yes (2)|Use a Last Resort? &quot;+lastResorts+&quot; remaining|radio|select = 1&quot;,
			&quot;junkVar|&quot;+success+&quot;|Current Success|LABEL&quot;)]
			[h, if(screen == 0): initiativeLastResortsChosen = 0]
			};{
			}
		]
		
		[h, if((lastResorts &gt;= 2)&amp;&amp;(profession == &quot;Free Agent&quot;)&amp;&amp;(successNum &gt;= 2)), code :
			{
			[h: screen = input(&quot;initiativeLastResortsChosen|No,Yes|Use a Last Resort? &quot;+lastResorts+&quot; remaining|radio|select = 1&quot;,
			&quot;junkVar|&quot;+success+&quot;|Current Success|LABEL&quot;)]
			[h, if(screen == 0): initiativeLastResortsChosen = 0]
			};{
			}
		]
		};{
		}
	]
	
	[h: setProperty(&quot;Disable Action&quot;,1,initiative)]
	
	[h: successNum = successNum + initiativeLastResortsChosen]
	
	[h, if (successNum == 0): success = &quot;Failure&quot;]
	[h, if (successNum == 1): success = &quot;Ordinary Success&quot;]
	[h, if (successNum == 2): success = &quot;Good Success&quot;]
	[h, if (successNum == 3): success = &quot;Amazing Success&quot;]
	
	
	
	[h: vars = json.fromStrProp(strPropFromVars(&quot;selectedMode,success,freeActions,ordinarySides,ordinaryQuantity,ordinarySign,ordinaryModifier,ordinaryType,ordinaryString,goodSides,goodQuantity,goodSign,goodModifier,goodType,goodString,amazingSides,amazingQuantity,amazingSign,amazingModifier,amazingType,amazingString,selectedChestJSON,initiativeActions,type,originFace,dualActionModifier,lastAction,successNum,initiativeLastResortsChosen,mainHandName,controlDieRoll,stepSymbol,selectedStrModifier,selectedDexModifier,rangeModifier,initiativeMovementModifier,flankModifier,modeModifier,coverModifier,proneSelectedModifier,proneInitiativeModifier,dualActionModifier,situationModifier,situationDieRoll,situationDieText,situationDieRoll,initiativeStr,weaponSkillRank,ordinarySuccess,goodSuccess,amazingSuccess,combinedRoll,skill,initiativeDex&quot;,&quot;UNSUFFIXED&quot;))]
	[h: args = json.append(&quot;&quot;,initiative,selected,vars)]
	[h: link = macroLinkText(&quot;Last Resort Defender Prompt@lib:bw&quot;,&quot;none&quot;,args,selected)]
	[h: autoExecute(link,selectedOwner,&quot;Last Resort oppertunity&quot;)]</command>
        <label>Last Resort Attack</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>yellow</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <displayHotKey>true</displayHotKey>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>199</index>
        <colorKey>maroon</colorKey>
        <hotKey>None</hotKey>
        <command>[h: selectOwned()]

[h: achievementPoints = getPropVar(&quot;Achievement Points&quot;,playerTokenID,0)]
[h: level = getPropVar(&quot;Level&quot;,playerTokenID,1)]
[h, if (achievementPoints &lt; level + 5): assert(0,&quot;&lt;i&gt;&quot; + getName(playerTokenID) + &quot;&lt;/i&gt; has &quot; + achievementPoints + &quot; AP but requires &quot; + sum(level,5) + &quot; AP to reach level &quot; + sum(level,1) + &quot;.&quot;,0)]

[h: setProperty(&quot;Skill Points&quot;, getProperty(&quot;Skill Points&quot;, playerTokenID) + achievementPoints, playerTokenID)]
[h: setProperty(&quot;Achievement Points&quot;, 0, playerTokenID)]
[h: setProperty(&quot;Level&quot;, level + 1,playerTokenID)]

[h: broadcast(getName(playerTokenID) + &quot; has exchanged &quot; + achievementPoints + &quot; AP into Skill Points and achieved level &quot; + sum(level,1) + &quot;.&quot;)]</command>
        <label>Level Up</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>181</index>
        <colorKey>maroon</colorKey>
        <hotKey>None</hotKey>
        <command>	[h: selected = getSelected()]
	[h: name = getPlayerName()]
	[h: areYouOwner = isOwner(name, selected)]
	[h: gm = isGM()]
	[h, if((areYouOwner == 1)||(gm == 1)), code: {};{[h: assert(0,&quot;You do not own this token!&quot;,0)]}]

	[h: tokenName = getName(selected)]

	[h: &quot;&lt;!-- Confirm Overwrite --&gt;&quot;]

	[h: abort(input(&quot;confpick|No,Yes|&quot; + name + &quot;, do you wish to reset &quot;+tokenName+&quot; to level 1 with no skills?|radio|select = 0&quot;))]
	[h: abort(confpick)]

	[h: abort(input(&quot;confpick|No,Yes|WARNING! resetting &quot;+tokenName+&quot; cannot be undone! Contunue anyway?|radio|select = 0&quot;))]
	[h: abort(confpick)]

	[h: &quot;&lt;!-- Overwrite all relevant properties on token --&gt;&quot;]

	[h: setProperty(&quot;Specialist Skills&quot;,&quot;&quot;,selected)]
	[h: setProperty(&quot;Broad Skills&quot;,&quot;&quot;,selected)]
	[h: setProperty(&quot;Achievement Points&quot;,&quot;&quot;,selected)]
	[h: setProperty(&quot;Level&quot;,1,selected)]

	[h: &quot;&lt;!-- Choose Name --&gt;&quot;]

	[h: abort(input(&quot;tokenName|&quot;+tokenName+&quot;|Choose a name for your token&quot;))]

	[h: &quot;&lt;!-- Choose Race --&gt;&quot;]

	[h: race = getProperty(&quot;Race&quot;, selected)]
	[h, switch(race), code :
	case &quot;Fraal&quot; : {[h: raceDefault=0]};
	case &quot;Human&quot; : {[h: raceDefault=1]};
	case &quot;Mechalus&quot; : {[h: raceDefault=2]};
	case &quot;Sesheyan&quot; : {[h: raceDefault=3]};
	case &quot;T&apos;sa&quot; : {[h: raceDefault=4]};
	case &quot;Weren&quot; : {[h: raceDefault=5]};
	default : {[h: raceDefault=1]}]

	[h: abort(input(
	&quot;race|Fraal,Human,Mechalus,Sesheyan,T&apos;sa,Weren|Choose your race|LIST|select=&quot; + raceDefault + &quot; VALUE=STRING&quot;))]

	[h: raceMinMaxLibrary = getProperty(&quot;raceMinMax&quot;,&quot;Lib:Library&quot;)]
	[h: raceMinMax = json.get(raceMinMaxLibrary,race)]
	[h: raceMinMax = json.toStrProp(raceMinMax)]
	[h: varsFromStrProp(raceMinMax)]

	[h: &quot;&lt;!-- Choose Profession --&gt;&quot;]

	[h: profession = getProperty(&quot;Profession&quot;,selected)]

	[h, switch(profession), code :
	case &quot;Combat Spec&quot; : {[h: professionDefault=0]};
	case &quot;Diplomat/Combat Spec&quot; : {[h: professionDefault=1]};
	case &quot;Diplomat/Free Agent&quot; : {[h: professionDefault=2]};
	case &quot;Diplomat/Tech Op&quot; :  {[h: professionDefault=3]};
	case &quot;Free Agent&quot; : {[h: professionDefault=4]};
	case &quot;Tech Op&quot; : {[h: professionDefault=5]};
	default : {[h: professionDefault=0]}]

	[h: abort(input(&quot;profession|Combat Spec,Diplomat/Combat Spec,Diplomat/Free Agent,Diplomat/Tech OP,Free Agent,Tech Op|Choose your profession|LIST|select=&quot; + professionDefault + &quot; VALUE=STRING&quot;))]

	[h: &quot;&lt;!-- If Combat Spec, ask for situation bonus --&gt;&quot;]

	[h, if(profession == &quot;Combat Spec&quot;), code :
		{
		[h: situationBonus = 0]
		[h, while ((situationBonus == 0)||(situationBonus == &quot;&lt;html&gt;&lt;b&gt;&lt;s&gt;Armor Operation&lt;/s&gt; (STR)&lt;/b&gt;&lt;/html&gt;&quot;)||(situationBonus == &quot;&lt;html&gt;&lt;b&gt;&lt;s&gt;Unarmed Attack&lt;/s&gt; (STR)&lt;/b&gt;&lt;/html&gt;&quot;)||(situationBonus == &quot;&lt;html&gt;&lt;b&gt;&lt;s&gt;Heavy Weapons&lt;/s&gt; (STR)&lt;/b&gt;&lt;/html&gt;&quot;)||(situationBonus == &quot;&lt;html&gt;&lt;b&gt;&lt;s&gt;Melee Weapons&lt;/s&gt; (STR)&lt;/b&gt;&lt;/html&gt;&quot;)||(situationBonus == &quot;&lt;html&gt;&lt;b&gt;&lt;s&gt;Modern Ranged Weapons&lt;/s&gt; (DEX)&lt;/b&gt;&lt;/html&gt;&quot;)||(situationBonus == &quot;&lt;html&gt;&lt;b&gt;&lt;s&gt;Primitive Ranged Weapons&lt;/s&gt; (DEX)&lt;/b&gt;&lt;/html&gt;&quot;)), code :
			{
			[h: abort(input(&quot;situationBonus|&lt;html&gt;&lt;b&gt;&lt;s&gt;Armor Operation&lt;/s&gt; (STR)&lt;/b&gt;&lt;/html&gt;,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Combat Armor,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Powered Armor,&lt;html&gt;&lt;b&gt;&lt;s&gt;Unarmed Attack&lt;/s&gt;  (STR)&lt;/b&gt;&lt;/html&gt;,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Brawl,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Power Martial Arts,&lt;html&gt;&lt;b&gt;&lt;s&gt;Heavy Weapons&lt;/s&gt;  (STR)&lt;/b&gt;&lt;/html&gt;,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Direct Fire,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Indirect Fire,&lt;html&gt;&lt;b&gt;&lt;s&gt;Melee Weapons&lt;/s&gt;  (STR)&lt;/b&gt;&lt;/html&gt;,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Blade,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Bludgeon,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Powered Weapon,&lt;html&gt;&lt;b&gt;&lt;s&gt;Modern Ranged Weapons&lt;/s&gt;  (DEX)&lt;/b&gt;&lt;/html&gt;,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Pistol,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Rifle,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SMG,&lt;html&gt;&lt;b&gt;&lt;s&gt;Primitive Ranged Weapons&lt;/s&gt;  (DEX)&lt;/b&gt;&lt;/html&gt;,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Bow,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Crossbow,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Flintlock,&lt;html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sling|Choose your Combat Spec bonus|LIST|select=0 VALUE=STRING&quot;,
			&quot;junkVar|Gives a -1 step bonus to all rolls.|Effect|LABEL&quot;))]
			}
		]
		[h: situationBonus = substring(situationBonus,30,length(situationBonus))]
		};{
		[h: situationBonus = &quot;&quot;]
		}
	]
	
	

	[h: &quot;&lt;!-- Preform Stats --&gt;&quot;]

	[h, if(isPropertyEmpty(&quot;Strength&quot;, selected)), code: {[h:strDefault=10]};{[h: strDefault = getProperty(&quot;Strength&quot;,selected)]}]
	[h, if(isPropertyEmpty(&quot;Dexterity&quot;, selected)), code: {[h:dexDefault=10]};{[h: dexDefault = getProperty(&quot;Dexterity&quot;,selected)]}]
	[h, if(isPropertyEmpty(&quot;Constitution&quot;, selected)), code: {[h:conDefault=10]};{[h: conDefault = getProperty(&quot;Constitution&quot;,selected)]}]
	[h, if(isPropertyEmpty(&quot;Intelligence&quot;, selected)), code: {[h:intDefault=10]};{[h: intDefault = getProperty(&quot;Intelligence&quot;,selected)]}]
	[h, if(isPropertyEmpty(&quot;Willpower&quot;, selected)), code: {[h:wilDefault=10]};{[h: wilDefault = getProperty(&quot;Willpower&quot;,selected)]}]
	[h, if(isPropertyEmpty(&quot;Personality&quot;, selected)), code: {[h:perDefault=10]};{[h: perDefault = getProperty(&quot;Personality&quot;,selected)]}]

	[h: professionStrMin = 0][h: professionDexMin = 0][h: professionConMin = 0][h: professionIntMin = 0][h: professionWilMin = 0][h: professionPerMin = 0][h: professionStrMax = 16][h: professionDexMax = 16][h: professionConMax = 16][h: professionIntMax = 16][h: professionWilMax = 16][h: professionPerMax = 16]

	[h, if (profession == &quot;Combat Spec&quot;), code :{
		[h: professionStrMin = 11]
		[h: professionConMin = 9]
	};{}]
	[h, if ((profession == &quot;Diplomat/Combat Spec&quot;)||(profession == &quot;Diplomat/Free Agent&quot;)||(profession == &quot;Diplomat/Tech OP&quot;)), code :{
		[h: professionWilMin = 9]
		[h: professionPerMin = 11]
	};{}]
	[h, if (profession == &quot;Free Agent&quot;), code :{
		[h: professionDexMin = 11]
		[h: professionWilMin = 9]
	};{}]
	[h, if (profession == &quot;Tech Op&quot;), code :{
		[h: professionDexMin = 9]
		[h: professionIntMin = 11]
	};{}]

	[h: strMin = max(raceStrMin,professionStrMin)][h: dexMin = max(raceDexMin,professionDexMin)][h: conMin = max(raceConMin,professionConMin)][h: intMin = max(raceIntMin,professionIntMin)][h: wilMin = max(raceWilMin,professionWilMin)][h: perMin = max(racePerMin,professionPerMin)]

	[h: strMax = min(raceStrMax,professionStrMax)][h: dexMax = min(raceDexMax,professionDexMax)][h: conMax = min(raceConMax,professionConMax)][h: intMax = min(raceIntMax,professionIntMax)][h: wilMax = min(raceWilMax,professionWilMax)][h: perMax = min(racePerMax,professionPerMax)]

	[h: strString = strMin + &quot; &amp;#8804; Strength &amp;#8804; &quot; + strMax]
	[h: dexString = dexMin + &quot; &amp;#8804; Dexterity &amp;#8804; &quot; + dexMax]
	[h: conString = conMin + &quot; &amp;#8804; Constituion &amp;#8804; &quot; + conMax]
	[h: intString = intMin + &quot; &amp;#8804; Intelligence &amp;#8804; &quot; + intMax]
	[h: wilString = wilMin + &quot; &amp;#8804; Willpower &amp;#8804; &quot; + wilMax]
	[h: perString = perMin + &quot; &amp;#8804; Personality &amp;#8804; &quot; + perMax]

	[h: &quot;&lt;!-- Choose Stats --&gt;&quot;]

	[h: statTotal = 60]
	[h: inputStatsLoop = 0]
	[h: statTotalString = &quot;&lt;html&gt; &lt;/html&gt;&quot;]
	[h: inputErrorString = &quot;Press OK to check&quot;]
	[h, while(inputStatsLoop == 0), code :{
		
		[h: abort(input(
		&quot;str|&quot; + strDefault + &quot;|&quot; + &quot;&lt;html&gt;&quot; + strString + &quot;&lt;/html&gt;&quot;,
		&quot;dex|&quot; + dexDefault + &quot;|&quot; + &quot;&lt;html&gt;&quot; + dexString + &quot;&lt;/html&gt;&quot;,
		&quot;con|&quot; + conDefault + &quot;|&quot; + &quot;&lt;html&gt;&quot; + conString + &quot;&lt;/html&gt;&quot;,
		&quot;int|&quot; + intDefault + &quot;|&quot; + &quot;&lt;html&gt;&quot; + intString + &quot;&lt;/html&gt;&quot;,
		&quot;wil|&quot; + wilDefault + &quot;|&quot; + &quot;&lt;html&gt;&quot; + wilString + &quot;&lt;/html&gt;&quot;,
		&quot;per|&quot; + perDefault + &quot;|&quot; + &quot;&lt;html&gt;&quot; + perString + &quot;&lt;/html&gt;&quot;,
		&quot;junkVar|&quot;+statTotalString+&quot;|Stat total must = &quot;+statTotal+&quot;|Label&quot;,
		&quot;junkVar|&quot;+inputErrorString+&quot;|Errors|Label&quot;
		))]
		
		[h: inputErrorString = &quot;&quot;]

		[h: &quot;&lt;!-- Check stat choices against race/profession min/max and rules --&gt;&quot;]

		[h, if (raceStrMin &gt; str): inputErrorString = inputErrorString + &quot;Strength is below racial minimum of &quot; + raceStrMax + &quot;. &quot;]
		[h, if (raceStrMax &lt; str): inputErrorString = inputErrorString + &quot;Strength is above racial maximum of &quot; + raceStrMin + &quot;. &quot;]
		[h, if (raceDexMin &gt; dex): inputErrorString = inputErrorString + &quot;Dexterity is below racial minimum of &quot; + raceDexMin + &quot;. &quot;]
		[h, if (raceDexMax &lt; dex): inputErrorString = inputErrorString + &quot;Dexterity is above racial maximum of &quot; + raceDexMax + &quot;. &quot;]
		[h, if (raceConMin &gt; con): inputErrorString = inputErrorString + &quot;Constitution is below racial minimum of &quot; + raceConMin + &quot;. &quot;]
		[h, if (raceConMax &lt; con): inputErrorString = inputErrorString + &quot;Constitution is above racial maximum of &quot; + raceConMax + &quot;. &quot;]
		[h, if (raceIntMin &gt; int): inputErrorString = inputErrorString + &quot;Intelligence is below racial minimum of &quot; + raceIntMin + &quot;. &quot;]
		[h, if (raceIntMax &lt; int): inputErrorString = inputErrorString + &quot;Intelligence is above racial maximum of &quot; + raceIntMax + &quot;. &quot;]
		[h, if (raceWilMin &gt; wil): inputErrorString = inputErrorString + &quot;Willpower is below racial minimum of &quot; + raceWilMin + &quot;. &quot;]
		[h, if (raceWilMax &lt; wil): inputErrorString = inputErrorString + &quot;Willpower is above racial maximum of &quot; + raceWilMax + &quot;. &quot;]
		[h, if (racePerMin &gt; per): inputErrorString = inputErrorString + &quot;Personality is below racial minimum of &quot; + racePerMin + &quot;. &quot;]
		[h, if (racePerMax &lt; per): inputErrorString = inputErrorString + &quot;Personality is above racial maximum of &quot; + racePerMax + &quot;. &quot;]

		[h, if((profession == &quot;Combat Spec&quot;)&amp;&amp;(str &lt; professionStrMin)): inputErrorString = inputErrorString + &quot;Strength must be a minimum of 11 for a Combat Spec&quot; + &quot;. &quot;]
		[h, if((profession == &quot;Combat Spec&quot;)&amp;&amp;(con &lt; professionConMin)): inputErrorString = inputErrorString + &quot;Constitution must be a minimum of 9 for a Combat Spec&quot; + &quot;. &quot;]
			[h: isDiplomat = listContains(profession,&quot;Diplomat&quot;)]
		[h, if((isDiplomat)&amp;&amp;(wil &lt; professionWilMin)): inputErrorString = inputErrorString + &quot;Willpower must be a minimum of 9 for a Diplomat&quot; + &quot;. &quot;]
		[h, if((isDiplomat)&amp;&amp;(per &lt; professionPerMin)): inputErrorString = inputErrorString + &quot;Personality must be a minimum of 11 for a Diplomat&quot; + &quot;. &quot;]
		[h, if((profession == &quot;Free Agent&quot;)&amp;&amp;(dex &lt; professionDexMin)): inputErrorString = inputErrorString + &quot;Dexterity must be a minimum of 11 for a Free Agent&quot; + &quot;. &quot;]
		[h, if((profession == &quot;Free Agent&quot;)&amp;&amp;(wil &lt; professionWilMin)): inputErrorString = inputErrorString + &quot;Willpower must be a minimum of 9 for a Free Agent&quot; + &quot;. &quot;]
		[h, if((profession == &quot;Tech Op&quot;)&amp;&amp;(dex &lt; professionDexMin)): inputErrorString = inputErrorString + &quot;Dexterity must be a minimum of 9 for a Tech Op&quot; + &quot;. &quot;]
		[h, if((profession == &quot;Tech Op&quot;)&amp;&amp;(int &lt; professionIntMin)): inputErrorString = inputErrorString + &quot;Intelligence must be a minimum of 11 for a Tech Op&quot; + &quot;. &quot;]
		
		[h: statsSum = sum(str,dex,con,int,wil,per)]
		[h, if (statsSum != statTotal), code : {
			[h: statTotalString = &quot;Current stat total = &quot; + statsSum]
			};{
			[h: inputStatsLoop = 1]
		}]
		
		[h: strDefault = str][h: dexDefault = dex][h: conDefault = con][h: intDefault = int][h: wilDefault = wil][h: perDefault = per]

		}
	]


	[h: &quot;&lt;!-- Set skill vars --&gt;&quot;]

	[h: &apos;&lt;!--
	[h: &quot;&lt;!-- Standard Rule A --&gt;&quot;]
	[h: skillPoints = (int - 1) / 3 * 5]
	[h, if(race == &quot;Human&quot;): skillPoints = skillPoints + 5]
	--&gt;&apos;]

	[h: &quot;&lt;!-- Optional Rule 2A --&gt;&quot;]
	[h: skillPoints = int*3 + 30]
	[h, if(race == &quot;Human&quot;): skillPoints = skillPoints + 5]

	[h: &apos;&lt;!--
	[h: &quot;&lt;!-- Standard Rule B --&gt;&quot;]
	[h: additionalBroadSkills = floor(int / 2)]
	--&gt;&apos;]


	[h: &quot;&lt;!-- Optional Rule 2B --&gt;&quot;]
	[h: intMod = getMod(int)]
	[h: additionalBroadSkills = 6 + intMod]


	[h: &quot;&lt;!-- Preform Blank Skills --&gt;&quot;]
	[h: skillList = getLibProperty(&quot;SkillNameList&quot;,&quot;Lib:Library&quot;)]
	[h: tokenSkills = &quot;&quot;]
	[h: blankSkill = json.set(&quot;&quot;,&quot;Name&quot;,&quot;&quot;,&quot;Rank&quot;,0)]
	[h: skillLibrary = getLibProperty(&quot;Skills&quot;,&quot;Lib:Library&quot;)]
	[h: attributeNames = json.append(&quot;&quot;,&quot;Strength&quot;,&quot;Dexterity&quot;,&quot;Constitution&quot;,&quot;Intelligence&quot;,&quot;Willpower&quot;,&quot;Personality&quot;)]

	[h, foreach(skillName,skillList), code:{
		[h: blankskill2 = json.set(blankSkill,&quot;Name&quot;,skillNAme)]
		[h: tokenSkills = json.set(tokenSkills,skillName,blankSkill2)]
		}]


	[h: &quot;&lt;!-- Give Racial Broad Skills --&gt;&quot;]

	[h, if(race == &quot;Human&quot;): freeBroadSkills = &quot;Athletics, Vehicle Operation, Stamina, Knowledge, Awareness, Interaction&quot;]
	[h, if(race == &quot;Fraal&quot;): freeBroadSkills = &quot;Vehicle Operation, Knowledge, Awareness, Resolve, Interaction, Telepathy&quot;]
	[h, if(race == &quot;Mechalus&quot;): freeBroadSkills = &quot;Athletics, Vehicle Operation, Stamina, Knowledge, Computer Science, Awareness&quot;]
	[h, if(race == &quot;Sesheyan&quot;): freeBroadSkills = &quot;Melee Weapons, Acrobatics, Stamina, Knowledge, Awareness, Interaction&quot;]
	[h, if(race == &quot;T&apos;sa&quot;): freeBroadSkills = &quot;Athletics, Manipulation, Stamina, Knowledge, Awareness, Interaction&quot;]
	[h, if(race == &quot;Weren&quot;): freeBroadSkills = &quot;Athletics, Unarmed Attack, Stamina, Knowledge, Awareness, Interaction&quot;]

	[h: setProperty(&quot;Free Broad Skills&quot;,freeBroadSkills,selected)]

	[h: freeBroadObject = json.set(&quot;&quot;,&quot;Name&quot;,&quot;&quot;,&quot;Rank&quot;,1)]
	[h, foreach(broadSkill,freeBroadSkills), code :{
		[h: freeBroadObject2 = json.set(freeBroadObject,&quot;Name&quot;,broadSkill)]
		[h: tokenSkills = json.set(tokenSkills,broadSkill,freeBroadObject2)]
		}
	]

	[h: setProperty(&quot;Skills&quot;,tokenSkills,selected)]
	
	[h: &apos;&lt;!-- Calculate Money --&gt;&apos;]
	
	[h, switch(profession), code :
	case &quot;Combat Spec&quot; : {[h: money=roll(5,6)]};
	case &quot;Diplomat/Combat Spec&quot; : {[h: money=roll(5,12)]};
	case &quot;Diplomat/Free Agent&quot; : {[h: money=roll(5,12)]};
	case &quot;Diplomat/Tech Op&quot; :  {[h: money=roll(5,12)]};
	case &quot;Free Agent&quot; : {[h: money=roll(5,8)]};
	case &quot;Tech Op&quot; : {[h: money=roll(5,8)]};
	default : {[h: money=roll(5,8)]}]

	[h: &apos;&lt;!-- Update Token Properties --&gt;&apos;]

	[h: setProperty(&quot;Broad Skills&quot;,freeBroadSkills,selected)]
	[h: setName(tokenName,selected)]
	[h: setProperty(&quot;Race&quot;,race,selected)]
	[h: setProperty(&quot;Strength&quot;,str,selected)]
	[h: setProperty(&quot;Dexterity&quot;,dex,selected)]
	[h: setProperty(&quot;Constitution&quot;,con,selected)]
	[h: setProperty(&quot;Intelligence&quot;,int,selected)]
	[h: setProperty(&quot;Willpower&quot;,wil,selected)]
	[h: setProperty(&quot;Personality&quot;,per,selected)]
	[h: setProperty(&quot;Profession&quot;,profession,selected)]
	[h: setProperty(&quot;Situation Bonus&quot;,situationBonus,selected)]
	[h: setProperty(&quot;Skill Points&quot;,skillPoints,selected)]
	[h: setProperty(&quot;Additional Broad Skills&quot;,additionalBroadSkills,selected)]
	[h: setProperty(&quot;Achievement Points&quot;,0,selected)]
	[h: setProperty(&quot;Money&quot;,money*10,selected)]
	[h: setProperty(&quot;Equipment&quot;,&apos;{&quot;Head&quot;:&quot;&quot;,&quot;Head Type&quot;:&quot;&quot;,&quot;Body&quot;:&quot;&quot;,&quot;Body Type&quot;:&quot;&quot;,&quot;Main Hand&quot;:&quot;&quot;,&quot;Main Hand Type&quot;:&quot;&quot;,&quot;Off Hand&quot;:&quot;&quot;,&quot;Off Hand Type&quot;:&quot;&quot;,&quot;Accessory&quot;:&quot;&quot;,&quot;Accessory Type&quot;:&quot;&quot;}&apos;,selected)]

	[macro (&quot;preformNewCharacter@Lib:bw&quot;): selected]

	[h: &apos;&lt;!-- Output finalised character to chat. --&gt;&apos;]

	[s, r: strformat(&quot;&lt;b&gt;Name:&lt;/b&gt; %{tokenName}&amp;nbsp &lt;b&gt;Race:&lt;/b&gt; %{race}&amp;nbsp &lt;b&gt;Profession:&lt;/b&gt; %{profession}&lt;br /&gt;
	&lt;b&gt;Str:&lt;/b&gt; %{str}&amp;#44;&amp;nbsp &lt;b&gt;Dex:&lt;/b&gt;%{dex}&amp;#44;&amp;nbsp &lt;b&gt;Con:&lt;/b&gt;%{con}&amp;#44;&amp;nbsp &lt;b&gt;Int:&lt;/b&gt;%{int}&amp;#44;&amp;nbsp &lt;b&gt;Wil:&lt;/b&gt;%{wil}&amp;#44;&amp;nbsp &lt;b&gt;Per:&lt;/b&gt;%{per}&lt;br /&gt;
	&lt;b&gt;Skill Points:&lt;/b&gt; %{skillPoints}&amp;nbsp &lt;b&gt;Additional Broad Skills:&lt;/b&gt; %{additionalBroadSkills}&quot;)]</command>
        <label>New Character</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>195</index>
        <colorKey>yellow</colorKey>
        <hotKey>F3</hotKey>
        <command>[macro (&quot;Next Initiative@lib:bw&quot;): &quot;&quot;]</command>
        <label>Next Initiative</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <displayHotKey>true</displayHotKey>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>114</index>
        <colorKey>purple</colorKey>
        <hotKey>None</hotKey>
        <command>[h: selectOwned()]

[h: output = json.set(&quot;&quot;,&quot;playerTokenID&quot;,playerTokenID)]

    [frame(&quot;Character Sheet&quot;): {

        [r, macro(&quot;charSheetForm@Lib:bw&quot;): output]

    }]

</command>
        <label>Open Character Sheet</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>61</index>
        <colorKey>olive</colorKey>
        <hotKey>None</hotKey>
        <command>[h: selectOwned()]

[h: armorArray = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]
[h: armorList = json.toList(armorArray)]

[h: screen = input(&quot;armorChoice|&quot; + armorList + &quot;|Choose the armor to purchase|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]

[h: armorStrProp = json.toStrProp(json.get(armorArray,armorChoice))] 
[h: varsFromStrProp(armorStrProp)]

[h: playerMoney = getProperty(&quot;Money&quot;,playerTokenName)]
[h: freePurchase = getGMSetting(&quot;freePurchase&quot;)]
[h, if (freePurchase): cost = 0; cost = cost]
[h, if (cost == 0): costString = &quot;Free&quot;; costString = cost]
[h: fundsAfter = playerMoney - cost]


[h, if((equipslot == &quot;Helmet&quot;)||(equipslot == &quot;Shield&quot;)||(equipslot == &quot;Other&quot;)), code :{
	[h: abort(input(
	&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
	&quot;junkVar|&quot;+skill+&quot;|Controlling skill|LABEL&quot;,
	&quot;junkVar|&quot;+actionPenalty+&quot;|Action Penalty|LABEL&quot;,
	&quot;junkVar|&quot;+toughness+&quot;|Toughness (O)rdinary (G)ood (A)mazing|LABEL&quot;,
	&quot;junkVar|&quot;+LiModifier+&quot;/&quot;+HiModifier+&quot;/&quot;+EnModifier+&quot;|Damage Reduction Li/Hi/En|LABEL&quot;,
	&quot;junkVar|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed|LABEL&quot;,
	&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
	&quot;junkVar|&quot;+avail+&quot;|Availiability (Com)mon (Con)trolled, (Mil)itary (Res)tricted|LABEL&quot;,
	&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
	&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
	&quot;junkVar|&quot;+equipslot+&quot;|Equip Slot|LABEL&quot;,
	&quot;junkVar|&quot;+costString+&quot;|Cost to purchase|LABEL&quot;,
	&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
	&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
	&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
	))]
	[h: abort(confpick)]
	
	};{
	
	[h: abort(input(
	&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
	&quot;junkVar|&quot;+skill+&quot;|Controlling skill|LABEL&quot;,
	&quot;junkVar|&quot;+actionPenalty+&quot;|Action Penalty|LABEL&quot;,
	&quot;junkVar|&quot;+toughness+&quot;|Toughness (O)rdinary (G)ood (A)mazing|LABEL&quot;,
	&quot;junkVar|&quot;+reduction+&quot;|Damage Reduction Li/Hi/En|LABEL&quot;,
	&quot;junkVar|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed|LABEL&quot;,
	&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
	&quot;junkVar|&quot;+avail+&quot;|Availiability (Com)mon (Con)trolled, (Mil)itary (Res)tricted|LABEL&quot;,
	&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
	&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
	&quot;junkVar|&quot;+equipslot+&quot;|Equip Slot|LABEL&quot;,
	&quot;junkVar|&quot;+cost+&quot;|Cost to purchase|LABEL&quot;,
	&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
	&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
	&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
	))]
	[h: abort(confpick)]
	
}]
	


[h, if(confpick == 1), code :{
	[h: setProperty(&quot;Money&quot;,fundsAfter,playerTokenID)]
	[h: empty = isPropertyEmpty(&quot;Inventory&quot;,playerTokenID)]
	[h, if(empty), code: {
		[h: outputarmor = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Armor&quot;)]
		[h: outputInventory = json.set(&quot;&quot;,name,outputarmor)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{}]
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputarmor = json.get(inputInventory,name)]
	[h: empty = json.isEmpty(inputarmor)]
	[h, if(empty), code: {
		[h: outputarmor = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Armor&quot;	)]
		[h: outputInventory = json.set(inputInventory,name,outputarmor)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputarmorQuantity = json.get(inputarmor,&quot;Quantity&quot;)]
		[h: outputarmorQuantity = inputarmorQuantity + 1]
		[h: outputarmor = json.set(inputarmor,&quot;Quantity&quot;,outputarmorQuantity,&quot;Type&quot;,&quot;Armor&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputarmor)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]

	[h: broadcast(playerTokenName + &quot; purchased a &quot; + name + &quot; for &quot; + cost + &quot;.&quot;)]
};{}]
</command>
        <label>Purchase Armor</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>navy</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>60</index>
        <colorKey>olive</colorKey>
        <hotKey>None</hotKey>
        <command>[h: selectOwned()]

[h: categoryArray = getLibProperty(&quot;Items&quot;,&quot;Lib:Library&quot;)]
[h: categoryList = json.toList(categoryArray)]

[h: screen = input(&quot;categoryChoice|&quot;+categoryList+&quot;|Choose a category|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]

[h: itemArray = json.get(categoryArray,categoryChoice)]
[h: itemList = json.toList(itemArray)]

[h: screen2 = input(&quot;itemChoice|&quot; + itemList + &quot;|Choose an Item to purchase|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen2)]

[h: itemStrProp = json.toStrProp(json.get(itemArray,itemChoice))] 
[h: varsFromStrProp(itemStrProp)]

[h: playerMoney = getProperty(&quot;Money&quot;,playerTokenName)]
[h: freePurchase = getGMSetting(&quot;freePurchase&quot;)]
[h, if (freePurchase): cost = 0; cost = cost]
[h, if (cost == 0): costString = &quot;Free&quot;; costString = cost]
[h: fundsAfter = playerMoney - cost]

[h: abort(input(
&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
&quot;junkVar|&quot;+categoryChoice+&quot;|Category|LABEL&quot;,
&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
&quot;junkVar|&quot;+costString+&quot;|Cost|LABEL&quot;,
&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
))]
[h: abort(confpick)]

[h, if(confpick == 1), code :{
	[h: setProperty(&quot;Money&quot;,fundsAfter,playerTokenID)]
	[h: empty = isPropertyEmpty(&quot;Inventory&quot;,playerTokenID)]
	[h, if(empty), code: {
		[h: outputItem = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Item&quot;)]
		[h: outputInventory = json.set(&quot;&quot;,name,outputItem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{}]
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputItem = json.get(inputInventory,name)]
	[h: empty = json.isEmpty(inputItem)]
	[h, if(empty), code: {
		[h: outputItem = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Item&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputItem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputItemQuantity = json.get(inputItem,&quot;Quantity&quot;)]
		[h: outputItemQuantity = inputItemQuantity + 1]
		[h: outputItem = json.set(inputItem,&quot;Quantity&quot;,outputItemQuantity,&quot;Type&quot;,&quot;Item&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputItem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]

	[h: broadcast(playerTokenName + &quot; purchased a &quot; + name + &quot; for &quot; + cost + &quot;.&quot;)]
};{}]
</command>
        <label>Purchase Item</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>navy</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>59</index>
        <colorKey>olive</colorKey>
        <hotKey>None</hotKey>
        <command>[h: selectOwned()]

[h: weaponArray = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]
[h: weaponList = json.toList(weaponArray)]

[h: screen = input(&quot;weaponChoice|&quot; + weaponList + &quot;|Choose a Weapon to purchase for &quot;+playerTokenName+&quot;|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]
[h: weaponStrProp = json.toStrProp(json.get(weaponArray,weaponChoice))] 
[h: varsFromStrProp(weaponStrProp)]

[h: playerMoney = getProperty(&quot;Money&quot;,playerTokenName)]
[h: freePurchase = getGMSetting(&quot;freePurchase&quot;)]
[h, if (freePurchase): cost = 0; cost = cost]
[h, if (cost == 0): costString = &quot;Free&quot;; costString = cost]
[h: fundsAfter = playerMoney - cost]


[h: range = shortRange + &quot;/&quot; + mediumRange + &quot;/&quot; + longRange]
[h: damage = ordinaryString + &quot;/&quot; + goodString + &quot;/&quot; + amazingString]

[h: input = input(
&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
&quot;junkVar|&quot;+skill+&quot;|Controlling speciality skill|LABEL&quot;,
&quot;junkVar|&quot;+accuracy+&quot;|Accuracy Modifier|LABEL&quot;,
&quot;junkVar|&quot;+mode+&quot;|Modes (F)ull (B)urst (A)uto (P)ersonal (T)hrown|LABEL&quot;,
&quot;junkVar|&quot;+range+&quot;|Range short/medium/long|LABEL&quot;,
&quot;junkVar|&quot;+type+&quot;|Type (Li)ght (Hi)gh (En)ergy|LABEL&quot;,
&quot;junkVar|&quot;+firepower+&quot;|Firepower (O)rdinary (G)ood (A)mazing|LABEL&quot;,
&quot;junkVar|&quot;+ordinaryString+&quot;/&quot;+goodString+&quot;/&quot;+amazingString+&quot;|Damage|LABEL&quot;,
&quot;junkVar|&quot;+actions+&quot;|Max actions per round|LABEL&quot;,
&quot;junkVar|&quot;+clipsize+&quot;|Clip size|LABEL&quot;,
&quot;junkVar|&quot;+clipcost+&quot;|Clip cost|LABEL&quot;,
&quot;junkVar|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed|LABEL&quot;,
&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
&quot;junkVar|&quot;+avail+&quot;|Availiability (Com)mon (Con)trolled, (Mil)itary (Res)tricted|LABEL&quot;,
&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
&quot;junkVar|&quot;+equipSlot+&quot;|Equipment Slot|LABEL&quot;,
&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
&quot;junkVar|&quot;+costString+&quot;|Cost to purchase|LABEL&quot;,
&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
)]
[h: abort(input)]
[h: abort(confpick)]

[h, if(confpick == 1), code :{
	[h: setProperty(&quot;Money&quot;,fundsAfter,playerTokenID)]
	[h: empty = isPropertyEmpty(&quot;Inventory&quot;,playerTokenID)]
	[h: empty2 = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: empty2 = length(empty2)]	
	[h, if((empty == 1)||(empty2 == 0)), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,0,&quot;Type&quot;,&quot;Weapon&quot;)]
		[h: outputInventory = json.set(&quot;&quot;,name,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{}]
		
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputweapon = json.get(inputInventory,name)]
	
	
	[h: empty = json.isEmpty(inputweapon)]
	[h, if(empty), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Weapon&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputweaponQuantity = json.get(inputweapon,&quot;Quantity&quot;)]
		[h: outputweaponQuantity = inputweaponQuantity + 1]
		[h: outputweapon = json.set(inputweapon,&quot;Quantity&quot;,outputweaponQuantity,&quot;Type&quot;,&quot;Weapon&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]

	[h: broadcast(playerTokenName + &quot; purchased a &quot; + name + &quot; for &quot; + cost + &quot;.&quot;)]
};{}]
</command>
        <label>Purchase Weapon</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>navy</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>188</index>
        <colorKey>green</colorKey>
        <hotKey>F4</hotKey>
        <command>[h: selectOwned()]
[h: initiative = playerTokenID]
[h: selectSelected()]
[h: selected = playerTokenID]

[h: firstAidRank = getSkillRank(&quot;First Aid&quot;,initiative)]
[h: treatmentRank = getSkillRank(&quot;Treatment&quot;,initiative)]

[h, if((firstAidRank == 0) &amp;&amp; (treatmentRank == 0)): assert(0,&quot;You do not know First Aid or Treatment&quot;,0)]

[h: selectedStun = getProperty(&quot;Stun&quot;,selected)]

[h: selectedStunMax = json.get(getProperty(&quot;Natural Statistics&quot;,selected), &quot;Stun&quot;)]

[h, if(selectedStun == selectedStunMax): assert(0,&quot;The target is on full health&quot;,0)]

[h, if(treatmentRank &gt; firstAidRank): skillCheckSpecific(&quot;Treatment&quot;,initiative,0,&quot;Treating &lt;i&gt;&quot;+ getName(selected)+&quot;&lt;/i&gt;&quot;); skillCheckSpecific(&quot;First Aid&quot;,initiative,0,&quot;Applying first aid on &lt;i&gt;&quot;+ getName(selected)+&quot;&lt;/i&gt;&quot;)]

[h: success = json.get(macro.return,0)]
[h: output = json.get(macro.return,1)]

[h, switch(success):
	case &quot;Ordinary success&quot; : stunRecovery = 1;
	case &quot;Good success&quot; : stunRecovery = 2;
	case &quot;Amazing success&quot; : stunRecovery = 3;
	case &quot;Failure&quot; : stunRecovery = 0;
	case &quot;Critical failure!&quot; : stunRecovery = 0;
	case &quot;Automatic success!&quot; : stunRecovery = 3;
	default : assert(0,&quot;Invalid input switch(success) in Stun Recovery&quot;,1)
]

[h, if((selectedStun &gt; 0)&amp;&amp;(stunRecovery &gt; 0)): stunRecovery = stunRecovery + 1]

[h: newStunHpSelected = min(selectedStun + stunRecovery, selectedStunMax)]

[h, if((newStunHpSelected &gt; 0)&amp;&amp;(stunRecovery &gt; 0)), code:
	{
	[h: setState(&quot;Unconcious (Stun)&quot;,0,selected)]
	[h: setProperty(&quot;Stun Recovering&quot;,1,selected)]
	};{
	}
]
[h: setProperty(&quot;Stun&quot;,newStunHpSelected,selected)]
[h: output = output + &quot;&lt;br&gt;Recovering &quot; + stunRecovery + &quot; stun. Current: &quot; + newStunHpSelected + &quot;/&quot; + selectedStunMax + &quot;.&quot;]
[h: chatBox(&quot;Skill&quot;,output)]
</command>
        <label>Stun Recovery</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <displayHotKey>true</displayHotKey>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>148</index>
        <colorKey>aqua</colorKey>
        <hotKey>None</hotKey>
        <command>[h: selectOwned()]

[h: abort(input(
	&quot;step|-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8|Step Penalty|LIST|VALUE=STRING Select = 5&quot;,
	&quot;description|.|Description (optional)&quot;
	))
]

[h: alternityRoll(step)]
[h: returnStrProp = json.toStrProp(macro.return)]
[h: varsFromStrProp(returnStrProp)]

[h, if(stepSymbol == &quot;+&quot;): combinedRoll = controlDieRoll + situationDieRoll]
[h, if(stepSymbol == &quot;-&quot;): combinedRoll = controlDieRoll - situationDieRoll]

[h, if ((description == &quot;&quot;)||(description == &quot; &quot;)||(description == &quot;.&quot;)): description = &quot;&quot;; description = description + &quot;&lt;br&gt;&quot;]

[h: output = description + &quot;&lt;i&gt;&quot; + playerTokenName + &quot;&lt;/i&gt; rolls &quot; +  controlDieRoll + &quot;[d20] &quot; + stepSymbol + &quot; &quot; + situationDieRoll + &quot;[&quot; + situationDieText + &quot;]&quot; + &quot; = &lt;b&gt;&quot; + combinedRoll + &quot;&lt;/b&gt;.&quot;]

[h: broadcast(output)]</command>
        <label>Alternity Roll</label>
        <group>Dice Box</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>204</index>
        <colorKey>yellow</colorKey>
        <hotKey>None</hotKey>
        <command>[h, foreach(id,getSelected()), code :
{
[h, token(id): addToInitiative()]
}
]
[macro (&quot;Next Initiative@lib:bw&quot;): &quot;&quot;]</command>
        <label>Start Combat</label>
        <group>GM Tools</group>
        <sortby>2</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>true</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>167</index>
        <colorKey>yellow</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]
[h: abort(getInitiativeRound() + 1)]
[h, macro(&quot;nextPhase@Lib:bw&quot;) : &quot;&quot;]
[h: initiativeIDList()]
[h: tokenIDUniqueArray = json.unique(json.fromList(initiativeIDList))]
[h, foreach(tokenID, tokenIDUniqueArray ), code :
	{
	[h: setProperty(&quot;Stun&quot;,json.get(getProperty(&quot;Natural Statistics&quot;,tokenID),&quot;Stun&quot;),tokenID)]
	[h: setState(&quot;Unconcious (Stun)&quot;,0,tokenID)]
	[h, if(! getState(&quot;Dead&quot;,tokenID)): setState(&quot;Prone&quot;,0,tokenID)]
	}
]
[h: removeAllFromInitiative()]

[h: broadcast(&quot;&lt;html&gt;&lt;b&gt;Combat Ends!&lt;/b&gt;&lt;br&gt;All combatants Stun is restored.&lt;/html&gt;&quot;)]</command>
        <label>End Combat</label>
        <group>GM Tools</group>
        <sortby>3</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>147</index>
        <colorKey>orange</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;,playerTokenID)]
[h: naturalStun = json.get(naturalStatistics, &quot;Stun&quot;)]
[h: naturalWound = json.get(naturalStatistics, &quot;Wound&quot;)]
[h: naturalMortal = json.get(naturalStatistics, &quot;Mortal&quot;)]
[h: naturalFatigue = json.get(naturalStatistics, &quot;Fatigue&quot;)]

[h: currentStun = getProperty(&quot;Stun&quot;,playerTokenID)]
[h: currentWound = getProperty(&quot;Wound&quot;,playerTokenID)]
[h: currentMortal = getProperty(&quot;Mortal&quot;,playerTokenID)]
[h: currentFatigue = getProperty(&quot;Fatigue&quot;,playerTokenID)]

[h: abort(input(
	&quot;junkVar|&quot;+playerTokenName+&quot;|Selected Token|LABEL&quot;,
	&quot;stun|&quot;+currentStun+&quot;|Stun (&quot;+naturalStun+&quot;)&quot;,
	&quot;wound|&quot;+currentWound+&quot;|Wound (&quot;+naturalWound+&quot;)&quot;,
	&quot;mortal|&quot;+currentMortal+&quot;|Mortal (&quot;+naturalMortal+&quot;)&quot;,
	&quot;fatigue|&quot;+currentFatigue+&quot;|Fatigue (&quot;+naturalFatigue+&quot;)&quot;
	))
]

[h, if(stun == &quot;&quot;): stun = currentStun]
[h, if(wound == &quot;&quot;): wound = currentWound]
[h, if(mortal == &quot;&quot;): stun = currentMortal]
[h, if(fatigue == &quot;&quot;): stun = currentFatigue]

[h: setProperty(&quot;Stun&quot;,stun,playerTokenID)]
[h: setProperty(&quot;Wound&quot;,Wound,playerTokenID)]
[h: setProperty(&quot;Mortal&quot;,Mortal,playerTokenID)]
[h: setProperty(&quot;Fatigue&quot;,Fatigue,playerTokenID)]</command>
        <label>Alter Health</label>
        <group>GM Tools</group>
        <sortby>10</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>153</index>
        <colorKey>orange</colorKey>
        <hotKey>None</hotKey>
        <command>		[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

		[h: selectSelected()]

		[h: abort(input(
			&quot;target|&quot;+playerTokenName+&quot;|Target&quot;,
			&quot;damageString|1d2+3s|Damage (1d2+3s)&quot;,
			&quot;type|L|Type (L/H/E)&quot;,
			&quot;descriptionPrefix|.|Description (optional)&quot;,
			&quot;ignoreArmor|0|Ignore Armor?|CHECK&quot;,
			&quot;applyNow|1|Apply Now?|CHECK&quot;
			))
		]
		
		[h, if ((descriptionPrefix == &quot;&quot;)||(descriptionPrefix == &quot;0&quot;)||(descriptionPrefix == &quot;.&quot;)||(descriptionPrefix == &quot; &quot;)): descriptionPrefix = &quot;GM&quot;]

		[h: damageParserSingle(damageString)]

		[h: &quot;&lt;!-- Roll for damage if hit --&gt;&quot;]
		
		[h, if(damageDieSign == &quot;+&quot;): damageRoll = roll(damageDieQuantity,damageDieSides) + damageDieModifier]
		[h, if(damageDieSign == &quot;-&quot;): damageRoll = roll(damageDieQuantity,damageDieSides) - damageDieModifier]

		[h: &quot;&lt;!-- Calculate how much damage is stopped by Armor --&gt;&quot;]

		[h: stunHp = getProperty(&quot;Stun&quot;,playerTokenID)]
		[h: woundHp = getProperty(&quot;Wound&quot;,playerTokenID)]
		[h: mortalHp = getProperty(&quot;Mortal&quot;,playerTokenID)]
		[h: stunDamage = 0]
		[h: woundDamage = 0]
		[h: mortalDamage = 0]

		[h, switch(damageType):
			case &quot;Stun&quot;: stunDamage = damageRoll;
			case &quot;Wound&quot;: woundDamage = damageRoll;
			case &quot;Mortal&quot;: mortalDamage = damageRoll;
		default: assert (0, &quot;switch(damageType) armor reduction&quot;, 1)]
		
		[h: nonSecondaryStunDamage = stunDamage]
		[h: nonSecondaryWoundDamage = woundDamage]
		[h: nonSecondaryMortalDamage = mortalDamage]
	   
		[h: secondaryStunDamage = 0]
		[h: secondaryWoundDamage = 0]
		[h, if(woundDamage &gt;= 2): secondaryStunDamage = floor(woundDamage/2)]
		[h, if(mortalDamage &gt;= 2), code: {
			[h: secondaryStunDamage = secondaryStunDamage + floor(mortalDamage/2)]
			[h: secondaryWoundDamage = floor(mortalDamage/2)]
		};{}]
		
		[h: &quot;&lt;!-- Calculate armor roll --&gt;&quot;]
		
		[h: selectedEquipment = getProperty(&quot;Equipment&quot;,playerTokenID)]
		[h: selectedChestName = json.get(selectedEquipment,&quot;Chest&quot;)]
		[h: armorDatabase = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]
		
		[h, if(selectedChestName == &quot;&quot;): selectedChestJSON = json.set(&quot;&quot;,&quot;HiQuantity&quot;,0,&quot;EnString&quot;,&quot;0d0+0&quot;,&quot;LiSign&quot;,&quot;+&quot;,&quot;mass&quot;,0,&quot;LiQuantity&quot;,0,&quot;hide&quot;,0,&quot;description&quot;,&quot;No Armour&quot;,&quot;actionPenalty&quot;,0,&quot;HiString&quot;,&quot;0d0+0&quot;,&quot;name&quot;,&quot;No Armour&quot;,&quot;LiSides&quot;,0,&quot;reduction&quot;,&quot;0d0+0/0d0+0/0d0+0&quot;,&quot;toughness&quot;,&quot;Ordinary&quot;,&quot;equipSlot&quot;,&quot;Chest&quot;,&quot;HiModifier&quot;,0,&quot;EnSign&quot;,&quot;+&quot;,&quot;EnModifier&quot;,0,&quot;avail&quot;,&quot;Common&quot;,&quot;HiSides&quot;,0,&quot;EnQuantity&quot;,0,&quot;EnSides&quot;,0,&quot;cost&quot;,0,&quot;HiSign&quot;,&quot;+&quot;,&quot;PL&quot;,5,&quot;skill&quot;,&quot;None&quot;,&quot;LiModifier&quot;,0,&quot;LiString&quot;,&quot;0d0+0&quot;); selectedChestJSON = json.get(armorDatabase,selectedChestName)]
		
		[h, if(json.isEmpty(selectedChestJSON)): selectedChestJSON = json.set(&quot;&quot;,&quot;name&quot;,&quot;No armour&quot;,skill,&quot;None&quot;,&quot;actionPenalty&quot;,0,&quot;toughness&quot;,&quot;Ordinary&quot;,&quot;hide&quot;,0,&quot;mass&quot;,0,&quot;avail&quot;,&quot;Common&quot;,&quot;cost&quot;,0,&quot;PL&quot;,0,&quot;equipSlot&quot;,&quot;Chest&quot;,&quot;description&quot;,&quot;No armour.&quot;,&quot;reduction&quot;,&quot;0d0+0/0d0+0/0d0+0&quot;,&quot;LiQuantity&quot;,0,&quot;LiSides&quot;,0,&quot;LiSign&quot;,&quot;+&quot;,&quot;LiModifier&quot;,0,&quot;LiString&quot;,&quot;0d0+0&quot;,&quot;HiQuantity&quot;,0,&quot;HiSides&quot;,0,&quot;HiSign&quot;,&quot;+&quot;,&quot;HiModifier&quot;,0,&quot;HiString&quot;,&quot;0d0+0&quot;,&quot;EnQuantity&quot;,0,&quot;EnSides&quot;,0,&quot;EnSign&quot;,&quot;+&quot;,&quot;EnModifier&quot;,0,&quot;EnString&quot;,&quot;0d0+0&quot;)]
			
		[h: varsFromStrProp(json.toStrProp(selectedChestJSON))]
		
		[h: armorName = name]
		
		[h, switch(type), code:
		case &quot;L&quot;:{
			[h: armorDieSides = LiSides]
			[h: armorDieQuantity = LiQuantity]
			[h: armorDieModifier = LiModifier]
			[h: armorModifierSign = LiSign]
			};
		case &quot;H&quot;:{
			[h: armorDieSides = HiSides]
			[h: armorDieQuantity = HiQuantity]
			[h: armorDieModifier = HiModifier]
			[h: armorModifierSign = HiSign]
			};
		case &quot;E&quot;:{
			[h: armorDieSides = EnSides]
			[h: armorDieQuantity = EnQuantity]
			[h: armorDieModifier = EnModifier]
			[h: armorModifierSign = EnSides]
			};
		default:{[h: assert (0, &quot;switch(type) armor reduction&quot;, 1)]}]
		
		[h, if(armorModifierSign == &quot;+&quot;): armorRoll = roll(armorDieQuantity,armorDieSides) + armorDieModifier]
		[h, if(armorModifierSign == &quot;-&quot;): armorRoll = roll(armorDieQuantity,armorDieSides) - armorDieModifier]
	   
		[h: &quot;&lt;!-- Round armorRoll up to 0 if lower than 0 --&gt;&quot;]
	   
		[h, if(armorRoll &lt; 0): armorRoll = 0]
	   
		[h: &quot;&lt;!-- Remove armor roll from damage roll --&gt;&quot;]   
	   
		[h: damageResult = damageRoll - armorRoll]   
	   
		[h: &quot;&lt;!-- Round damageRoll up to 0 if lower than 0  --&gt;&quot;]     
	   
		[h, if(damageResult &lt; 0): damageResult = 0]
		
		[h: &quot;&lt;!-- Update damages to secondary plus armor roll reduced damage roll --&gt;&quot;]
		
		[h, switch(damageType):
		case &quot;Stun&quot;: stunDamage = damageResult;
		case &quot;Wound&quot;: woundDamage = damageResult;
		case &quot;Mortal&quot;: mortalDamage = damageResult;
		default: assert (0, &quot;switch(damageType) armor reduction&quot;, 1)]
		
		[h: &quot;&lt;!--Apply secondary damage--&gt;&quot;]

		[h: stunHp = stunHp - secondaryStunDamage]
		[h: woundHp = woundHp - secondaryWoundDamage]  
		
		[h: &quot;&lt;!-- Set into array and run DamageCalc macro --&gt;&quot;]   
	   
		[h: damageOutput = json.set(&quot;&quot;,&quot;stunDamage&quot;,stunDamage,&quot;woundDamage&quot;,woundDamage,&quot;mortalDamage&quot;,mortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp)]
	   
		[h, macro (&quot;DamageCalc@Lib:bw&quot;) : damageOutput]
		[h: damageInput = macro.return]
		[h: &quot;&lt;!-- Returned absoloute damages --&gt;&quot;]   
		
		
		[h: descriptionSuffix = &quot;&quot;]
		[h, if (ignoreArmor), code :
			{
			[h: stunHp = max(getProperty(&quot;Stun&quot;,playerTokenID) - nonSecondaryStunDamage, 0)]
			[h: woundHp = max(getProperty(&quot;Wound&quot;,playerTokenID) - nonSecondaryWoundDamage, 0)]
			[h: mortalHp = max(getProperty(&quot;Mortal&quot;,playerTokenID) - nonSecondaryMortalDamage, 0)]
			[h: damageInput = json.set(&quot;&quot;,&quot;stunDamage&quot;,nonSecondaryStunDamage,&quot;woundDamage&quot;,nonSecondaryWoundDamage,&quot;mortalDamage&quot;,nonSecondaryMortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp,&quot;stunReduced&quot;,nonSecondaryStunDamage,&quot;woundReduced&quot;,nonSecondaryWoundDamage,&quot;mortalReduced&quot;,nonSecondaryMortalDamage)]
			[h: descriptionSuffix = &quot;&lt;b&gt;ignoring armor!&lt;/b&gt;&quot;]
			};{
			}
		]
		
		[h: varsFromStrProp(json.toStrProp(damageInput))]
		

		
		
		[h: phaseOutput = json.set(&quot;&quot;,&quot;type&quot;,&quot;Custom&quot;,&quot;selected&quot;,playerTokenID,&quot;initiative&quot;,&quot;Custom GM Macro&quot;,&quot;stunDamage&quot;,stunDamage,&quot;woundDamage&quot;,woundDamage,&quot;mortalDamage&quot;,mortalDamage,&quot;stunHp&quot;,stunHp,&quot;woundHp&quot;,woundHp,&quot;mortalHp&quot;,mortalHp,&quot;stunReduced&quot;,stunReduced,&quot;woundReduced&quot;,woundReduced,&quot;mortalReduced&quot;,mortalReduced,&quot;damageRoll&quot;,damageRoll,&quot;damageDieQuantity&quot;,damageDieQuantity,&quot;damageDieSides&quot;,damageDieSides,&quot;damageDieSign&quot;,damageDieSign,&quot;damageDieModifier&quot;,damageDieModifier,&quot;damageType&quot;,damageType,&quot;armorName&quot;,armorName,&quot;armorRoll&quot;,armorRoll,&quot;armorDieQuantity&quot;,armorDieQuantity,&quot;armorDieSides&quot;,armorDieSides,&quot;armorModifierSign&quot;,armorModifierSign,&quot;armorDieModifier&quot;,armorDieModifier,&quot;secondaryStunDamage&quot;,secondaryStunDamage,&quot;secondaryWoundDamage&quot;,secondaryWoundDamage,&quot;descriptionPrefix&quot;,descriptionPrefix,&quot;descriptionSuffix&quot;,descriptionSuffix)]
		
		[h, if(applyNow), code :
			{
			[h: action = phaseOutput]
			[h: applyCustomAttack()]
			
			};{
			
			
			[h: phaseActions = getLibProperty(&quot;Phase Actions&quot;,&quot;Lib:bw&quot;)]
			[h: phaseActions = json.append(phaseActions,phaseOutput)]
			[h: setLibProperty(&quot;Phase Actions&quot;,phaseActions,&quot;Lib:bw&quot;)]
			}
		]
		


</command>
        <label>Apply Custom Damage</label>
        <group>GM Tools</group>
        <sortby>11</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>77</index>
        <colorKey>green</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]


[h: selected = getSelected()]
[h: naturalStats = getProperty(&quot;Natural Statistics&quot;,selected)]
[h: stun = json.get(naturalStats, &quot;Stun&quot;)]
[h: wound = json.get(naturalStats, &quot;Wound&quot;)]
[h: mortal = json.get(naturalStats, &quot;Mortal&quot;)]
[h: fatigue = json.get(naturalStats, &quot;Fatigue&quot;)]
[h: setProperty(&quot;Stun&quot;,stun,selected)]
[h: setProperty(&quot;Wound&quot;,wound,selected)]
[h: setProperty(&quot;Mortal&quot;,mortal,selected)]
[h: setProperty(&quot;Fatigue&quot;,fatigue,selected)]
[h: setAllStates(0,selected)]
[h, token(selected): token.initHold = 0]</command>
        <label>Reset Health</label>
        <group>GM Tools</group>
        <sortby>15</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>165</index>
        <colorKey>green</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]
[h: selectSelected()]
[h: resetMovement(playerTokenID)]</command>
        <label>Reset Movement</label>
        <group>GM Tools</group>
        <sortby>16</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>97</index>
        <colorKey>pink</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]
[h: selectSelected()]

[h: abort(input(
&quot;chosenAttribute|Strength,Dexterity,Constitution,Intelligence,Willpower,Personality|Choose which attribute the skill belongs to|LIST|Select = 0 VALUE=STRING&quot;
))]

[h: broadSkillListString = &quot;skillList&quot; + chosenAttribute]
[h: listOfSkillNamesString = lower(chosenAttribute)+&quot;List&quot;]

[h: listOfSkillNames = getLibProperty(listOfSkillNamesString,&quot;Lib:Library&quot;)]
[h: listOfBroadSkillNames = json.get(getLibProperty(&quot;SkillsList&quot;,&quot;Lib:Library&quot;),broadSkillListString)]
[h: listOfSkillNames = json.toList(listOfSkillNames)]

[h: situationBonus = getPropVar(&quot;Situation Bonus&quot;, playerTokenID, &quot;&quot;)]

[h: formattedSkillList = &quot;&quot;]
[h: unformattedSkillList = &quot;&quot;]
[h, foreach(skillName,listOfSkillNames), code :
	{
	[h: contains = listcontains(listOfBroadSkillNames,skillName)]
	[h, if(skillName == situationBonus): skillNameString = skillName + &quot; [-d4]&quot;; skillNameString = skillName]
	[h, if(contains &gt; 0), code:{
		[h: formattedSkillList = listAppend(formattedSkillList,&quot;&lt;html&gt;&lt;b&gt;&quot;+skillNameString+&quot;&lt;/b&gt;&lt;/html&gt;&quot;)]
		[h: unformattedSkillList = listAppend(unformattedSkillList, skillName)]
		};{
		[h: formattedSkillList = listAppend(formattedSkillList,&quot;&lt;html&gt;&lt;i&gt;&quot;+skillNameString+&quot;&lt;/i&gt;&lt;/html&gt;&quot;)]
		[h: unformattedSkillList = listAppend(unformattedSkillList, skillName)]
		}
	]
	}	
]

[h: abort(input(&quot;chosenSkillIndex|&quot;+formattedSkillList+&quot;|Choose which skill to check|LIST|Select = 0&quot;))]

[h: chosenSkillName = listGet(unformattedSkillList,chosenSkillIndex)]

	[h: &apos;&lt;!-- Start of Skill Get --&gt;&apos;]

[h: knownSkills = getProperty(&quot;Skills&quot;,playerTokenID)]
[h: knownSkillData = json.get(knownSkills,chosenSkillName)]
[h: rank = json.get(knownSkillData ,&quot;Rank&quot;)]

	[h: &apos;&lt;!-- End of Skill Get --&gt;&apos;]

[h, macro(&quot;skillCheckSpecific@Lib:bw&quot;): chosenSkillName + &quot;,&quot; + playerTokenID)]</command>
        <label>Skill Check Selected</label>
        <group>GM Tools</group>
        <sortby>20</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>179</index>
        <colorKey>pink</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]
[h: selectSelected()]

[h: abort(input(
&quot;chosenAttribute|Strength,Dexterity,Constitution,Intelligence,Willpower,Personality|Choose which attribute the skill belongs to|LIST|Select = 0 VALUE=STRING&quot;
))]

[h: broadSkillListString = &quot;skillList&quot; + chosenAttribute]
[h: listOfSkillNamesString = lower(chosenAttribute)+&quot;List&quot;]

[h: listOfSkillNames = getLibProperty(listOfSkillNamesString,&quot;Lib:Library&quot;)]
[h: listOfBroadSkillNames = json.get(getLibProperty(&quot;SkillsList&quot;,&quot;Lib:Library&quot;),broadSkillListString)]
[h: listOfSkillNames = json.toList(listOfSkillNames)]

[h: situationBonus = getPropVar(&quot;Situation Bonus&quot;, playerTokenID, &quot;&quot;)]

[h: formattedSkillList = &quot;&quot;]
[h: unformattedSkillList = &quot;&quot;]
[h, foreach(skillName,listOfSkillNames), code :
	{
	[h: contains = listcontains(listOfBroadSkillNames,skillName)]
	[h, if(skillName == situationBonus): skillNameString = skillName + &quot; [-d4]&quot;; skillNameString = skillName]
	[h, if(contains &gt; 0), code:{
		[h: formattedSkillList = listAppend(formattedSkillList,&quot;&lt;html&gt;&lt;b&gt;&quot;+skillNameString+&quot;&lt;/b&gt;&lt;/html&gt;&quot;)]
		[h: unformattedSkillList = listAppend(unformattedSkillList, skillName)]
		};{
		[h: formattedSkillList = listAppend(formattedSkillList,&quot;&lt;html&gt;&amp;nbsp;&amp;nbsp;&lt;i&gt;&quot;+skillNameString+&quot;&lt;/i&gt;&lt;/html&gt;&quot;)]
		[h: unformattedSkillList = listAppend(unformattedSkillList, skillName)]
		}
	]
	}	
]

[h: abort(input(&quot;chosenSkillIndex|&quot;+formattedSkillList+&quot;|Choose which skill to check|LIST|Select = 0&quot;))]

[h: chosenSkillName = listGet(unformattedSkillList,chosenSkillIndex)]

[h: abort(input(
	&quot;modifier|-5,-4,-3,-2,-1,0,+1,+2,+3,+4,+5,+6,+7|Situation Step Modifier|LIST|Select = 5&quot;,
	&quot;target|0|Number of successes required&quot;
	))
]

[h: modifier = modifier -5]

[h: successes = 0]
[h: failures = 0]
[h: successList = &quot;&quot;]
[h: i = 0]

[h, while(i != -1), code:
	{
	[h: skillCheckBasic(chosenSkillName,modifier,playerTokenID)]
	[h: success = macro.return]
	[h, switch(success), code:
	case &quot;Ordinary success&quot; :
		{
		[h: successes = successes + 1]
		};
	case &quot;Good success&quot; :
		{
		[h: successes = successes + 2]
		};
	case &quot;Amazing success&quot; :
		{
		[h: successes = successes + 3]
		};
	case &quot;Failure&quot; :
		{
		[h: failures = failures + 1]
		};
	case &quot;Critical failure!&quot; :
		{
		[h: failures = failures + 3]
		};
	case &quot;Automatic success!&quot; :
		{
		[h: successes = successes + 3]
		};
	default: {
		[h: assert(0, &quot;switch(success) complexSkillCheck [&quot; + success + &quot;]&quot;, 1)]
		}	
	]
	
	[h: successList = listAppend(successList,success)]
	
	[h, if(failures &gt;= 3), code:
		{
		[h: broadcast(getName(playerTokenID) + &quot;&apos;s &quot; + chosenSkillName + &quot; complex skill check failed on attempt &quot;+i+&quot; (&quot; + successes + &quot; successes)&quot;)]
		[h: abort(0)]
		};{
		}
	]
	
	[h: screen = input(&quot;continue|&lt;html&gt;&amp;nbsp;&lt;/html&gt;|&lt;html&gt;Successes: &quot;+successes+&quot;&lt;br&gt;Failures: &quot;+failures+&quot;&lt;br&gt;Continue?&lt;/html&gt;|LABEL&quot;)]
	
	[h: i = i + 1]
	[h, if(screen == 0): i = -1)]
	
	}
]

[h, if(successes &gt;= target): broadcast(getName(playerTokenID) + &quot;&apos;s &quot; + chosenSkillName + &quot; complex skill check successful (&quot; + successes + &quot; successes)&quot;) ; broadcast(getName(playerTokenID) + &quot;&apos;s &quot; + chosenSkillName + &quot; complex skill check failed (&quot; + successes + &quot; successes vs target of &quot;+target+&quot;)&quot;)]</command>
        <label>Complex Skill Check Selected</label>
        <group>GM Tools</group>
        <sortby>21</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>192</index>
        <colorKey>pink</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]
[h: selectSelected()]

[h: complexSkillCheckArray = getLibProperty(&quot;Complex Skill Checks&quot;,&quot;Lib:bw&quot;)]
[h: inputList = &quot;&quot;]
[h, foreach (complexSkillCheck, complexSkillCheckArray):
	inputList = listAppend(inputList,json.get(complexSkillCheck,&quot;playerName&quot;) + &quot; vs &quot; + json.get(complexSkillCheck,&quot;chosenSkillName&quot;) + &quot;(&quot; + json.get(complexSkillCheck,&quot;successes&quot;) + &quot;/&quot; + json.get(complexSkillCheck,&quot;failures&quot;) + &quot;)&quot;)
]

[h: inputList = listAppend(inputList,&quot;New complex skill check&quot;)]

[h: abort(input(&quot;complexIndex|&quot;+inputList+&quot;|Choose a complex skill check|LIST|Select = 0&quot;))]

[h: listCount = listCount(inputList)]

[h, if(complexIndex != listCount - 1), code :
	{
	
	[h: complexSkillCheck = json.get(complexSkillCheckArray,complexIndex)]
	[h: varsFromStrProp(json.toStrProp(complexSkillCheck))]
	[h: success = skillCheckBasic(chosenSkillName,modifier,playerTokenID)]
	
	};{

	[h: abort(input(
	&quot;chosenAttribute|Strength,Dexterity,Constitution,Intelligence,Willpower,Personality|Choose which attribute the skill belongs to|LIST|Select = 0 VALUE=STRING&quot;
	))]

	[h: broadSkillListString = &quot;skillList&quot; + chosenAttribute]
	[h: listOfSkillNamesString = lower(chosenAttribute)+&quot;List&quot;]

	[h: listOfSkillNames = getLibProperty(listOfSkillNamesString,&quot;Lib:Library&quot;)]
	[h: listOfBroadSkillNames = json.get(getLibProperty(&quot;SkillsList&quot;,&quot;Lib:Library&quot;),broadSkillListString)]
	[h: listOfSkillNames = json.toList(listOfSkillNames)]

	[h: situationBonus = getPropVar(&quot;Situation Bonus&quot;, playerTokenID, &quot;&quot;)]

	[h: formattedSkillList = &quot;&quot;]
	[h: unformattedSkillList = &quot;&quot;]
	[h, foreach(skillName,listOfSkillNames), code :
		{
		[h: contains = listcontains(listOfBroadSkillNames,skillName)]
		[h, if(skillName == situationBonus): skillNameString = skillName + &quot; [-d4]&quot;; skillNameString = skillName]
		
		[h, if(contains &gt; 0): formattedSkillList = listAppend(formattedSkillList,&quot;&lt;html&gt;&lt;b&gt;&quot;+skillNameString+&quot;&lt;/b&gt;&lt;/html&gt;&quot;)]
		[h, if(contains &gt; 0): unformattedSkillList = listAppend(unformattedSkillList, skillName)]
		
		[h, if(contains &lt;= 0): formattedSkillList = listAppend(formattedSkillList,&quot;&lt;html&gt;&amp;nbsp;&amp;nbsp;&lt;i&gt;&quot;+skillNameString+&quot;&lt;/i&gt;&lt;/html&gt;&quot;)]
		[h, if(contains &lt;= 0): unformattedSkillList = listAppend(unformattedSkillList, skillName)]
		}
	]

	[h: abort(input(&quot;chosenSkillIndex|&quot;+formattedSkillList+&quot;|Choose which skill to check|LIST|Select = 0&quot;))]

	[h: chosenSkillName = listGet(unformattedSkillList,chosenSkillIndex)]

	[h: abort(input(
		&quot;modifier|-5,-4,-3,-2,-1,0,+1,+2,+3,+4,+5,+6,+7|Situation Step Modifier|LIST|Select = 5&quot;,
		&quot;target|0|Number of successes required&quot;
		))
	]

	[h: modifier = modifier -5]

	[h: successes = 0]
	[h: failures = 0]
	
	[h: success = skillCheckBasic(chosenSkillName,modifier,playerTokenID)]
	
	[h: complexSkillCheckArray = json.append(complexSkillCheckArray,&quot;tempVar&quot;)]

	}
]
	
[h, switch(success), code:
	case &quot;Ordinary success&quot; :
		{
		[h: successes = successes + 1]
		};
	case &quot;Good success&quot; :
		{
		[h: successes = successes + 2]
		};
	case &quot;Amazing success&quot; :
		{
		[h: successes = successes + 3]
		};
	case &quot;Failure&quot; :
		{
		[h: failures = failures + 1]
		};
	case &quot;Critical failure!&quot; :
		{
		[h: failures = failures + 3]
		};
	case &quot;Automatic success!&quot; :
		{
		[h: successes = successes + 3]
		};
	default: {
		[h: assert(0, &quot;switch(success) complexSkillCheck [&quot; + success + &quot;]&quot;, 1)]
		}	
]

[h, if(failures &gt;= 3), code:
	{
	[h: broadcast(getName(playerTokenID) + &quot;&apos;s &quot; + chosenSkillName + &quot; complex skill check failed (&quot; + successes + &quot; successes)&quot;)]
	[h: complexSkillCheckArray = json.remove(complexSkillCheckArray,complexIndex)]
	[h: setLibProperty(&quot;Complex Skill Checks&quot;,complexSkillCheckArray,&quot;Lib:bw&quot;)]
	[h: abort(0)]
	};{
	}
]

[h: endCheck = input(&quot;endCheck|&lt;html&gt;&amp;nbsp;&lt;/html&gt;|&lt;html&gt;Successes: &quot;+successes+&quot;&lt;br&gt;Failures: &quot;+failures+&quot;&lt;br&gt;Finish skill check?&lt;/html&gt;|LABEL&quot;)]

[h, if(endCheck), code :
	{
	[h: broadcast(getName(playerTokenID) + &quot;&apos;s &quot; + chosenSkillName + &quot; complex skill ended (&quot; + successes + &quot; successes)&quot;)]
	[h: complexSkillCheckArray = json.remove(complexSkillCheckArray,complexIndex)]
	};{
	[h: complexSkillCheckArray = json.remove(complexSkillCheckArray,complexIndex)]
	[h: complexSkillCheckArray = json.append(complexSkillCheckArray,json.set(&quot;&quot;,&quot;playerTokenID&quot;,playerTokenID,&quot;chosenSkillName&quot;,chosenSkillName,&quot;playerName&quot;,getName(playerTokenID),&quot;modifier&quot;,modifier,&quot;successes&quot;,successes,&quot;failures&quot;,failures))]
	}
]

[h: setLibProperty(&quot;Complex Skill Checks&quot;,complexSkillCheckArray,&quot;Lib:bw&quot;)]</command>
        <label>Complex Skill Check Delayed Selected</label>
        <group>GM Tools</group>
        <sortby>22</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>124</index>
        <colorKey>purple</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: refresh = getProperty(&quot;Refresh Character Sheet&quot;,playerTokenID)]

[r, if (refresh == 1), code :{
	[r, frame (&quot;Loading Screen&quot;): {
		[r, macro(&quot;loadingScreenForm@Lib:bw&quot;): &quot;&quot;]
		}
	]
	};{
	}
]

[h: output = json.set(&quot;&quot;,&quot;playerTokenID&quot;,playerTokenID)]

[r, frame(&quot;Character Sheet&quot;): {

	[r, macro(&quot;charSheetForm@Lib:bw&quot;): output]

}]

</command>
        <label>Open Character Sheet Selected</label>
        <group>GM Tools</group>
        <sortby>30</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>150</index>
        <colorKey>aqua</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: abort(input(
	&quot;step|-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8|Step Penalty|LIST|VALUE=STRING Select = 5&quot;,
	&quot;target|0/0/0|Target (optional)&quot;,
	&quot;description|.|Description (optional)&quot;
	))
]

[h: alternityRoll(step)]
[h: returnStrProp = json.toStrProp(macro.return)]
[h: varsFromStrProp(returnStrProp)]

[h, if(stepSymbol == &quot;+&quot;): combinedRoll = controlDieRoll + situationDieRoll]
[h, if(stepSymbol == &quot;-&quot;): combinedRoll = controlDieRoll - situationDieRoll]

[h, if ((target == &quot;&quot;)||(target == &quot;0/0/0&quot;)), code :
	{
	
	[h, if ((description == &quot;&quot;)||(description == &quot; &quot;)||(description == &quot;.&quot;)): description = &quot;&quot;; description = description + &quot;&lt;br&gt;&quot;]
	[h: output = description + &quot;&lt;i&gt;&quot; + playerTokenName + &quot;&lt;/i&gt; rolls &quot; +  controlDieRoll + &quot;[d20] &quot; + stepSymbol + &quot; &quot; + situationDieRoll + &quot;[&quot; + situationDieText + &quot;]&quot; + &quot; = &lt;b&gt;&quot; + combinedRoll + &quot;&lt;/b&gt;.&quot;]
	
	};{
	
	[h: targets = stringToList(target,&quot;/&quot;)]
	[h: ordinaryTarget = listGet(targets,0)]
	[h: goodTarget = listGet(targets,1)]
	[h: amazingTarget = listGet(targets,2)]
	[h, if (combinedRoll &lt;= ordinaryTarget): success = &quot;Ordinary success&quot;]
	[h, if (combinedRoll &lt;= goodTarget): success = &quot;Good success&quot;]
	[h, if (combinedRoll &lt;= amazingTarget): success = &quot;Amazing success&quot;]
	[h, if (combinedRoll &gt; ordinaryTarget): success = &quot;Failure&quot;]
	[h, if (controlDieRoll == 20): success = &quot;Critical Failure&quot;]
	[h, if (controlDieRoll == 1): success = &quot;Automatic Success&quot;]
	
	[h, if ((description == &quot;&quot;)||(description == &quot; &quot;)||(description == &quot;.&quot;)): description = &quot;&quot;; description = description + &quot;&lt;br&gt;&quot;]
	
	[h, if (step &lt; 0):
	output = description + &quot;&lt;i&gt;&quot; + playerTokenName + &quot;&lt;/i&gt; rolls against a target of &quot; + target + &quot; with a &quot; + step + &quot;step modifier.&lt;br&gt;&quot; + controlDieRoll + &quot;[d20] &quot; + stepSymbol + &quot; &quot; + situationDieRoll + &quot;[&quot; + situationDieText + &quot;]&quot; + &quot; = &lt;b&gt;&quot; + combinedRoll + &quot;&lt;/b&gt; (&quot; + success + &quot;)&quot;;
	output = description + &quot;&lt;i&gt;&quot; + playerTokenName + &quot;&lt;/i&gt; rolls against a target of &quot; + target + &quot; with a +&quot; + step + &quot;step modifier.&lt;br&gt;&quot; + controlDieRoll + &quot;[d20] &quot; + stepSymbol + &quot; &quot; + situationDieRoll + &quot;[&quot; + situationDieText + &quot;]&quot; + &quot; = &lt;b&gt;&quot; + combinedRoll + &quot;&lt;/b&gt; (&quot; + success + &quot;)&quot;]
	
	}
]

[h: broadcast(output)]</command>
        <label>Alternity Roll Selected</label>
        <group>GM Tools</group>
        <sortby>40</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>105</index>
        <colorKey>navy</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: abort(input(
&quot;locationChoice|Main Hand,Off Hand,Head,Chest,Accessory|Choose where you wish to equip|LIST|Select = 0 VALUE = STRING&quot;
))]

[h: &quot;&lt;!-- If Equipment Property is Empty, format. --&gt;&quot;]

[h: equipmentIsEmpty = isPropertyEmpty(&quot;Equipment&quot;,playerTokenID)]
[h, if(equipmentIsEmpty), code :{
	[h: equipmentInput = json.set(&quot;&quot;,&quot;Head&quot;,&quot;&quot;,&quot;Head Type&quot;,&quot;&quot;,&quot;Chest&quot;,&quot;&quot;,&quot;Chest Type&quot;,&quot;&quot;,&quot;Main Hand&quot;,&quot;&quot;,&quot;Main Hand Type&quot;,&quot;&quot;,&quot;Off Hand&quot;,&quot;&quot;,&quot;Off Hand Type&quot;,&quot;&quot;,&quot;Accessory&quot;,&quot;&quot;,&quot;Accessory Type&quot;,&quot;&quot;)]
	[h: setProperty(&quot;Equipment&quot;,equipmentInput,playerTokenID)]
	};{
	[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
	
	[h, if(json.isEmpty(equipmentLookup)), code :{
		[h: equipmentInput = json.set(&quot;&quot;,&quot;Head&quot;,&quot;&quot;,&quot;Head Type&quot;,&quot;&quot;,&quot;Chest&quot;,&quot;&quot;,&quot;Chest Type&quot;,&quot;&quot;,&quot;Main Hand&quot;,&quot;&quot;,&quot;Main Hand Type&quot;,&quot;&quot;,&quot;Off Hand&quot;,&quot;&quot;,&quot;Off Hand Type&quot;,&quot;&quot;,&quot;Accessory&quot;,&quot;&quot;,&quot;Accessory Type&quot;,&quot;&quot;)]
		[h: setProperty(&quot;Equipment&quot;,equipmentInput,playerTokenID)]
		};{
		[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
		}
	]
	}
]



[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
[h: nameOfEquippedInLocation = json.get(equipmentLookup,locationChoice)]
[h: typeOfEquippedInLocation = json.get(equipmentLookup,locationChoice + &quot; Type&quot;)]

[h: &quot;&lt;!-- If there&apos;s something in the locationChoice --&gt;&quot;]

[h, if(nameOfEquippedInLocation != &quot;&quot;), code :{

	[h: &quot;&lt;!-- Prompt and process unequip if Yes else abort --&gt;&quot;]

	[h: abort(input(&quot;unequipChoice|No,Yes|Do you wish to unequip &quot; + nameOfEquippedInLocation + &quot;?|radio|select = 1&quot;))]
	[h: abort(unequipChoice)]
	
	[h: &quot;&lt;!-- Get equipped item slot type --&gt;&quot;]
	
	[h: equippedItemLookup = json.get(getLibProperty(typeOfEquippedInLocation,&quot;Lib:Library&quot;),nameOfEquippedInLocation)]
	[h: equippedItemEquipSlot = json.get(equippedItemLookup,&quot;equipSlot&quot;)]
	
	[h: &quot;&lt;!-- If Full, make list - Helmet, Chest --&gt;&quot;]
	
	[h, if(equippedItemEquipSlot == &quot;Full&quot;), code :{
		[h: equippedItemEquipSlot = &quot;Helmet, Chest&quot;]
	};{}]
	
	[h: &quot;&lt;!-- For each slot the unequipping item occupies make equipOutput empty --&gt;&quot;]
	[h, if (equippedItemEquipSlot == &quot;Full&quot;): equippedItemEquipSlots = &quot;Helmet, Chest&quot;]
	[h, if (equippedItemEquipSlot == &quot;Chest&quot;): equippedItemEquipSlots = &quot;Chest&quot;]
	[h, if (equippedItemEquipSlot == &quot;Main Hand&quot;): equippedItemEquipSlots = &quot;Main Hand&quot;]
	[h, if ((equippedItemEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Main Hand&quot;)): equippedItemEquipSlots = &quot;Main Hand&quot;]
	[h, if ((equippedItemEquipSlot == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Off Hand&quot;)): equippedItemEquipSlots = &quot;Off Hand&quot;]
	[h, if (equippedItemEquipSlot == &quot;Two Hands&quot;): equippedItemEquipSlots = &quot;Main Hand, Off Hand&quot;]
	[h, if (equippedItemEquipSlot == &quot;Helmet&quot;): equippedItemEquipSlots = &quot;Head&quot;]
	[h, if (equippedItemEquipSlot == &quot;Shield&quot;): equippedItemEquipSlots = &quot;Off Hand&quot;]
	[h: equipOutput = equipmentLookup]
	[h, foreach(slot,equippedItemEquipSlots), code :{
		[h: equipOutput = json.set(equipOutput,slot,&quot;&quot;)]
		[h: equipOutput = json.set(equipOutput,slot + &quot; Type&quot;,&quot;&quot;)]		
	}]
	
	
	[h: &quot;&lt;!-- Save unequipped input as property --&gt;&quot;]
	
	[h: setProperty(&quot;Equipment&quot;,equipOutput,playerTokenID)]

	[h: &quot;&lt;!-- Apply unequipped item to Inventory --&gt;&quot;]
	
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputItem = json.get(inputInventory,nameOfEquippedInLocation)]
	
	[h: &quot;&lt;!-- If none of the unequipping item in Inventory, set quantity to 1 and apply, otherwise +1 and apply --&gt;&quot;]
	
	[h: empty = json.isEmpty(inputItem)]
	[h, if(empty == 1), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,nameOfEquippedInLocation,&quot;Quantity&quot;,1,&quot;Type&quot;,typeOfEquippedInLocation)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputitemQuantity = json.get(inputitem,&quot;Quantity&quot;)]
		[h: outputitemQuantity = inputitemQuantity + 1]
		[h: outputitem = json.set(inputitem,&quot;Name&quot;,nameOfEquippedInLocation,&quot;Quantity&quot;,outputitemQuantity,&quot;Type&quot;,typeOfEquippedInLocation)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation,outputitem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]
		
	[h: &quot;&lt;!-- Broadcast Player unequipped Item --&gt;&quot;]
	
	[h: broadcast(playerTokenName + &quot; unequipped &quot; + nameOfEquippedInLocation + &quot;.&quot;)]
	
};{}]

[h: &quot;&lt;!-- Get lookup jsons --&gt;&quot;]

[h: inventoryLookup = getProperty(&quot;Inventory&quot;,playerTokenID)]
[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]
[h: weaponLookup = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]
[h: armorLookup = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]

[h: inventoryList = json.toList(inventoryLookup)]
[h: inventoryList2 = &quot;&quot;]

[h: &apos;&lt;!-- Remove items which are not in library database --&gt;&apos;]
[h, foreach(item,inventoryList), code :{
	[h: var1 = json.get(inventoryLookup,item)]
	[h: itemType = json.get(var1,&quot;Type&quot;)]
	[h, if (itemType == &quot;Weapon&quot;): relevantLookup = weaponLookup]
	[h, if (itemType == &quot;Armor&quot;): relevantLookup = armorLookup]
	[h: contains = json.contains(relevantLookup,item)]
	[h, if (contains): inventoryList2 = listAppend(inventoryList2,item)]
	[h, if (! contains), code :{
		[h: inventoryLookup = json.remove(inventoryLookup,item)]
		};{
		}
	]

	}
]

[h: equippableInSlotInventoryList = &quot;&quot;]

[h: &quot;&lt;!-- For each item in the token&apos;s inventory --&gt;&quot;]

[h, foreach(item,inventoryList2), code: {
	
	[h: &quot;&lt;!-- Get correct lookup json --&gt;&quot;]
	[h: var1 = json.get(inventoryLookup,item)]
	[h: itemType = json.get(var1,&quot;Type&quot;)]
	[h, if (itemType == &quot;Weapon&quot;): relevantLookup = weaponLookup]
	[h, if (itemType == &quot;Armor&quot;): relevantLookup = armorLookup]
	[h, if (itemType == &quot;Item&quot;), code :{
		[h: var2 = json.set(&quot;&quot;,&quot;equipSlot&quot;,&quot;None&quot;)]
		[h: relevantLookup = json.set(&quot;&quot;,item,var2)]
	};{}]
	
	[h: &quot;&lt;!-- Get slot(s) each item can be equipped in --&gt;&quot;]
	[h: relevantItem = json.get(relevantLookup,item)]
	[h: equippableItemSlots = json.get(relevantItem,&quot;equipSlot&quot;)]
	[h, if (equippableItemSlots == &quot;Full&quot;): itemSlots = &quot;Helmet, Chest&quot;]
	[h, if (equippableItemSlots == &quot;Chest&quot;): itemSlots = &quot;Chest&quot;]
	[h, if (equippableItemSlots == &quot;Main Hand&quot;): itemSlots = &quot;Main Hand&quot;]
	[h, if (equippableItemSlots == &quot;Either Hand&quot;): itemSlots = &quot;Main Hand, Off Hand&quot;]
	[h, if (equippableItemSlots == &quot;Two Hands&quot;): itemSlots = &quot;Main Hand, Off Hand&quot;]
	[h, if (equippableItemSlots == &quot;Helmet&quot;): itemSlots = &quot;Head&quot;]
	[h, if (equippableItemSlots == &quot;Shield&quot;): itemSlots = &quot;Off Hand&quot;]
	
	[h: &quot;&lt;!-- For each slot the item can be equipped in, if it matches locationChoice, add to list equippableInSlotInventoryList --&gt;&quot;]
	[h, foreach (slot,itemSlots), code :{
		[h: doesEquippableInSlotInventoryListContainItemAlready = listContains(equippableInSlotInventoryList, item)]
		[h, if ((slot == locationChoice)&amp;&amp;(doesEquippableInSlotInventoryListContainItemAlready == 0)): equippableInSlotInventoryList = listAppend(equippableInSlotInventoryList,item)]
	}]
}]

[h: &quot;&lt;!-- If list empty, assert.  Add none list item --&gt;&quot;]

[h, if(equippableInSlotInventoryList == &quot;&quot;): assert(0,&quot;You have no items eligible to equip in &quot; + locationChoice + &quot;.&quot;,0)]
[h: equippableInSlotInventoryList = listAppend(equippableInSlotInventoryList,&quot;None&quot;)]

[h: &quot;&lt;!-- Prompt player for correct equip choice from equippableInSlotInventoryList --&gt;&quot;]

[h: abort(input(
&quot;itemChoice|&quot;+equippableInSlotInventoryList+&quot;|Choose an item to equip in &quot;+locationChoice+&quot;|LIST|Select = 0 VALUE = STRING&quot;
))]

[h: &quot;&lt;!-- Fudge Vars for None --&gt;&quot;]

[h, if (itemChoice == &quot;None&quot;), code :{
	[h: equippableItemSlots = &quot;None&quot;]
	[h: inventoryLookup = json.set(inventoryLookup,&quot;None&quot;,json.set(&quot;&quot;,&quot;Type&quot;,&quot;None&quot;))]
	};{}]

[h: &quot;&lt;!-- Equip item in all slots it takes up --&gt;&quot;]
[h: &quot;&lt;!-- Preform item slots of itemChoice --&gt;&quot;]

[h: var3 = json.get(inventoryLookup,itemChoice)]
[h: itemType = json.get(var3,&quot;Type&quot;)]
[h, if (itemType == &quot;Weapon&quot;): relevantLookup = weaponLookup]
[h, if (itemType == &quot;Armor&quot;): relevantLookup = armorLookup]
[h, if (itemType == &quot;Item&quot;): assert(0,&quot;Item type should not have equip slot&quot;,1)]

[h: &quot;&lt;!-- If item is not None, get equipable slots--&gt;&quot;]

[h, if (itemType != &quot;None&quot;), code :{
	[h: relevantItem = json.get(relevantLookup,itemChoice)]
	[h: equippableItemSlots = json.get(relevantItem,&quot;equipSlot&quot;)]
	};{
}]
	
[h, if (equippableItemSlots == &quot;Full&quot;): itemSlots2 = &quot;Helmet, Chest&quot;]
[h, if (equippableItemSlots == &quot;Chest&quot;): itemSlots2 = &quot;Chest&quot;]
[h, if (equippableItemSlots == &quot;Main Hand&quot;): itemSlots2 = &quot;Main Hand&quot;]
[h, if ((equippableItemSlots == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Main Hand&quot;)): itemSlots2 = &quot;Main Hand&quot;]
[h, if ((equippableItemSlots == &quot;Either Hand&quot;)&amp;&amp;(locationChoice == &quot;Off Hand&quot;)): itemSlots2 = &quot;Off Hand&quot;]
[h, if (equippableItemSlots == &quot;Two Hands&quot;): itemSlots2 = &quot;Main Hand, Off Hand&quot;]
[h, if (equippableItemSlots == &quot;Helmet&quot;): itemSlots2 = &quot;Head&quot;]
[h, if (equippableItemSlots == &quot;Shield&quot;): itemSlots2 = &quot;Off Hand&quot;]
[h, if (equippableItemSlots == &quot;None&quot;): itemSlots2 = locationChoice]

[h: &quot;&lt;!-- For each slot the equipping item takes up --&gt;&quot;]
[h: &quot;&lt;!-- Make sure each slot is empty before equip --&gt;&quot;]
[h: &quot;&lt;!-- If two handed weapon, prompt unequip in other hand if not empty --&gt;&quot;]

[h: otherHand = &quot;&quot;]
[h, if((equippableItemSlots == &quot;Two Hands&quot;)&amp;&amp;(locationChoice == &quot;Main Hand&quot;)): otherHand = &quot;Off Hand&quot;]
[h, if((equippableItemSlots == &quot;Two Hands&quot;)&amp;&amp;(locationChoice == &quot;Off Hand&quot;)): otherHand = &quot;Main Hand&quot;]

[h: equipmentLookup2 = getProperty(&quot;Equipment&quot;,playerTokenID)]
[h: nameOfEquippedInLocation2 = json.get(equipmentLookup2,otherHand)]
[h: typeOfEquippedInLocation2 = json.get(equipmentLookup2,otherHand + &quot; Type&quot;)]

[h: &quot;&lt;!-- If there&apos;s something in the otherHand --&gt;&quot;]

[h, if((nameOfEquippedInLocation2 != &quot;&quot;)&amp;&amp;(otherHand != &quot;&quot;)), code :{

	[h: abort(input(&quot;unequipChoice|No,Yes|You will need to also unequip &quot; + nameOfEquippedInLocation2 + &quot; from your &quot; + otherHand + &quot; to equip &quot;+ itemChoice +&quot;. Unequip?|radio|select = 1&quot;))]
	[h: abort(unequipChoice)]
	
	[h: &quot;&lt;!-- Get equipped item slot type --&gt;&quot;]
	
	[h: equippedItemLookup = json.get(getLibProperty(typeOfEquippedInLocation2,&quot;Lib:Library&quot;),nameOfEquippedInLocation2)]
	[h: equippedItemEquipSlot = json.get(equippedItemLookup,&quot;equipSlot&quot;)]

	[h: &quot;&lt;!-- Save unequipped input as property --&gt;&quot;]
	
	[h: equipOutput = json.set(equipOutput,otherHand,&quot;&quot;)]
	[h: equipOutput = json.set(equipOutput,otherHand + &quot; Type&quot;,&quot;&quot;)]	
	
	[h: setProperty(&quot;Equipment&quot;,equipOutput,playerTokenID)]

	[h: &quot;&lt;!-- Apply unequipped item to Inventory --&gt;&quot;]
	
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputItem = json.get(inputInventory,nameOfEquippedInLocation2)]
	
	[h: &quot;&lt;!-- If none of the unequipping item in Inventory, set quantity to 1 and apply, otherwise +1 and apply --&gt;&quot;]
	
	[h: empty = json.isEmpty(inputItem)]
	[h, if(empty == 1), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,nameOfEquippedInLocation2,&quot;Quantity&quot;,1,&quot;Type&quot;,typeOfEquippedInLocation2)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation2,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputitemQuantity = json.get(inputitem,&quot;Quantity&quot;)]
		[h: outputitemQuantity = inputitemQuantity + 1]
		[h: outputitem = json.set(inputitem,&quot;Name&quot;,nameOfEquippedInLocation2,&quot;Quantity&quot;,outputitemQuantity,&quot;Type&quot;,typeOfEquippedInLocation2)]
		[h: outputInventory = json.set(inputInventory,nameOfEquippedInLocation2,outputitem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]
		
	[h: &quot;&lt;!-- Broadcast Player unequipped Item --&gt;&quot;]
	
	[h: broadcast(playerTokenName + &quot; unequipped &quot; + nameOfEquippedInLocation2 + &quot;.&quot;)]
	
	};{}
]

[h: &quot;&lt;!-- Refresh lookups due to updates --&gt;&quot;]
	
[h: inventoryLookup = getProperty(&quot;Inventory&quot;,playerTokenID)]
[h: equipmentLookup = getProperty(&quot;Equipment&quot;,playerTokenID)]	

[h, foreach (slot,itemSlots2), code :{
	[h: slotName =  json.get(equipmentLookup,slot)]
	[h: jsonIsEmpty = json.isEmpty(slotName)]
	[h, if(! jsonIsEmpty): assert(0,&quot;Expected empty equipment slot contains an item&quot;,1)]
	}]

[h: &quot;&lt;!-- Insert item into equipment slots for output --&gt;&quot;]	
[h, if(itemChoice == &quot;None&quot;): itemType = &quot;&quot;]
[h, if(itemChoice == &quot;None&quot;): itemChoice = &quot;&quot;]
[h: equipmentOutput = equipmentLookup]	

[h, foreach (slot,itemSlots2), code :{
	[h: equipmentOutput = json.set(equipmentOutput,slot,itemChoice,slot + &quot; Type&quot;,itemType)]
	}]
	
[h: &quot;&lt;!-- Update token equipment property with equipmentOutput as value --&gt;&quot;]	

[h: setProperty(&quot;Equipment&quot;,equipmentOutput,playerTokenID)]
[h, if(itemChoice == &quot;&quot;): itemChoice = &quot;nothing&quot;]
[h, if(equippableItemSlots == &quot;Two Hands&quot;), code :{
	[h: broadcast(playerTokenName + &quot; equipped &quot; + itemChoice + &quot; in both hands.&quot; , &quot;gm, getPlayerName()&quot;)]
	};{
	[h: broadcast(playerTokenName + &quot; equipped &quot; + itemChoice + &quot; in their &quot; + locationChoice + &quot; slot.&quot;, &quot;gm, getPlayerName()&quot;)]
	}
]</command>
        <label>Equip Selected</label>
        <group>GM Tools</group>
        <sortby>60</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>silver</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>134</index>
        <colorKey>olive</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: weaponArray = getLibProperty(&quot;Weapon&quot;,&quot;Lib:Library&quot;)]
[h: weaponList = json.toList(weaponArray)]

[h: screen = input(&quot;weaponChoice|&quot; + weaponList + &quot;|Choose a Weapon to purchase for &quot;+playerTokenName+&quot;|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]
[h: weaponStrProp = json.toStrProp(json.get(weaponArray,weaponChoice))] 
[h: varsFromStrProp(weaponStrProp)]

[h: playerMoney = getProperty(&quot;Money&quot;,playerTokenName)]
[h: fundsAfter = playerMoney - cost]

[h: range = shortRange + &quot;/&quot; + mediumRange + &quot;/&quot; + longRange]
[h: damage = ordinaryString + &quot;/&quot; + goodString + &quot;/&quot; + amazingString]

[h: input = input(
&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
&quot;junkVar|&quot;+skill+&quot;|Controlling speciality skill|LABEL&quot;,
&quot;junkVar|&quot;+accuracy+&quot;|Accuracy Modifier|LABEL&quot;,
&quot;junkVar|&quot;+mode+&quot;|Modes (F)ull (B)urst (A)uto (P)ersonal (T)hrown|LABEL&quot;,
&quot;junkVar|&quot;+range+&quot;|Range short/medium/long|LABEL&quot;,
&quot;junkVar|&quot;+type+&quot;|Type (Li)ght (Hi)gh (En)ergy|LABEL&quot;,
&quot;junkVar|&quot;+firepower+&quot;|Firepower (O)rdinary (G)ood (A)mazing|LABEL&quot;,
&quot;junkVar|&quot;+ordinaryString+&quot;/&quot;+goodString+&quot;/&quot;+amazingString+&quot;|Damage|LABEL&quot;,
&quot;junkVar|&quot;+actions+&quot;|Max actions per round|LABEL&quot;,
&quot;junkVar|&quot;+clipsize+&quot;|Clip size|LABEL&quot;,
&quot;junkVar|&quot;+clipcost+&quot;|Clip cost|LABEL&quot;,
&quot;junkVar|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed|LABEL&quot;,
&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
&quot;junkVar|&quot;+avail+&quot;|Availiability (Com)mon (Con)trolled, (Mil)itary (Res)tricted|LABEL&quot;,
&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
&quot;junkVar|&quot;+equipSlot+&quot;|Equipment Slot|LABEL&quot;,
&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
&quot;junkVar|&quot;+cost+&quot;|Cost to purchase|LABEL&quot;,
&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
)]
[h: abort(input)]
[h: abort(confpick)]

[h, if(confpick == 1), code :{
	[h: setProperty(&quot;Money&quot;,fundsAfter,playerTokenID)]
	[h: empty = isPropertyEmpty(&quot;Inventory&quot;,playerTokenID)]
	[h: empty2 = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: empty2 = length(empty2)]	
	[h, if((empty == 1)||(empty2 == 0)), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,0,&quot;Type&quot;,&quot;Weapon&quot;)]
		[h: outputInventory = json.set(&quot;&quot;,name,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{}]
		
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputweapon = json.get(inputInventory,name)]
	
	
	[h: empty = json.isEmpty(inputweapon)]
	[h, if(empty), code: {
		[h: outputweapon = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Weapon&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputweaponQuantity = json.get(inputweapon,&quot;Quantity&quot;)]
		[h: outputweaponQuantity = inputweaponQuantity + 1]
		[h: outputweapon = json.set(inputweapon,&quot;Quantity&quot;,outputweaponQuantity,&quot;Type&quot;,&quot;Weapon&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputweapon)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]

	[h: broadcast(playerTokenName + &quot; purchased a &quot; + name + &quot; for &quot; + cost + &quot;.&quot;)]
};{}]
</command>
        <label>Purchase Weapon Selected</label>
        <group>GM Tools</group>
        <sortby>70</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>136</index>
        <colorKey>olive</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: armorArray = getLibProperty(&quot;Armor&quot;,&quot;Lib:Library&quot;)]
[h: armorList = json.toList(armorArray)]

[h: screen = input(&quot;armorChoice|&quot; + armorList + &quot;|Choose the armor to purchase|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]

[h: armorStrProp = json.toStrProp(json.get(armorArray,armorChoice))] 
[h: varsFromStrProp(armorStrProp)]

[h: playerMoney = getProperty(&quot;Money&quot;,playerTokenID)]
[h: fundsAfter = playerMoney - cost]


[h, if((equipslot == &quot;Helmet&quot;)||(equipslot == &quot;Shield&quot;)||(equipslot == &quot;Other&quot;)), code :{
	[h: abort(input(
	&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
	&quot;junkVar|&quot;+skill+&quot;|Controlling skill|LABEL&quot;,
	&quot;junkVar|&quot;+actionPenalty+&quot;|Action Penalty|LABEL&quot;,
	&quot;junkVar|&quot;+toughness+&quot;|Toughness (O)rdinary (G)ood (A)mazing|LABEL&quot;,
	&quot;junkVar|&quot;+LiModifier+&quot;/&quot;+HiModifier+&quot;/&quot;+EnModifier+&quot;|Damage Reduction Li/Hi/En|LABEL&quot;,
	&quot;junkVar|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed|LABEL&quot;,
	&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
	&quot;junkVar|&quot;+avail+&quot;|Availiability (Com)mon (Con)trolled, (Mil)itary (Res)tricted|LABEL&quot;,
	&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
	&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
	&quot;junkVar|&quot;+equipslot+&quot;|Equip Slot|LABEL&quot;,
	&quot;junkVar|&quot;+cost+&quot;|Cost to purchase|LABEL&quot;,
	&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
	&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
	&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
	))]
	[h: abort(confpick)]
	
	};{
	
	[h: abort(input(
	&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
	&quot;junkVar|&quot;+skill+&quot;|Controlling skill|LABEL&quot;,
	&quot;junkVar|&quot;+actionPenalty+&quot;|Action Penalty|LABEL&quot;,
	&quot;junkVar|&quot;+toughness+&quot;|Toughness (O)rdinary (G)ood (A)mazing|LABEL&quot;,
	&quot;junkVar|&quot;+reduction+&quot;|Damage Reduction Li/Hi/En|LABEL&quot;,
	&quot;junkVar|&quot;+hide+&quot;|Hide modifier, 0 = cannot be concealed|LABEL&quot;,
	&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
	&quot;junkVar|&quot;+avail+&quot;|Availiability (Com)mon (Con)trolled, (Mil)itary (Res)tricted|LABEL&quot;,
	&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
	&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
	&quot;junkVar|&quot;+equipslot+&quot;|Equip Slot|LABEL&quot;,
	&quot;junkVar|&quot;+cost+&quot;|Cost to purchase|LABEL&quot;,
	&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
	&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
	&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
	))]
	[h: abort(confpick)]
	
}]
	


[h, if(confpick == 1), code :{
	[h: setProperty(&quot;Money&quot;,fundsAfter,playerTokenID)]
	[h: empty = isPropertyEmpty(&quot;Inventory&quot;,playerTokenID)]
	[h, if(empty), code: {
		[h: outputarmor = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Armor&quot;)]
		[h: outputInventory = json.set(&quot;&quot;,name,outputarmor)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{}]
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputarmor = json.get(inputInventory,name)]
	[h: empty = json.isEmpty(inputarmor)]
	[h, if(empty), code: {
		[h: outputarmor = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Armor&quot;	)]
		[h: outputInventory = json.set(inputInventory,name,outputarmor)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputarmorQuantity = json.get(inputarmor,&quot;Quantity&quot;)]
		[h: outputarmorQuantity = inputarmorQuantity + 1]
		[h: outputarmor = json.set(inputarmor,&quot;Quantity&quot;,outputarmorQuantity,&quot;Type&quot;,&quot;Armor&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputarmor)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]

	[h: broadcast(playerTokenName + &quot; purchased a &quot; + name + &quot; for &quot; + cost + &quot;.&quot;)]
};{}]
</command>
        <label>Purchase Armor Selected</label>
        <group>GM Tools</group>
        <sortby>71</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>137</index>
        <colorKey>olive</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: categoryArray = getLibProperty(&quot;Items&quot;,&quot;Lib:Library&quot;)]
[h: categoryList = json.toList(categoryArray)]

[h: screen = input(&quot;categoryChoice|&quot;+categoryList+&quot;|Choose a category|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen)]

[h: itemArray = json.get(categoryArray,categoryChoice)]
[h: itemList = json.toList(itemArray)]

[h: screen2 = input(&quot;itemChoice|&quot; + itemList + &quot;|Choose an Item to purchase|LIST|select = 0 VALUE = STRING&quot;)]
[h: abort(screen2)]

[h: itemStrProp = json.toStrProp(json.get(itemArray,itemChoice))] 
[h: varsFromStrProp(itemStrProp)]

[h: playerMoney = getProperty(&quot;Money&quot;,playerTokenID)]
[h: fundsAfter = playerMoney - cost]

[h: abort(input(
&quot;junkVar|&quot;+name+&quot;|Name|LABEL&quot;,
&quot;junkVar|&quot;+categoryChoice+&quot;|Category|LABEL&quot;,
&quot;junkVar|&quot;+mass+&quot;|Mass|LABEL&quot;,
&quot;junkVar|&quot;+PL+&quot;|Progress Level|LABEL&quot;,
&quot;junkVar|&quot;+description+&quot;|Description|LABEL&quot;,
&quot;junkVar|&quot;+cost+&quot;|Cost|LABEL&quot;,
&quot;junkVar|&quot;+playerMoney+&quot;|Current Funds|LABEL&quot;,
&quot;junkVar|&quot;+fundsAfter+&quot;|Funds after purchase|LABEL&quot;,
&quot;confpick|No,Yes|Do you wish to purchase &quot;+name+&quot; for &quot;+playerTokenName+&quot;?|radio|select = 1&quot;
))]
[h: abort(confpick)]

[h, if(confpick == 1), code :{
	[h: setProperty(&quot;Money&quot;,fundsAfter,playerTokenID)]
	[h: empty = isPropertyEmpty(&quot;Inventory&quot;,playerTokenID)]
	[h, if(empty), code: {
		[h: outputItem = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Item&quot;)]
		[h: outputInventory = json.set(&quot;&quot;,name,outputItem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{}]
	[h: inputInventory = getProperty(&quot;Inventory&quot;,playerTokenID)]
	[h: inputItem = json.get(inputInventory,name)]
	[h: empty = json.isEmpty(inputItem)]
	[h, if(empty), code: {
		[h: outputItem = json.set(&quot;&quot;,&quot;Name&quot;,name,&quot;Quantity&quot;,1,&quot;Type&quot;,&quot;Item&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputItem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		};{
		[h: inputItemQuantity = json.get(inputItem,&quot;Quantity&quot;)]
		[h: outputItemQuantity = inputItemQuantity + 1]
		[h: outputItem = json.set(inputItem,&quot;Quantity&quot;,outputItemQuantity,&quot;Type&quot;,&quot;Item&quot;)]
		[h: outputInventory = json.set(inputInventory,name,outputItem)]
		[h: setProperty(&quot;Inventory&quot;,outputInventory,playerTokenID)]
		}]

	[h: broadcast(playerTokenName + &quot; purchased a &quot; + name + &quot; for &quot; + cost + &quot;.&quot;)]
};{}]
</command>
        <label>Purchase Item Selected</label>
        <group>GM Tools</group>
        <sortby>72</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>125</index>
        <colorKey>fuchsia</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selectSelected()]

[h: playerTokenName = getName(playerTokenID)]

[h: output = json.set(&quot;&quot;,&quot;attributeButton&quot;,&quot;Strength&quot;,&quot;playerTokenName&quot;,playerTokenName,&quot;playerTokenID&quot;,playerTokenID,&quot;currentAttribute&quot;,&quot;&quot;)]

    [frame(&quot;Skills&quot;): {

        [r, macro(&quot;skillForm@Lib:bw&quot;): output]

    }]

</command>
        <label>Add Skills Selected</label>
        <group>GM Tools</group>
        <sortby>90</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>198</index>
        <colorKey>maroon</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]
[h: selectSelected()]

[h: achievementPoints = getPropVar(&quot;Achievement Points&quot;,playerTokenID,0)]
[h: level = getPropVar(&quot;Level&quot;,playerTokenID,1)]
[h, if (achievementPoints &lt; level + 5): assert(0,&quot;&lt;i&gt;&quot; + getName(playerTokenID) + &quot;&lt;/i&gt; has &quot; + achievementPoints + &quot; AP but requires &quot; + sum(level,5) + &quot; AP to reach level &quot; + sum(level,1) + &quot;.&quot;,0)]

[h: setProperty(&quot;Skill Points&quot;, getProperty(&quot;Skill Points&quot;, playerTokenID) + achievementPoints, playerTokenID)]
[h: setProperty(&quot;Achievement Points&quot;, 0, playerTokenID)]
[h: setProperty(&quot;Level&quot;, level + 1,playerTokenID)]

[h: broadcast(getName(playerTokenID) + &quot; has exchanged &quot; + achievementPoints + &quot; AP into Skill Points and achieved level &quot; + sum(level,1) + &quot;.&quot;)]</command>
        <label>Level Up Selected</label>
        <group>GM Tools</group>
        <sortby>95</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>106</index>
        <colorKey>teal</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: settings = getLibProperty(&quot;GM Settings&quot;,&quot;Lib:bw&quot;)]
[h: names = &quot;&quot;]
[h, foreach(setting,settings): names = listAppend(names,json.get(setting,&quot;name&quot;))]


[h: defaultSettings = json.append(&quot;&quot;,
	json.set(&quot;&quot;,&quot;name&quot;,&quot;freeActions&quot;,&quot;type&quot;,&quot;check&quot;,&quot;description&quot;,&quot;Free Actions&quot;,&quot;value&quot;,0,&quot;list&quot;,&quot;&quot;),
	json.set(&quot;&quot;,&quot;name&quot;,&quot;stunOnAmazingDamage&quot;,&quot;type&quot;,&quot;check&quot;,&quot;description&quot;,&quot;Stun on Amazing Damage&quot;,&quot;value&quot;,0,&quot;list&quot;,&quot;&quot;),
	json.set(&quot;&quot;,&quot;name&quot;,&quot;freePurchase&quot;,&quot;type&quot;,&quot;check&quot;,&quot;description&quot;,&quot;Free purchases for PCs&quot;,&quot;value&quot;,0,&quot;list&quot;,&quot;&quot;),
	json.set(&quot;&quot;,&quot;name&quot;,&quot;penaltyOnHalfMaxStun&quot;,&quot;type&quot;,&quot;check&quot;,&quot;description&quot;,&quot;+1 step if less than half stun remains&quot;,&quot;value&quot;,0,&quot;list&quot;,&quot;&quot;),
	json.set(&quot;&quot;,&quot;name&quot;,&quot;penaltyOnEvery2Wound&quot;,&quot;type&quot;,&quot;check&quot;,&quot;description&quot;,&quot;+1 step for every 2 wound suffered&quot;,&quot;value&quot;,0,&quot;list&quot;,&quot;&quot;),
	json.set(&quot;&quot;,&quot;name&quot;,&quot;penaltyOnEveryMortal&quot;,&quot;type&quot;,&quot;check&quot;,&quot;description&quot;,&quot;+1 step for every mortal suffered&quot;,&quot;value&quot;,0,&quot;list&quot;,&quot;&quot;),
	json.set(&quot;&quot;,&quot;name&quot;,&quot;penaltyOnEveryFatigue&quot;,&quot;type&quot;,&quot;check&quot;,&quot;description&quot;,&quot;+1 step for every fatigue suffered&quot;,&quot;value&quot;,0,&quot;list&quot;,&quot;&quot;)
	)
]
[h: defaultNames = &quot;&quot;]
[h, foreach(defaultSetting,defaultSettings): defaultNames = listAppend(defaultNames,json.get(defaultSetting,&quot;name&quot;))]

[h, if(names != defaultNames): settings = defaultSettings]

[h: varList = &quot;&quot;]

[h: inputString = &quot;[]&quot;]

[h, for(i,0,json.length(settings)), code :
	{
	[h: setting = json.get(settings,i)]

	[h: varsFromStrProp(json.toStrProp(setting))]
	[h, if(type == &quot;radio&quot;): inputString = json.append(inputString,&quot;var&quot;+i+&quot;|&quot;+list+&quot;|&quot;+description+&quot;|RADIO|Select = &quot;+value)]
	[h, if(type == &quot;check&quot;): inputString = json.append(inputString,&quot;var&quot;+i+&quot;|&quot;+value+&quot;|&quot;+description+&quot;|CHECK&quot;)]
	[h, if(type == &quot;list&quot;): inputString = json.append(inputString,&quot;var&quot;+i+&quot;|&quot;+list+&quot;|&quot;+description+&quot;|LIST|Select = &quot;+value)]
	
	[h: varList = listAppend(varList,name)]
	}
]
[h: inputString = json.evaluate(inputString)]
[h: abort(input(json.toList(inputString,&quot;##&quot;)))]
[h: newArray = &quot;[]&quot;]
[h, for(i,0,json.length(settings)), code :
	{
	[h: setting = json.get(settings,i)]
	[h: newEntry = json.set(&quot;&quot;,&quot;name&quot;,json.get(setting,&quot;name&quot;),&quot;type&quot;,json.get(setting,&quot;type&quot;),&quot;value&quot;,eval(&quot;var&quot;+i),&quot;list&quot;,json.get(setting,&quot;list&quot;),&quot;description&quot;,json.get(setting,&quot;description&quot;))]
	[h: newArray = json.append(newArray,newEntry)]
	}
]

[h: setLibProperty(&quot;GM Settings&quot;,newArray,&quot;Lib:bw&quot;)]</command>
        <label>GM Settings</label>
        <group>GM Tools</group>
        <sortby>100</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>white</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>197</index>
        <colorKey>darkgray</colorKey>
        <hotKey>None</hotKey>
        <command>[h: selectSelected()]
[h: achievementPoints = getProperty(&quot;Achievement Points&quot;,playerTokenID)]
[h: input(&quot;achievementPoints|&quot;+achievementPoints+&quot;|Achievement Points&quot;)]
[h: setProperty(&quot;Achievement Points&quot;,achievementPoints, playerTokenID)]</command>
        <label>Alter Xp</label>
        <group>Maintainance Tools</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>166</index>
        <colorKey>yellow</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h, macro(&quot;nextPhase@Lib:bw&quot;) : &quot;&quot;]</command>
        <label>combat results (nextPhase)</label>
        <group>Maintainance Tools</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>116</index>
        <colorKey>gray</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: playerTokenID = getSelected()]
[h: defineSkillTable(playerTokenID)]</command>
        <label>Define Skill Table Selected</label>
        <group>Maintainance Tools</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>203</index>
        <colorKey>gray</colorKey>
        <hotKey>None</hotKey>
        <command>[macro (&quot;preformNewCharacter@lib:bw&quot;): getSelected()]</command>
        <label>Preform New Character Selected</label>
        <group>Maintainance Tools</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>true</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>155</index>
        <colorKey>gray</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selected = getSelected()]
[h: strength = getProperty(&quot;Strength&quot;,selected)]
[h: dexterity = getProperty(&quot;Dexterity&quot;,selected)]

[h: naturalStatistics = getProperty(&quot;Natural Statistics&quot;,selected)]

[h: strDex = Strength + Dexterity]
[h, if (strDex &lt; 7), code: {[h: strDex = 7]}]
[h, if (strDex &gt; 32), code: {[h: strDex = 32]}]
[h: sprint = floor(strDex/2) * 2]
[h: run = floor(sprint * 2 / 3))]
[h: walk = ceiling(sprint / 4)]
[h: easySwim = 1]
[h, if(strDex &gt;= 14): easySwim = 2]
[h, if(strDex &gt;= 24): easySwim = 3]
[h, if(strDex &gt;= 30): easySwim = 4]
[h: swim = easySwim * 2]
[h: glide = sprint]
[h: fly = glide * 2]

[h: race = getProperty(&quot;Race&quot;,selected)]
[h, if(race != &quot;T&apos;sa&quot;): glide = 0]
[h, if(race != &quot;T&apos;sa&quot;): fly = 0]

[h: naturalStatistics = json.set(naturalStatistics,&quot;Walk&quot;,walk,&quot;Run&quot;,run,&quot;Sprint&quot;,sprint,&quot;Easy Swim&quot;,easySwim,&quot;Swim&quot;,swim,&quot;Glide&quot;,glide,&quot;Fly&quot;,fly)]

[h: setProperty(&quot;Natural Statistics&quot;, naturalStatistics, selected)]

[h: setProperty(&quot;Sprint&quot;,sprint,selected)]
[h: setProperty(&quot;Run&quot;,run,selected)]
[h: setProperty(&quot;Walk&quot;,walk,selected)]
[h: movement = getProperty(&quot;Movement&quot;,selected)]
[h: movement = setStrProp(movement, &quot;declared&quot;, &quot;Walk&quot;)]
[h: movement = setStrProp(movement, &quot;walk&quot;, walk)]
[h: movement = setStrProp(movement, &quot;run&quot;, run)]
[h: movement = setStrProp(movement, &quot;sprint&quot;, sprint)]
[h: tokenX = getTokenX(1,selected)]
[h: movement = setStrProp(movement, &quot;tokenX&quot;, tokenX)]
[h: tokenY = getTokenY(1,selected)]
[h: movement = setStrProp(movement, &quot;tokenY&quot;, tokenY)]
[h: setProperty(&quot;Movement&quot;,movement,selected)]
[h: move = &quot;Walk: &quot; + walk]
[h: setProperty(&quot;Move&quot;,move,selected)]</command>
        <label>PreformMovementSelected</label>
        <group>Maintainance Tools</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>CampaignPanel</saveLocation>
        <index>154</index>
        <colorKey>gray</colorKey>
        <hotKey>None</hotKey>
        <command>[h: assert(isGM(), &quot;This macro is for GMs only&quot;, 0)]

[h: selected = getSelected()]
[h: dexterity = getProperty(&quot;Dexterity&quot;,selected)]
[h: intelligence = getProperty(&quot;Intelligence&quot;,selected)]
[h: constitution = getProperty(&quot;Constitution&quot;,selected)]
[h: willpower = getProperty(&quot;Willpower&quot;,selected)]
[h: personality = getProperty(&quot;Personality&quot;,selected)]
[h: profession = getProperty(&quot;Profession&quot;,selected)]
[h: race = getProperty(&quot;Race&quot;,selected)]



[h: conWill = constitution + willpower]

[h, if(conWill &lt; 16), code : {[h:actionsPerRound = 1]};{}]
[h, if((conWill &gt;= 16) &amp;&amp; (conWill &lt; 24)), code : {[h:actionsPerRound = 2]};{}]
[h, if((conWill &gt;= 24) &amp;&amp; (conWill &lt; 32)), code : {[h:actionsPerRound = 3]};{}]
[h, if(conWill &gt;= 32), code : {[h:actionsPerRound = 4]};{}]

[h: setProperty(&quot;Actions&quot;,actionsPerRound,selected)]

[h, if(personality &lt; 8), code : {[h: lastResortMax = 0][h: lastResortCost = 1000]};{}]
[h, if((personality &gt;= 8)&amp;&amp;(personality &lt; 11)), code : {[h: lastResortMax = 1][h: lastResortCost = 3]};{}]
[h, if((personality &gt;= 11)&amp;&amp;(personality &lt; 13)), code : {[h: lastResortMax = 2][h: lastResortCost = 2]};{}]
[h, if((personality &gt;= 13)&amp;&amp;(personality &lt; 15)), code : {[h: lastResortMax = 3][h: lastResortCost = 1]};{}]
[h, if(personality &gt;= 15), code : {[h: lastResortMax = 4][h: lastResortCost = 1]};{}]

[h: lastResortPrep = json.set(&quot;&quot;,&quot;Max&quot;,lastResortMax,&quot;Cost&quot;,lastResortCost)]

[h: setProperty(&quot;Last Resorts&quot;,lastResortPrep,selected)]




[h: actionScore = (dexterity + intelligence) / 2]

[h, switch(profession), code:
case &quot;Combat Spec&quot; : {[h: actionScore = actionScore + 3]};
case &quot;Diplomat&quot; : {[h: actionScore = actionScore + 1]};
case &quot;Free Agent&quot; : {[h: actionScore = actionScore + 2]
	[h: lastResortMax = lastResortMax + 1]};
case &quot;Tech Op&quot; : {[h: actionScore = actionScore + 1]};
default: {[h: assert(0, &quot;switch(profession)&quot;, 1)]}]

[h: actionScore = floor(actionScore)]
[h: actionScoreGood = floor(actionScore/2)]
[h: actionScoreAmazing = floor(actionScoreGood/2)]

[h: actionCheck = json.set(&quot;&quot;,&quot;Marginal&quot;,actionScore+1,&quot;Ordinary&quot;,actionScore,&quot;Good&quot;,actionScoreGood,&quot;Amazing&quot;,actionScoreAmazing)]

[h: setProperty(&quot;Action Check&quot;, actionCheck, selected)]


[h: stun = constitution]

[h, if(race == &quot;Weren&quot;), code :{[h:stun = floor(stun*1.5)]};{}]

[h: wound = stun]
[h: mortal = ceil(constitution/2)]
[h: fatigue = mortal]

[h: naturalStats = json.set(&quot;&quot;,&quot;Stun&quot;,stun,&quot;Wound&quot;,wound,&quot;Mortal&quot;,mortal,&quot;Fatigue&quot;,fatigue,&quot;Actions Per Round&quot;,actionsPerRound)]

[h: setProperty(&quot;Natural Statistics&quot;,naturalStats,selected)]

[h: equipmentInput = json.set(&quot;&quot;,&quot;Head&quot;,&quot;&quot;,&quot;Head Type&quot;,&quot;&quot;,&quot;Body&quot;,&quot;&quot;,&quot;Body Type&quot;,&quot;&quot;,&quot;Main Hand&quot;,&quot;&quot;,&quot;Main Hand Type&quot;,&quot;&quot;,&quot;Off Hand&quot;,&quot;&quot;,&quot;Off Hand Type&quot;,&quot;&quot;,&quot;Accessory&quot;,&quot;&quot;,&quot;Accessory Type&quot;,&quot;&quot;)]
[h: setProperty(&quot;Equipment&quot;,equipmentInput,selected)]

[h: &apos;&lt;!-- Unarmed Damage --&gt;&apos;]

[h: brawlRank = json.get(json.get(getProperty(&quot;Skills&quot;,selected),&quot;Brawl&quot;),&quot;Rank&quot;)]
[h: powerMartialArtsRank = json.get(json.get(getProperty(&quot;Skills&quot;,selected),&quot;Power Martial Arts&quot;),&quot;Rank&quot;)]

[h, if (powerMartialArtsRank &gt;= 1), code :{
	[h: unarmedDamage = &quot;1d6+0s/1d6+2s/1d4+0w&quot;]
	};{
	[h: unarmedDamage = &quot;1d4+0s/1d4+1s/1d4+2s&quot;]
	}
]

[h, if (race == &quot;Weren&quot;), code :
	{
	[h: unarmedDamage = &quot;1d4+0w/1d4+2w/1d4+0m&quot;]
	};{
	}
]

[h: strength = getProperty(&quot;Strength&quot;,selected)]
[h: strength = ceil(strength/2) * 2]
[h, if (strength &lt; 6): strength = 6]
[h, if (strength &gt; 20): strength = 20]
[h, switch(strength), code :
	case 6: {[h: modifier = -1]};
	case 8: {[h: modifier = 0]};
	case 10: {[h: modifier = 0]};
	case 12: {[h: modifier = 1]};
	case 14: {[h: modifier = 2]};
	case 16: {[h: modifier = 3]};
	case 18: {[h: modifier = 4]};
	case 20: {[h: modifier = 5]};
	default: {[h: assert(0,&quot;switch(strength) invalid parameter value&quot;,1)]}
]

[h: damageParser(unarmedDamage)]

[h: object = macro.return]
[h: strPropObject = json.toStrProp(object)]
[h: varsFromStrProp(strPropObject)]

[h, if ((brawlRank &gt;= 1) || (powerMartialArtsRank &gt;= 1)), code :{
	[h: baseDie = &quot;+d0&quot;]
	};{
	[h: baseDie = &quot;+d4&quot;]
	}
]

[h: ordinaryModifier = ordinaryModifier + modifier]
[h: goodModifier = goodModifier + modifier]
[h: amazingModifier = amazingModifier + modifier]
[h: ordinaryString = ordinaryQuantity + &quot;d&quot; + ordinarySides + ordinarySign + ordinaryModifier]
[h: goodString = goodQuantity + &quot;d&quot; + goodSides + goodSign + goodModifier]
[h: amazingString = amazingQuantity + &quot;d&quot; + amazingSides + amazingSign + amazingModifier]

[h: object = json.set(object, &quot;baseDie&quot;, baseDie, &quot;ordinaryModifier&quot;, ordinaryModifier, &quot;goodModifier&quot;, goodModifier, &quot;amazingModifier&quot;, amazingModifier, &quot;ordinaryString&quot;, ordinaryString , &quot;goodString&quot;, goodString, &quot;amazingString&quot;, amazingString)]

[h: setProperty(&quot;Unarmed Statistics&quot;,object,selected)]
</command>
        <label>PreformStatsSelected</label>
        <group>Maintainance Tools</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </macroButtonProperties>
    <macroButtonLastIndex>0</macroButtonLastIndex>
    <gmMacroButtonLastIndex>0</gmMacroButtonLastIndex>
    <gmMacroButtonProperties/>
  </campaign>
  <assetMap>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/campaignProperties/tokenStates/entry[2]/net.rptools.maptool.client.ui.token.CornerImageTokenOverlay/assetId"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/zones/entry/net.rptools.maptool.model.Zone/tokenMap/entry[4]/net.rptools.maptool.model.Token/imageAssetMap/entry/net.rptools.lib.MD5Key"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/campaignProperties/tokenStates/entry/net.rptools.maptool.client.ui.token.CornerImageTokenOverlay/assetId"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/zones/entry/net.rptools.maptool.model.Zone/tokenMap/entry[3]/net.rptools.maptool.model.Token/imageAssetMap/entry/net.rptools.lib.MD5Key"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/zones/entry/net.rptools.maptool.model.Zone/tokenMap/entry[2]/net.rptools.maptool.model.Token/imageAssetMap/entry/net.rptools.lib.MD5Key"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/campaignProperties/tokenStates/entry[4]/net.rptools.maptool.client.ui.token.CornerImageTokenOverlay/assetId"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/campaignProperties/tokenStates/entry[3]/net.rptools.maptool.client.ui.token.ImageTokenOverlay/assetId"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/zones/entry/net.rptools.maptool.model.Zone/backgroundPaint/assetId"/>
      <null/>
    </entry>
    <entry>
      <net.rptools.lib.MD5Key reference="../../../campaign/zones/entry/net.rptools.maptool.model.Zone/tokenMap/entry/net.rptools.maptool.model.Token/imageAssetMap/entry/net.rptools.lib.MD5Key"/>
      <null/>
    </entry>
  </assetMap>
  <currentZoneId reference="../campaign/zones/entry/net.rptools.maptool.model.GUID"/>
  <currentView>
    <oneToOneScale>1.0</oneToOneScale>
    <scale>1.0</scale>
    <scaleIncrement>0.075</scaleIncrement>
    <zoomLevel>0</zoomLevel>
    <offsetX>-90</offsetX>
    <offsetY>-23</offsetY>
    <width>0</width>
    <height>0</height>
    <initialized>false</initialized>
  </currentView>
</net.rptools.maptool.util.PersistenceUtil_-PersistedCampaign>
